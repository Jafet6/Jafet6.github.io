{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-block15-project-frontend-online-store-13/src/components/BuyersInfo.jsx\";\nimport React from 'react';\nconst estadosArr = ['AC', 'AL', 'AP', 'AM', 'BA', 'CE', 'DF', 'ES', 'GO', 'MA', 'MT', 'MS', 'MG', 'PA', 'PB', 'PR', 'PE', 'PI', 'RJ', 'RN', 'RS', 'RO', 'RR', 'SC', 'SP', 'SE', 'TO'];\n\nclass BuyersInfo extends React.Component {\n  constructor(props) {\n    super(props); // this.state = {\n    //   name: '',\n    //   email: '',\n    //   cpf: '',\n    //   phone: '',\n    //   cep: '',\n    //   address: '',\n    //   compl: '',\n    //   addressNum: '',\n    //   city: '',\n    //   state: 'AC',\n    // };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    const {\n      onChange\n    } = this.props;\n    onChange(name, value);\n  }\n\n  inputCreator(testId, htmlForID, title, type, name, value) {\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: htmlForID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": testId,\n      type: type,\n      id: htmlForID,\n      name: name,\n      placeholder: title,\n      onChange: this.handleChange,\n      value: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  inputCreatorStates() {\n    return /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.handleChange,\n      name: \"state\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, estadosArr.map(e => /*#__PURE__*/React.createElement(\"option\", {\n      key: e,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, e)));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, \"Informa\\xE7\\xF5es do Comprador\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"personal-data-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, this.inputCreator('checkout-fullname', 'name', 'Nome completo', 'text', 'name'), this.inputCreator('checkout-email', 'email', 'E-mail', 'email', 'email'), this.inputCreator('checkout-cpf', 'cpf', 'CPF', 'text', 'cpf'), this.inputCreator('checkout-phone', 'phone', 'Telefone', 'text', 'phone'), this.inputCreator('checkout-cep', 'cep', 'CEP', 'text', 'cep'), this.inputCreator('checkout-address', 'address', 'Endereço', 'text', 'address'), this.inputCreator('checkout-address', 'compl', 'Complemento', 'text', 'compl'), this.inputCreator('checkout-address', 'adNumb', 'Número', 'text', 'addressNum'), this.inputCreator('checkout-address', 'city', 'Cidade', 'text', 'city'), this.inputCreatorStates()));\n  }\n\n}\n\nexport default BuyersInfo;","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-block15-project-frontend-online-store-13/src/components/BuyersInfo.jsx"],"names":["React","estadosArr","BuyersInfo","Component","constructor","props","handleChange","bind","event","name","value","target","onChange","inputCreator","testId","htmlForID","title","type","inputCreatorStates","map","e","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nconst estadosArr = ['AC', 'AL', 'AP', 'AM', 'BA', 'CE', 'DF', 'ES',\n  'GO', 'MA', 'MT', 'MS', 'MG', 'PA', 'PB', 'PR', 'PE', 'PI', 'RJ',\n  'RN', 'RS', 'RO', 'RR', 'SC', 'SP', 'SE', 'TO',\n];\n\nclass BuyersInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    // this.state = {\n    //   name: '',\n    //   email: '',\n    //   cpf: '',\n    //   phone: '',\n    //   cep: '',\n    //   address: '',\n    //   compl: '',\n    //   addressNum: '',\n    //   city: '',\n    //   state: 'AC',\n    // };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target;\n    const { onChange } = this.props;\n    onChange(name, value);\n  }\n\n  inputCreator(testId, htmlForID, title, type, name, value) {\n    return (\n      <label htmlFor={htmlForID}>\n        <input\n          data-testid={testId}\n          type={type}\n          id={htmlForID}\n          name={name}\n          placeholder={title}\n          onChange={this.handleChange}\n          value={value}\n        />\n      </label>\n    );\n  }\n\n  inputCreatorStates() {\n    return (\n      <select onChange={this.handleChange} name=\"state\">\n        {estadosArr.map((e) => (\n          <option key={e}>{e}</option>\n        ))}\n      </select>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Informações do Comprador</h3>\n        <form className=\"personal-data-form\">\n          {this.inputCreator('checkout-fullname', 'name', 'Nome completo', 'text', 'name')}\n          {this.inputCreator('checkout-email', 'email', 'E-mail', 'email', 'email')}\n          {this.inputCreator('checkout-cpf', 'cpf', 'CPF', 'text', 'cpf')}\n          {this.inputCreator('checkout-phone', 'phone', 'Telefone', 'text', 'phone')}\n          {this.inputCreator('checkout-cep', 'cep', 'CEP', 'text', 'cep')}\n          {this.inputCreator('checkout-address', 'address', 'Endereço', 'text', 'address')}\n          {this.inputCreator('checkout-address', 'compl', 'Complemento', 'text', 'compl')}\n          {this.inputCreator('checkout-address', 'adNumb', 'Número', 'text', 'addressNum')}\n          {this.inputCreator('checkout-address', 'city', 'Cidade', 'text', 'city')}\n          {this.inputCreatorStates()}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default BuyersInfo;\n"]},"metadata":{},"sourceType":"module"}