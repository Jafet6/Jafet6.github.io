{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-block15-project-frontend-online-store-13/src/components/BuyersInfo.jsx\";\nimport React from 'react';\nconst estadosArr = ['AC', 'AL', 'AP', 'AM', 'BA', 'CE', 'DF', 'ES', 'GO', 'MA', 'MT', 'MS', 'MG', 'PA', 'PB', 'PR', 'PE', 'PI', 'RJ', 'RN', 'RS', 'RO', 'RR', 'SC', 'SP', 'SE', 'TO'];\n\nclass BuyersInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      cpf: '',\n      phone: '',\n      cep: '',\n      address: '',\n      compl: '',\n      addressNum: '',\n      city: '',\n      state: 'AC'\n    }; // this.handleChange = this.handleChange.bind(this);\n  } // handleChange(event) {\n  //   const { name, value } = event.target;\n  //   this.setState({\n  //     [name]: value,\n  //   });\n  // }\n\n\n  inputCreator(testId, htmlForID, title, type, name, value) {\n    const {\n      onChange\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: htmlForID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": testId,\n      type: type,\n      id: htmlForID,\n      name: name,\n      placeholder: title,\n      onChange: () => onChange(name, value),\n      value: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  inputCreatorStates() {\n    const {\n      state\n    } = this.state;\n    const {\n      onChange\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"select\", {\n      onChange: onChange,\n      name: \"state\",\n      value: state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, estadosArr.map(e => /*#__PURE__*/React.createElement(\"option\", {\n      key: e,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, e)));\n  }\n\n  render() {\n    const {\n      name,\n      email,\n      cpf,\n      phone,\n      cep,\n      address,\n      compl,\n      addressNum,\n      city\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, \"Informa\\xE7\\xF5es do Comprador\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"personal-data-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, this.inputCreator('checkout-fullname', 'name', 'Nome completo', 'text', 'name', name), this.inputCreator('checkout-email', 'email', 'E-mail', 'email', 'email', email), this.inputCreator('checkout-cpf', 'cpf', 'CPF', 'text', 'cpf', cpf), this.inputCreator('checkout-phone', 'phone', 'Telefone', 'text', 'phone', phone), this.inputCreator('checkout-cep', 'cep', 'CEP', 'text', 'cep', cep), this.inputCreator('checkout-address', 'address', 'Endereço', 'text', 'address', address), this.inputCreator('checkout-address', 'compl', 'Complemento', 'text', 'compl', compl), this.inputCreator('checkout-address', 'adNumb', 'Número', 'text', 'addressNum', addressNum), this.inputCreator('checkout-address', 'city', 'Cidade', 'text', 'city', city), this.inputCreatorStates()));\n  }\n\n}\n\nexport default BuyersInfo;","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-block15-project-frontend-online-store-13/src/components/BuyersInfo.jsx"],"names":["React","estadosArr","BuyersInfo","Component","constructor","props","state","name","email","cpf","phone","cep","address","compl","addressNum","city","inputCreator","testId","htmlForID","title","type","value","onChange","inputCreatorStates","map","e","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nconst estadosArr = ['AC', 'AL', 'AP', 'AM', 'BA', 'CE', 'DF', 'ES',\n  'GO', 'MA', 'MT', 'MS', 'MG', 'PA', 'PB', 'PR', 'PE', 'PI', 'RJ',\n  'RN', 'RS', 'RO', 'RR', 'SC', 'SP', 'SE', 'TO',\n];\n\nclass BuyersInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      cpf: '',\n      phone: '',\n      cep: '',\n      address: '',\n      compl: '',\n      addressNum: '',\n      city: '',\n      state: 'AC',\n    };\n    // this.handleChange = this.handleChange.bind(this);\n  }\n\n  // handleChange(event) {\n  //   const { name, value } = event.target;\n  //   this.setState({\n  //     [name]: value,\n  //   });\n  // }\n\n  inputCreator(testId, htmlForID, title, type, name, value) {\n    const { onChange } = this.props;\n    return (\n      <label htmlFor={htmlForID}>\n        <input\n          data-testid={testId}\n          type={type}\n          id={htmlForID}\n          name={name}\n          placeholder={title}\n          onChange={() => onChange(name, value)}\n          value={value}\n        />\n      </label>\n    );\n  }\n\n  inputCreatorStates() {\n    const { state } = this.state;\n    const { onChange } = this.props;\n    return (\n      <select onChange={onChange} name=\"state\" value={state}>\n        {estadosArr.map((e) => (\n          <option key={e}>{e}</option>\n        ))}\n      </select>\n    );\n  }\n\n  render() {\n    const {\n      name,\n      email,\n      cpf,\n      phone,\n      cep,\n      address,\n      compl,\n      addressNum,\n      city,\n    } = this.state;\n    return (\n      <div>\n        <h3>Informações do Comprador</h3>\n        <form className=\"personal-data-form\">\n          {this.inputCreator('checkout-fullname', 'name', 'Nome completo', 'text', 'name', name)}\n          {this.inputCreator('checkout-email', 'email', 'E-mail', 'email', 'email', email)}\n          {this.inputCreator('checkout-cpf', 'cpf', 'CPF', 'text', 'cpf', cpf)}\n          {this.inputCreator('checkout-phone', 'phone', 'Telefone', 'text', 'phone', phone)}\n          {this.inputCreator('checkout-cep', 'cep', 'CEP', 'text', 'cep', cep)}\n          {this.inputCreator('checkout-address', 'address', 'Endereço', 'text', 'address', address)}\n          {this.inputCreator('checkout-address', 'compl', 'Complemento', 'text', 'compl', compl)}\n          {this.inputCreator('checkout-address', 'adNumb', 'Número', 'text', 'addressNum', addressNum)}\n          {this.inputCreator('checkout-address', 'city', 'Cidade', 'text', 'city', city)}\n          {this.inputCreatorStates()}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default BuyersInfo;\n"]},"metadata":{},"sourceType":"module"}