{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-block14-project-movie-card-library-crud/src/pages/EditMovie.js\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { MovieForm, Loading } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: 'loading',\n      shouldRedirect: false,\n      movie: {}\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    movieAPI.getMovie(this.props.match.params.id).then(resp => {\n      this.setState({\n        movie: resp,\n        status: 'loaded'\n      });\n    });\n  }\n\n  handleSubmit(updatedMovie) {\n    movieAPI.updateMovie(updatedMovie).then(() => {\n      this.setState({\n        shouldRedirect: true\n      });\n    });\n  }\n\n  render() {\n    const {\n      status,\n      shouldRedirect,\n      movie\n    } = this.state;\n    console.log(this.props);\n\n    if (shouldRedirect) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: '/',\n          state: this.state.movie\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      });\n    }\n\n    if (status === 'loading') {\n      return /*#__PURE__*/React.createElement(Loading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"edit-movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MovieForm, {\n      movie: movie,\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default EditMovie;\nEditMovie.defaultProps = {\n  match: {\n    params: {\n      id: ''\n    }\n  }\n};\nEditMovie.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    })\n  })\n};","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-block14-project-movie-card-library-crud/src/pages/EditMovie.js"],"names":["PropTypes","React","Component","Redirect","MovieForm","Loading","movieAPI","EditMovie","constructor","props","state","status","shouldRedirect","movie","handleSubmit","bind","componentDidMount","getMovie","match","params","id","then","resp","setState","updatedMovie","updateMovie","render","console","log","pathname","defaultProps","propTypes","shape","string","isRequired"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,eAAnC;AACA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B;;AAEA,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAChCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,SADG;AAEXC,MAAAA,cAAc,EAAE,KAFL;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBV,IAAAA,QAAQ,CAACW,QAAT,CAAkB,KAAKR,KAAL,CAAWS,KAAX,CAAiBC,MAAjB,CAAwBC,EAA1C,EAA8CC,IAA9C,CAAoDC,IAAD,IAAU;AAC3D,WAAKC,QAAL,CAAc;AACZV,QAAAA,KAAK,EAAES,IADK;AAEZX,QAAAA,MAAM,EAAE;AAFI,OAAd;AAID,KALD;AAMD;;AAEDG,EAAAA,YAAY,CAACU,YAAD,EAAe;AACzBlB,IAAAA,QAAQ,CAACmB,WAAT,CAAqBD,YAArB,EAAmCH,IAAnC,CAAwC,MAAM;AAC5C,WAAKE,QAAL,CAAc;AAAEX,QAAAA,cAAc,EAAE;AAAlB,OAAd;AACD,KAFD;AAGD;;AAEDc,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEf,MAAAA,MAAF;AAAUC,MAAAA,cAAV;AAA0BC,MAAAA;AAA1B,QAAoC,KAAKH,KAA/C;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAjB;;AACA,QAAIG,cAAJ,EAAoB;AAClB,0BACE,oBAAC,QAAD;AACE,QAAA,EAAE,EAAE;AACFiB,UAAAA,QAAQ,EAAE,GADR;AAEFnB,UAAAA,KAAK,EAAE,KAAKA,KAAL,CAAWG;AAFhB,SADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAQD;;AAED,QAAIF,MAAM,KAAK,SAAf,EAA0B;AACxB,0BAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,wBACE;AAAK,qBAAY,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAEE,KAAlB;AAAyB,MAAA,QAAQ,EAAE,KAAKC,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAjD+B;;AAoDlC,eAAeP,SAAf;AAEAA,SAAS,CAACuB,YAAV,GAAyB;AACvBZ,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE;AACNC,MAAAA,EAAE,EAAE;AADE;AADH;AADgB,CAAzB;AAQAb,SAAS,CAACwB,SAAV,GAAsB;AACpBb,EAAAA,KAAK,EAAElB,SAAS,CAACgC,KAAV,CAAgB;AACrBb,IAAAA,MAAM,EAAEnB,SAAS,CAACgC,KAAV,CAAgB;AACtBZ,MAAAA,EAAE,EAAEpB,SAAS,CAACiC,MAAV,CAAiBC;AADC,KAAhB;AADa,GAAhB;AADa,CAAtB","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { MovieForm, Loading } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: 'loading',\n      shouldRedirect: false,\n      movie: {},\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    movieAPI.getMovie(this.props.match.params.id).then((resp) => {\n      this.setState({\n        movie: resp,\n        status: 'loaded',\n      });\n    });\n  }\n\n  handleSubmit(updatedMovie) {\n    movieAPI.updateMovie(updatedMovie).then(() => {\n      this.setState({ shouldRedirect: true });\n    });\n  }\n\n  render() {\n    const { status, shouldRedirect, movie } = this.state;\n    console.log(this.props);\n    if (shouldRedirect) {\n      return (\n        <Redirect\n          to={{\n            pathname: '/',\n            state: this.state.movie,\n          }}\n        />\n      );\n    }\n\n    if (status === 'loading') {\n      return <Loading />;\n    }\n\n    return (\n      <div data-testid=\"edit-movie\">\n        <MovieForm movie={movie} onSubmit={this.handleSubmit} />\n      </div>\n    );\n  }\n}\n\nexport default EditMovie;\n\nEditMovie.defaultProps = {\n  match: {\n    params: {\n      id: '',\n    },\n  },\n};\n\nEditMovie.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  }),\n};\n"]},"metadata":{},"sourceType":"module"}