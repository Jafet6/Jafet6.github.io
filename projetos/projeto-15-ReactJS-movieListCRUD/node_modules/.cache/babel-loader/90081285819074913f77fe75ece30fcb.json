{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-block14-project-movie-card-library-crud/src/pages/MovieList.js\";\nimport React, { Component } from 'react';\nimport MovieCard from '../components/MovieCard';\nimport Loading from '../components/Loading';\nimport * as movieAPI from '../services/movieAPI';\n\nclass MovieList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: []\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.location.state) {\n      this.setState({\n        movies: this.props.location.state\n      });\n    }\n\n    movieAPI.getMovies().then(resp => {\n      this.setState({\n        movies: resp\n      });\n    });\n  }\n\n  render() {\n    const {\n      movies\n    } = this.state;\n\n    if (movies.length === 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Loading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        \"data-testid\": \"movie-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }, movies.map(movie => /*#__PURE__*/React.createElement(MovieCard, {\n        key: movie.title,\n        movie: movie,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 34\n        }\n      })));\n    }\n  }\n\n}\n\nexport default MovieList;","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-block14-project-movie-card-library-crud/src/pages/MovieList.js"],"names":["React","Component","MovieCard","Loading","movieAPI","MovieList","constructor","props","state","movies","componentDidMount","location","setState","getMovies","then","resp","render","length","map","movie","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B;;AAEA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAChCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAG,KAAKH,KAAL,CAAWI,QAAX,CAAoBH,KAAvB,EAA8B;AAC5B,WAAKI,QAAL,CAAc;AAAEH,QAAAA,MAAM,EAAE,KAAKF,KAAL,CAAWI,QAAX,CAAoBH;AAA9B,OAAd;AACD;;AACDJ,IAAAA,QAAQ,CAACS,SAAT,GAAqBC,IAArB,CAA2BC,IAAD,IAAU;AAClC,WAAKH,QAAL,CAAc;AAAEH,QAAAA,MAAM,EAAEM;AAAV,OAAd;AACD,KAFD;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA;AAAF,QAAa,KAAKD,KAAxB;;AACA,QAAIC,MAAM,CAACQ,MAAP,KAAkB,CAAtB,EAAyB;AACvB,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD,KAND,MAMO;AACL,0BACE;AAAK,uBAAY,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGR,MAAM,CAACS,GAAP,CAAYC,KAAD,iBAAW,oBAAC,SAAD;AAAW,QAAA,GAAG,EAAEA,KAAK,CAACC,KAAtB;AAA6B,QAAA,KAAK,EAAED,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAtB,CADH,CADF;AAKD;AAEF;;AAjC+B;;AAoClC,eAAed,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport MovieCard from '../components/MovieCard';\nimport Loading from '../components/Loading';\n\nimport * as movieAPI from '../services/movieAPI';\n\nclass MovieList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: [],\n    }\n  }\n\n  componentDidMount() {\n    if(this.props.location.state) {\n      this.setState({ movies: this.props.location.state })\n    }\n    movieAPI.getMovies().then((resp) => {\n      this.setState({ movies: resp, })\n    })\n  }  \n\n  render() {\n    const { movies } = this.state;\n    if (movies.length === 0) {\n      return (\n        <div>\n          <Loading />\n        </div>\n      );\n    } else {\n      return (\n        <div data-testid=\"movie-list\">\n          {movies.map((movie) => <MovieCard key={movie.title} movie={movie} />)}\n        </div>\n      );\n    }\n\n  }\n}\n\nexport default MovieList;\n"]},"metadata":{},"sourceType":"module"}