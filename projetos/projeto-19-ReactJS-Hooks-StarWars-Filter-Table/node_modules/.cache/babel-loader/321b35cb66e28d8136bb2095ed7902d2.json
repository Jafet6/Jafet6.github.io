{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-project-starwars-datatable-hooks/src/provider/FiltersProvider.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport FiltersContext from '../context/FiltersContext';\n\nconst FiltersProvider = ({\n  children\n}) => {\n  const [column, setColumn] = useState('all');\n  const [comparison, setComparison] = useState('');\n  const [name, setName] = useState('');\n  const [sortType, setSortType] = useState('ASC');\n  const [sortColumn, setSortColumn] = useState('Name');\n  const [numericValue, setNumericValue] = useState('');\n  const [filterByNumericValues, setFilterByNumericValues] = useState([]);\n  const [order, setOrder] = useState({\n    column: 'Name',\n    sort: 'ASC'\n  });\n\n  const onChangeText = event => {\n    const {\n      value\n    } = event.target;\n    setName(value);\n  };\n\n  const setColumnFunc = selectedcolumn => setColumn(selectedcolumn);\n\n  const setComparisonFunc = selectedComparison => setComparison(selectedComparison);\n\n  const setNumericValueFunc = number => setNumericValue(number);\n\n  const filterByNumericValuesFunc = array => {\n    setFilterByNumericValues(array);\n  };\n\n  const setSortColumnFunc = columnSelected => setSortColumn(columnSelected);\n\n  const setSortTypeFunc = type => setSortType(type);\n\n  const setOrderFunc = newObj => setOrder(newObj);\n\n  const filtersContextObj = {\n    filters: {\n      filterByName: {\n        name\n      },\n      filterByNumericValues,\n      order\n    },\n    onChangeText,\n    setColumnFunc,\n    column,\n    setComparisonFunc,\n    comparison,\n    setNumericValueFunc,\n    numericValue,\n    filterByNumericValuesFunc,\n    setOrderFunc,\n    sortType,\n    setSortTypeFunc,\n    sortColumn,\n    setSortColumnFunc\n  };\n  return /*#__PURE__*/React.createElement(FiltersContext.Provider, {\n    value: filtersContextObj,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport default FiltersProvider;\nFiltersProvider.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired\n};","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-project-starwars-datatable-hooks/src/provider/FiltersProvider.js"],"names":["React","useState","PropTypes","FiltersContext","FiltersProvider","children","column","setColumn","comparison","setComparison","name","setName","sortType","setSortType","sortColumn","setSortColumn","numericValue","setNumericValue","filterByNumericValues","setFilterByNumericValues","order","setOrder","sort","onChangeText","event","value","target","setColumnFunc","selectedcolumn","setComparisonFunc","selectedComparison","setNumericValueFunc","number","filterByNumericValuesFunc","array","setSortColumnFunc","columnSelected","setSortTypeFunc","type","setOrderFunc","newObj","filtersContextObj","filters","filterByName","propTypes","oneOfType","arrayOf","node","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport FiltersContext from '../context/FiltersContext';\n\nconst FiltersProvider = ({ children }) => {\n  const [column, setColumn] = useState('all');\n  const [comparison, setComparison] = useState('');\n  const [name, setName] = useState('');\n\n  const [sortType, setSortType] = useState('ASC');\n  const [sortColumn, setSortColumn] = useState('Name');\n\n  const [numericValue, setNumericValue] = useState('');\n  const [filterByNumericValues, setFilterByNumericValues] = useState([]);\n  const [order, setOrder] = useState({ column: 'Name', sort: 'ASC' });\n\n  const onChangeText = (event) => {\n    const { value } = event.target;\n    setName(value);\n  };\n\n  const setColumnFunc = (selectedcolumn) => setColumn(selectedcolumn);\n  const setComparisonFunc = (selectedComparison) => setComparison(selectedComparison);\n  const setNumericValueFunc = (number) => setNumericValue(number);\n  const filterByNumericValuesFunc = (array) => {\n    setFilterByNumericValues(array);\n  };\n\n  const setSortColumnFunc = (columnSelected) => setSortColumn(columnSelected);\n  const setSortTypeFunc = (type) => setSortType(type);\n\n  const setOrderFunc = (newObj) => setOrder(newObj);\n\n  const filtersContextObj = {\n    filters: {\n      filterByName: {\n        name,\n      },\n      filterByNumericValues,\n      order,\n    },\n    onChangeText,\n    setColumnFunc,\n    column,\n    setComparisonFunc,\n    comparison,\n    setNumericValueFunc,\n    numericValue,\n    filterByNumericValuesFunc,\n    setOrderFunc,\n    sortType,\n    setSortTypeFunc,\n    sortColumn,\n    setSortColumnFunc,\n  };\n\n  return (\n    <FiltersContext.Provider value={filtersContextObj}>\n      {children}\n    </FiltersContext.Provider>\n  );\n};\n\nexport default FiltersProvider;\n\nFiltersProvider.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}