{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-project-starwars-datatable-hooks/src/components/Inputs.js\";\nimport React, { useContext } from 'react';\nimport FiltersContext from '../context/FiltersContext'; // import PropTypes from 'prop-types';\n\nimport AllFiltersArrContext from '../context/AllFiltersArrContext';\n\nconst Searchbar = () => {\n  const {\n    onChangeText,\n    filters\n  } = useContext(FiltersContext);\n  const {\n    filterByName: {\n      name\n    }\n  } = filters;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"searchbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"name-filter\",\n    type: \"text\",\n    onChange: onChangeText,\n    id: \"searchbar\",\n    name: \"searchbar\",\n    value: name,\n    placeholder: \"Digite um nome de planeta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst NumericSearchCol = () => {\n  const {\n    setColumnFunc,\n    column\n  } = useContext(FiltersContext);\n  const {\n    allFiltersArr\n  } = useContext(AllFiltersArrContext);\n  return /*#__PURE__*/React.createElement(\"select\", {\n    onChange: e => setColumnFunc(e.target.value),\n    value: column,\n    name: \"column\",\n    \"data-testid\": \"column-filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, allFiltersArr.map(e => /*#__PURE__*/React.createElement(\"option\", {\n    key: e,\n    value: e,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 34\n    }\n  }, e)));\n};\n\nconst NumericSearchGreat = () => {\n  const {\n    setComparisonFunc,\n    comparison\n  } = useContext(FiltersContext);\n  return /*#__PURE__*/React.createElement(\"select\", {\n    onChange: e => setComparisonFunc(e.target.value),\n    value: comparison,\n    name: \"comparison\",\n    \"data-testid\": \"comparison-filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"maior que\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"maior que\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"igual a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"igual a\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"menor que\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"menor que\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst NumericSearchValue = () => {\n  const {\n    setNumericValueFunc,\n    numericValue\n  } = useContext(FiltersContext);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"numericValue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"value-filter\",\n    type: \"number\",\n    onChange: e => setNumericValueFunc(e.target.value),\n    id: \"numericValue\",\n    name: \"value\",\n    value: numericValue,\n    placeholder: \"Digite um valor n\\xFAmerico\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst NumericFilterButton = () => {\n  const {\n    column,\n    numericValue,\n    comparison,\n    filters,\n    filterByNumericValuesFunc,\n    setColumnFunc,\n    setNumericValueFunc,\n    setComparisonFunc\n  } = useContext(FiltersContext);\n  const {\n    filterByNumericValues\n  } = filters;\n  const newArr = [...filterByNumericValues, {\n    column,\n    numericValue,\n    comparison\n  }];\n  const {\n    allFiltersArr,\n    setAllFiltersFunc\n  } = useContext(AllFiltersArrContext);\n\n  const DisplayFilterName = () => {\n    const index = allFiltersArr.indexOf(column);\n    const newFiltersArr = [...allFiltersArr];\n    newFiltersArr.splice(index, 1);\n    setAllFiltersFunc(newFiltersArr);\n  };\n\n  const NumericFilter = () => {\n    filterByNumericValuesFunc(newArr);\n    setColumnFunc('');\n    setNumericValueFunc('');\n    setComparisonFunc('');\n    DisplayFilterName();\n  };\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": \"button-filter\",\n    type: \"button\",\n    onClick: NumericFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, \"Search\");\n};\n\nconst ColToSort = () => {\n  const {\n    sortColumn,\n    setSortColumnFunc\n  } = useContext(FiltersContext);\n  return /*#__PURE__*/React.createElement(\"select\", {\n    \"data-testid\": \"column-sort\",\n    value: sortColumn,\n    name: \"sortColumn\",\n    onChange: e => setSortColumnFunc(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, \"name\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"rotation_period\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, \"rotation_period\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"orbital_period\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, \"orbital_period\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"diameter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, \"diameter\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"gravity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, \"gravity\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"surface_water\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, \"surface_water\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"population\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, \"population\"));\n};\n\nconst RadioDescAsc = () => {\n  const {\n    setSortTypeFunc\n  } = useContext(FiltersContext);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, \"Descendente\", /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"column-sort-input-desc\",\n    value: \"DESC\",\n    onClick: () => setSortTypeFunc('DESC'),\n    type: \"radio\",\n    name: \"sortType\",\n    id: \"desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"asc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, \"Ascendente\", /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"column-sort-input-asc\",\n    value: \"ASC\",\n    onClick: () => setSortTypeFunc('ASC'),\n    type: \"radio\",\n    name: \"sortType\",\n    id: \"asc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst SortButton = () => {\n  const {\n    sortColumn,\n    sortType,\n    setOrderFunc\n  } = useContext(FiltersContext);\n  const newObj = {\n    column: sortColumn,\n    sort: sortType\n  };\n  return /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": \"column-sort-button\",\n    type: \"button\",\n    onClick: () => setOrderFunc(newObj),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 5\n    }\n  }, \"Sort Table\");\n};\n\nconst Inputs = () => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }\n}, Searchbar(), NumericSearchCol(), NumericSearchGreat(), NumericSearchValue(), NumericFilterButton()), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }\n}, ColToSort(), RadioDescAsc(), SortButton()));\n\nexport default Inputs; // Inputs.propTypes = {\n//   typedText: PropTypes.string,\n//   allFiltersArr: PropTypes.arrayOf(PropTypes.string).isRequired,\n//   filterByName: PropTypes.func,\n//   changeFiltersDisplay: PropTypes.func,\n//   filterByNumericValues: PropTypes.func,\n//   choosedCol: PropTypes.func,\n// };\n// Inputs.defaultProps = {\n//   typedText: '',\n//   filterByName: () => {},\n//   filterByNumericValues: () => {},\n//   changeFiltersDisplay: () => {},\n//   choosedCol: () => {},\n// };","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-project-starwars-datatable-hooks/src/components/Inputs.js"],"names":["React","useContext","FiltersContext","AllFiltersArrContext","Searchbar","onChangeText","filters","filterByName","name","NumericSearchCol","setColumnFunc","column","allFiltersArr","e","target","value","map","NumericSearchGreat","setComparisonFunc","comparison","NumericSearchValue","setNumericValueFunc","numericValue","NumericFilterButton","filterByNumericValuesFunc","filterByNumericValues","newArr","setAllFiltersFunc","DisplayFilterName","index","indexOf","newFiltersArr","splice","NumericFilter","ColToSort","sortColumn","setSortColumnFunc","RadioDescAsc","setSortTypeFunc","SortButton","sortType","setOrderFunc","newObj","sort","Inputs"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport FiltersContext from '../context/FiltersContext';\n// import PropTypes from 'prop-types';\nimport AllFiltersArrContext from '../context/AllFiltersArrContext';\n\nconst Searchbar = () => {\n  const { onChangeText, filters } = useContext(FiltersContext);\n  const { filterByName: { name } } = filters;\n  return (\n    <div>\n      <label htmlFor=\"searchbar\">\n        <input\n          data-testid=\"name-filter\"\n          type=\"text\"\n          onChange={onChangeText}\n          id=\"searchbar\"\n          name=\"searchbar\"\n          value={name}\n          placeholder=\"Digite um nome de planeta\"\n        />\n      </label>\n    </div>\n  );\n};\n\nconst NumericSearchCol = () => {\n  const { setColumnFunc, column } = useContext(FiltersContext);\n  const { allFiltersArr } = useContext(AllFiltersArrContext);\n  return (\n    <select\n      onChange={(e) => setColumnFunc(e.target.value)}\n      value={column}\n      name=\"column\"\n      data-testid=\"column-filter\"\n    >\n      {allFiltersArr.map((e) => (<option key={e} value={e}>{e}</option>))}\n    </select>\n  );\n};\n\nconst NumericSearchGreat = () => {\n  const { setComparisonFunc, comparison } = useContext(FiltersContext);\n  return (\n    <select\n      onChange={(e) => setComparisonFunc(e.target.value)}\n      value={comparison}\n      name=\"comparison\"\n      data-testid=\"comparison-filter\"\n    >\n      <option value=\"maior que\">maior que</option>\n      <option value=\"igual a\">igual a</option>\n      <option value=\"menor que\">menor que</option>\n      <option value=\"\" />\n    </select>\n  );\n};\n\nconst NumericSearchValue = () => {\n  const { setNumericValueFunc, numericValue } = useContext(FiltersContext);\n  return (\n    <div>\n      <label htmlFor=\"numericValue\">\n        <input\n          data-testid=\"value-filter\"\n          type=\"number\"\n          onChange={(e) => setNumericValueFunc(e.target.value)}\n          id=\"numericValue\"\n          name=\"value\"\n          value={numericValue}\n          placeholder=\"Digite um valor númerico\"\n        />\n      </label>\n    </div>\n  );\n};\n\n\nconst NumericFilterButton = () => {\n  const {\n    column, numericValue, comparison, filters,\n    filterByNumericValuesFunc, setColumnFunc, setNumericValueFunc, setComparisonFunc,\n  } = useContext(FiltersContext);\n  const { filterByNumericValues } = filters;\n  const newArr = [...filterByNumericValues, { column, numericValue, comparison }];\n\n  const { allFiltersArr, setAllFiltersFunc } = useContext(AllFiltersArrContext);\n\n  const DisplayFilterName = () => {\n    const index = allFiltersArr.indexOf(column);\n    const newFiltersArr = [...allFiltersArr];\n    newFiltersArr.splice(index, 1);\n    setAllFiltersFunc(newFiltersArr);\n  };\n\n  const NumericFilter = () => {\n    filterByNumericValuesFunc(newArr);\n    setColumnFunc('');\n    setNumericValueFunc('');\n    setComparisonFunc('');\n    DisplayFilterName();\n  };\n\n  return (\n    <button data-testid=\"button-filter\" type=\"button\" onClick={NumericFilter}>\n      Search\n    </button>\n  );\n};\n\nconst ColToSort = () => {\n  const { sortColumn, setSortColumnFunc } = useContext(FiltersContext);\n  return (\n    <select\n      data-testid=\"column-sort\"\n      value={sortColumn}\n      name=\"sortColumn\"\n      onChange={(e) => setSortColumnFunc(e.target.value)}\n    >\n      <option value=\"name\">name</option>\n      <option value=\"rotation_period\">rotation_period</option>\n      <option value=\"orbital_period\">orbital_period</option>\n      <option value=\"diameter\">diameter</option>\n      <option value=\"gravity\">gravity</option>\n      <option value=\"surface_water\">surface_water</option>\n      <option value=\"population\">population</option>\n    </select>\n  );\n};\n\nconst RadioDescAsc = () => {\n  const { setSortTypeFunc } = useContext(FiltersContext);\n  return (\n    <div>\n      <label htmlFor=\"desc\">\n        Descendente\n        <input\n          data-testid=\"column-sort-input-desc\"\n          value=\"DESC\"\n          onClick={() => setSortTypeFunc('DESC')}\n          type=\"radio\"\n          name=\"sortType\"\n          id=\"desc\"\n        />\n      </label>\n      <label htmlFor=\"asc\">\n        Ascendente\n        <input\n          data-testid=\"column-sort-input-asc\"\n          value=\"ASC\"\n          onClick={() => setSortTypeFunc('ASC')}\n          type=\"radio\"\n          name=\"sortType\"\n          id=\"asc\"\n        />\n      </label>\n    </div>\n  );\n};\n\nconst SortButton = () => {\n  const { sortColumn, sortType, setOrderFunc } = useContext(FiltersContext);\n  const newObj = { column: sortColumn, sort: sortType };\n  return (\n    <button data-testid=\"column-sort-button\" type=\"button\" onClick={() => setOrderFunc(newObj)}>\n      Sort Table\n    </button>\n  );\n};\n\nconst Inputs = () => (\n  <div>\n    <div>\n      {Searchbar()}\n      {NumericSearchCol()}\n      {NumericSearchGreat()}\n      {NumericSearchValue()}\n      {NumericFilterButton()}\n    </div>\n    <div>\n      {ColToSort()}\n      {RadioDescAsc()}\n      {SortButton()}\n    </div>\n  </div>\n);\n\nexport default Inputs;\n\n// Inputs.propTypes = {\n//   typedText: PropTypes.string,\n//   allFiltersArr: PropTypes.arrayOf(PropTypes.string).isRequired,\n//   filterByName: PropTypes.func,\n//   changeFiltersDisplay: PropTypes.func,\n//   filterByNumericValues: PropTypes.func,\n//   choosedCol: PropTypes.func,\n// };\n\n// Inputs.defaultProps = {\n//   typedText: '',\n//   filterByName: () => {},\n//   filterByNumericValues: () => {},\n//   changeFiltersDisplay: () => {},\n//   choosedCol: () => {},\n// };\n"]},"metadata":{},"sourceType":"module"}