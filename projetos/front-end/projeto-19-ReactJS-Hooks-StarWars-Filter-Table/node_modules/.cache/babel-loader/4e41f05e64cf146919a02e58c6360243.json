{"ast":null,"code":"var _jsxFileName = \"/home/jafet/\\xC1rea de Trabalho/sd-03-project-starwars-datatable-hooks-henriquerezende-startwars-datatable-hooks/src/components/Table.js\";\nimport React, { useContext } from 'react'; // import { connect } from 'react-redux';\n// import PropTypes from 'prop-types';\n\nimport FiltersContext from '../context/FiltersContext';\nimport SWApiContext from '../context/SWApiContext';\nimport Header from './Header';\nimport TableHeaders from './TableHeaders';\nimport Inputs from './Inputs';\nimport SelectedFilters from './SelectedFilters';\nimport TableData from './TableData'; // import { filterByNameAction } from '../actions/filterByNameAction';\n// import { filterByNumericValuesAction } from '../actions/filterByNumericValuesAction';\n\nconst greaterThan = (column, value, obj) => {\n  if (!(Number(obj[column]) > Number(value))) return false;\n  return true;\n};\n\nconst lessThan = (column, value, obj) => {\n  if (!(Number(obj[column]) < Number(value))) return false;\n  return true;\n};\n\nconst equal = (column, value, obj) => {\n  if (!(Number(obj[column]) === Number(value))) return false;\n  return true;\n};\n\nconst GreaterLessEqual = (operator, column, value, obj) => {\n  switch (operator) {\n    case 'maior que':\n      return greaterThan(column, value, obj);\n\n    case 'menor que':\n      return lessThan(column, value, obj);\n\n    case 'igual a':\n      return equal(column, value, obj);\n\n    default:\n      return true;\n  }\n};\n\nconst helperFunction = (obj, filterByNumericValues, name) => {\n  if (!obj.name.toLowerCase().includes(name.toLowerCase()) && name !== '') return false;\n\n  for (let i = 0; i < filterByNumericValues.length; i += 1) {\n    const {\n      column,\n      numericValue,\n      comparison\n    } = filterByNumericValues[i];\n    if (!GreaterLessEqual(comparison, column, numericValue, obj)) return false;\n  }\n\n  return true;\n};\n\nconst dataFilterFunction = (data, filterByNumericValues, name) => {\n  const newArrToFilter = [...data];\n\n  if (name !== '' || filterByNumericValues.length > 0) {\n    return newArrToFilter.reduce((acc, planetObj) => {\n      if (helperFunction(planetObj, filterByNumericValues, name)) acc.push(planetObj);\n      return acc;\n    }, []);\n  }\n\n  return data;\n};\n\nconst sortDescColName = (columnLowerCase, data, filterByNumericValues, name) => {\n  const dataFiltered = dataFilterFunction(data, filterByNumericValues, name);\n  return dataFiltered.sort((a, b) => {\n    if (a[columnLowerCase] < b[columnLowerCase]) return 1;\n    if (a[columnLowerCase] > b[columnLowerCase]) return -1;\n    return 0;\n  });\n};\n\nconst sortDescCol = (data, filterByNumericValues, order, name) => {\n  const {\n    column\n  } = order;\n  const columnLowerCase = column.toLowerCase();\n  const dataFiltered = dataFilterFunction(data, filterByNumericValues, name); // console.log(dataFiltered);\n\n  if (columnLowerCase === 'name') {\n    return sortDescColName(columnLowerCase, data, filterByNumericValues, name);\n  }\n\n  return dataFiltered.sort(function (a, b) {\n    if (Number(a[columnLowerCase]) < Number(b[columnLowerCase])) return 1;\n    if (Number(a[columnLowerCase]) > Number(b[columnLowerCase])) return -1;\n    return 0;\n  });\n};\n\nconst sortAscColWithoutName = (columnLowerCase, data, filterByNumericValues, name) => {\n  const dataFiltered = dataFilterFunction(data, filterByNumericValues, name);\n  return dataFiltered.sort(function (a, b) {\n    if (Number(a[columnLowerCase]) > Number(b[columnLowerCase])) return 1;\n    if (Number(a[columnLowerCase]) < Number(b[columnLowerCase])) return -1;\n    return 0;\n  });\n};\n\nconst sortAscCol = (data, filterByNumericValues, order, name) => {\n  const {\n    column\n  } = order;\n  const columnLowerCase = column.toLowerCase();\n  const dataFiltered = dataFilterFunction(data, filterByNumericValues, name);\n\n  if (columnLowerCase === 'name') {\n    return dataFiltered.sort(function (a, b) {\n      if (a[columnLowerCase] > b[columnLowerCase]) return 1;\n      if (a[columnLowerCase] < b[columnLowerCase]) return -1;\n      return 0;\n    });\n  }\n\n  return sortAscColWithoutName(columnLowerCase, data, filterByNumericValues, name);\n};\n\nconst dataSortFunction = (data, filterByNumericValues, order, name) => {\n  const {\n    sort\n  } = order;\n  if (sort === 'DESC') return sortDescCol(data, filterByNumericValues, order, name);\n  return sortAscCol(data, filterByNumericValues, order, name);\n};\n\nconst Table = () => {\n  const {\n    filters\n  } = useContext(FiltersContext);\n  const {\n    filterByName: {\n      name\n    },\n    filterByNumericValues,\n    order\n  } = filters;\n  const {\n    data\n  } = useContext(SWApiContext);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Inputs, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SelectedFilters, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableHeaders, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TableData, {\n    dataSw: dataSortFunction(data, filterByNumericValues, order, name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  })));\n}; // const mapDispatchToProps = (dispatch) => ({\n//   filterByName: (text) => dispatch(filterByNameAction(text)),\n//   filterByNumericValues: (obj) => dispatch(filterByNumericValuesAction(obj)),\n// });\n// const mapStateToProps = (state) => ({\n//   dataSw: state.apiSWReducer.data,\n//   isLoading: state.apiSWReducer.loading,\n//   typedText: state.filters.filterByName.name,\n//   numericSearched: state.filters.filterByNumericValues,\n//   sortCol: state.filters.order,\n// });\n\n\nexport default Table; // Table.propTypes = {\n//   typedText: PropTypes.string,\n//   dataSw: PropTypes.arrayOf(PropTypes.object),\n//   numericSearched: PropTypes.arrayOf(PropTypes.object),\n//   sortCol: PropTypes.objectOf(PropTypes.any),\n// };\n// Table.defaultProps = {\n//   typedText: '',\n//   dataSw: [],\n//   numericSearched: {},\n//   sortCol: {},\n// };","map":{"version":3,"sources":["/home/jafet/√Årea de Trabalho/sd-03-project-starwars-datatable-hooks-henriquerezende-startwars-datatable-hooks/src/components/Table.js"],"names":["React","useContext","FiltersContext","SWApiContext","Header","TableHeaders","Inputs","SelectedFilters","TableData","greaterThan","column","value","obj","Number","lessThan","equal","GreaterLessEqual","operator","helperFunction","filterByNumericValues","name","toLowerCase","includes","i","length","numericValue","comparison","dataFilterFunction","data","newArrToFilter","reduce","acc","planetObj","push","sortDescColName","columnLowerCase","dataFiltered","sort","a","b","sortDescCol","order","sortAscColWithoutName","sortAscCol","dataSortFunction","Table","filters","filterByName"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\n// import { connect } from 'react-redux';\n// import PropTypes from 'prop-types';\nimport FiltersContext from '../context/FiltersContext';\nimport SWApiContext from '../context/SWApiContext';\nimport Header from './Header';\nimport TableHeaders from './TableHeaders';\nimport Inputs from './Inputs';\nimport SelectedFilters from './SelectedFilters';\nimport TableData from './TableData';\n// import { filterByNameAction } from '../actions/filterByNameAction';\n// import { filterByNumericValuesAction } from '../actions/filterByNumericValuesAction';\n\nconst greaterThan = (column, value, obj) => {\n  if (!(Number(obj[column]) > Number(value))) return false;\n  return true;\n};\n\nconst lessThan = (column, value, obj) => {\n  if (!(Number(obj[column]) < Number(value))) return false;\n  return true;\n};\n\nconst equal = (column, value, obj) => {\n  if (!(Number(obj[column]) === Number(value))) return false;\n  return true;\n};\n\nconst GreaterLessEqual = (operator, column, value, obj) => {\n  switch (operator) {\n    case 'maior que':\n      return greaterThan(column, value, obj);\n    case 'menor que':\n      return lessThan(column, value, obj);\n    case 'igual a':\n      return equal(column, value, obj);\n    default:\n      return true;\n  }\n};\n\nconst helperFunction = (obj, filterByNumericValues, name) => {\n  if (!obj.name.toLowerCase().includes(name.toLowerCase()) && name !== '') return false;\n  for (let i = 0; i < filterByNumericValues.length; i += 1) {\n    const { column, numericValue, comparison } = filterByNumericValues[i];\n    if (!GreaterLessEqual(comparison, column, numericValue, obj)) return false;\n  }\n  return true;\n};\n\nconst dataFilterFunction = (data, filterByNumericValues, name) => {\n  const newArrToFilter = [...data];\n  if (name !== '' || filterByNumericValues.length > 0) {\n    return newArrToFilter.reduce((acc, planetObj) => {\n      if (helperFunction(planetObj, filterByNumericValues, name)) acc.push(planetObj);\n      return acc;\n    }, []);\n  }\n  return data;\n};\n\nconst sortDescColName = (columnLowerCase, data, filterByNumericValues, name) => {\n  const dataFiltered = dataFilterFunction(data, filterByNumericValues, name);\n  return dataFiltered.sort((a, b) => {\n    if (a[columnLowerCase] < b[columnLowerCase]) return 1;\n    if (a[columnLowerCase] > b[columnLowerCase]) return -1;\n    return 0;\n  });\n};\n\nconst sortDescCol = (data, filterByNumericValues, order, name) => {\n  const { column } = order;\n  const columnLowerCase = column.toLowerCase();\n  const dataFiltered = dataFilterFunction(data, filterByNumericValues, name);\n  // console.log(dataFiltered);\n  if (columnLowerCase === 'name') {\n    return sortDescColName(columnLowerCase, data, filterByNumericValues, name);\n  }\n  return dataFiltered.sort(function (a, b) {\n    if (Number(a[columnLowerCase]) < Number(b[columnLowerCase])) return 1;\n    if (Number(a[columnLowerCase]) > Number(b[columnLowerCase])) return -1;\n    return 0;\n  });\n};\n\nconst sortAscColWithoutName = (columnLowerCase, data, filterByNumericValues, name) => {\n  const dataFiltered = dataFilterFunction(data, filterByNumericValues, name);\n  return dataFiltered.sort(function (a, b) {\n    if (Number(a[columnLowerCase]) > Number(b[columnLowerCase])) return 1;\n    if (Number(a[columnLowerCase]) < Number(b[columnLowerCase])) return -1;\n    return 0;\n  });\n};\n\nconst sortAscCol = (data, filterByNumericValues, order, name) => {\n  const { column } = order;\n  const columnLowerCase = column.toLowerCase();\n  const dataFiltered = dataFilterFunction(data, filterByNumericValues, name);\n  if (columnLowerCase === 'name') {\n    return dataFiltered.sort(function (a, b) {\n      if (a[columnLowerCase] > b[columnLowerCase]) return 1;\n      if (a[columnLowerCase] < b[columnLowerCase]) return -1;\n      return 0;\n    });\n  }\n  return sortAscColWithoutName(columnLowerCase, data, filterByNumericValues, name);\n};\n\nconst dataSortFunction = (data, filterByNumericValues, order, name) => {\n  const { sort } = order;\n  if (sort === 'DESC') return sortDescCol(data, filterByNumericValues, order, name);\n  return sortAscCol(data, filterByNumericValues, order, name);\n};\n\nconst Table = () => {\n  const { filters } = useContext(FiltersContext);\n  const { filterByName: { name }, filterByNumericValues, order } = filters;\n\n  const { data } = useContext(SWApiContext);\n\n  return (\n    <div>\n      <Header />\n      <Inputs />\n      <SelectedFilters />\n      <table>\n        <TableHeaders />\n        <TableData dataSw={dataSortFunction(data, filterByNumericValues, order, name)} />\n      </table>\n    </div>\n  );\n};\n\n// const mapDispatchToProps = (dispatch) => ({\n//   filterByName: (text) => dispatch(filterByNameAction(text)),\n//   filterByNumericValues: (obj) => dispatch(filterByNumericValuesAction(obj)),\n// });\n\n// const mapStateToProps = (state) => ({\n//   dataSw: state.apiSWReducer.data,\n//   isLoading: state.apiSWReducer.loading,\n//   typedText: state.filters.filterByName.name,\n//   numericSearched: state.filters.filterByNumericValues,\n//   sortCol: state.filters.order,\n// });\n\nexport default Table;\n\n// Table.propTypes = {\n//   typedText: PropTypes.string,\n//   dataSw: PropTypes.arrayOf(PropTypes.object),\n//   numericSearched: PropTypes.arrayOf(PropTypes.object),\n//   sortCol: PropTypes.objectOf(PropTypes.any),\n// };\n\n// Table.defaultProps = {\n//   typedText: '',\n//   dataSw: [],\n//   numericSearched: {},\n//   sortCol: {},\n// };\n"]},"metadata":{},"sourceType":"module"}