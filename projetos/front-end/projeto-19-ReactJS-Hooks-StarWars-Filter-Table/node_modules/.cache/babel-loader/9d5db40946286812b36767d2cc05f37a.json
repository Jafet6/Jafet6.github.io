{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-project-starwars-datatable-hooks/src/components/TableData.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TableData = props => {\n  const {\n    dataSw\n  } = props;\n  return /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, dataSw.map(planets => /*#__PURE__*/React.createElement(\"tr\", {\n    key: planets.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    \"data-testid\": \"planet-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }\n  }, planets.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 11\n    }\n  }, planets.rotation_period), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }\n  }, planets.orbital_period), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  }, planets.diameter), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }, planets.climate), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }, planets.gravity), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }, planets.terrain), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, planets.surface_water), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, planets.population), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, planets.films), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, planets.created), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, planets.edited), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, planets.url))));\n}; // const mapStateToProps = (state) => ({\n//   dataSw: state.apiSWReducer.data,\n// });\n\n\nexport default TableData;\nTableData.propTypes = {\n  dataSw: PropTypes.arrayOf(PropTypes.object)\n};\nTableData.defaultProps = {\n  dataSw: []\n};","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-project-starwars-datatable-hooks/src/components/TableData.js"],"names":["React","PropTypes","TableData","props","dataSw","map","planets","name","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","created","edited","url","propTypes","arrayOf","object","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAnB;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,MAAM,CAACC,GAAP,CAAYC,OAAD,iBACV;AAAI,IAAA,GAAG,EAAEA,OAAO,CAACC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,mBAAY,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BD,OAAO,CAACC,IAAvC,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,OAAO,CAACE,eAAb,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,OAAO,CAACG,cAAb,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,OAAO,CAACI,QAAb,CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,OAAO,CAACK,OAAb,CALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,OAAO,CAACM,OAAb,CANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKN,OAAO,CAACO,OAAb,CAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKP,OAAO,CAACQ,aAAb,CARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKR,OAAO,CAACS,UAAb,CATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKT,OAAO,CAACU,KAAb,CAVF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKV,OAAO,CAACW,OAAb,CAXF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKX,OAAO,CAACY,MAAb,CAZF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKZ,OAAO,CAACa,GAAb,CAbF,CADD,CADH,CADF;AAqBD,CAvBD,C,CAyBA;AACA;AACA;;;AAEA,eAAejB,SAAf;AAEAA,SAAS,CAACkB,SAAV,GAAsB;AACpBhB,EAAAA,MAAM,EAAEH,SAAS,CAACoB,OAAV,CAAkBpB,SAAS,CAACqB,MAA5B;AADY,CAAtB;AAIApB,SAAS,CAACqB,YAAV,GAAyB;AACvBnB,EAAAA,MAAM,EAAE;AADe,CAAzB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TableData = (props) => {\n  const { dataSw } = props;\n  return (\n    <tbody>\n      {dataSw.map((planets) => (\n        <tr key={planets.name}>\n          <td data-testid=\"planet-name\">{planets.name}</td>\n          <td>{planets.rotation_period}</td>\n          <td>{planets.orbital_period}</td>\n          <td>{planets.diameter}</td>\n          <td>{planets.climate}</td>\n          <td>{planets.gravity}</td>\n          <td>{planets.terrain}</td>\n          <td>{planets.surface_water}</td>\n          <td>{planets.population}</td>\n          <td>{planets.films}</td>\n          <td>{planets.created}</td>\n          <td>{planets.edited}</td>\n          <td>{planets.url}</td>\n        </tr>\n      ))}\n    </tbody>\n  );\n};\n\n// const mapStateToProps = (state) => ({\n//   dataSw: state.apiSWReducer.data,\n// });\n\nexport default TableData;\n\nTableData.propTypes = {\n  dataSw: PropTypes.arrayOf(PropTypes.object),\n};\n\nTableData.defaultProps = {\n  dataSw: [],\n};\n"]},"metadata":{},"sourceType":"module"}