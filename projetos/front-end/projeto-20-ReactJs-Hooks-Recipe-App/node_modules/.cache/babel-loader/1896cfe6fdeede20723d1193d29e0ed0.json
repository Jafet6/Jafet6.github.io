{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-recipes-app-03/src/pages/DetailsPage/DetailsPageProvider.js\";\nimport React, { useState, createContext } from 'react';\nimport PropTypes from 'prop-types'; // import { fetchMealById } from '../../services/theMealAPI';\n\nexport const DetailsPageContext = createContext();\nexport const DetailsPageProvider = ({\n  children\n}) => {\n  const [data, setData] = useState([]); // const [errorMessage, setErrorMessage] = useState('');\n  // const [isLoading, setIsLoading] = useState(false);\n  // const apiRequestSucceedMeal = ({ meals }) => {\n  //   setData(meals[0]);\n  //   setIsLoading(false);\n  // };\n  // const apiRequestSucceedDrink = ({ drinks }) => {\n  //   setData(drinks[0]);\n  //   setIsLoading(false);\n  // };\n  // const apiRequestFailure = ({ message }) => {\n  //   setErrorMessage(message);\n  //   setIsLoading(false);\n  // };\n  // const apiRequestFunction = (callback, id) => {\n  //   setIsLoading(true);\n  //   if (callback === fetchMealById) {\n  //     return callback(id).then(apiRequestSucceedMeal, apiRequestFailure);\n  //   }\n  //   return callback(id).then(apiRequestSucceedDrink, apiRequestFailure);\n  // };\n\n  const setProviderData = data => setData(data);\n\n  const detailsPageObj = {\n    setProviderData,\n    data\n  };\n  return /*#__PURE__*/React.createElement(DetailsPageContext.Provider, {\n    value: detailsPageObj,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, children);\n};\nDetailsPageProvider.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired\n};","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-recipes-app-03/src/pages/DetailsPage/DetailsPageProvider.js"],"names":["React","useState","createContext","PropTypes","DetailsPageContext","DetailsPageProvider","children","data","setData","setProviderData","detailsPageObj","propTypes","oneOfType","arrayOf","node","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,QAA+C,OAA/C;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AAEA,OAAO,MAAMC,kBAAkB,GAAGF,aAAa,EAAxC;AAEP,OAAO,MAAMG,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACnD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC,CADmD,CAEnD;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMQ,eAAe,GAAIF,IAAD,IAAUC,OAAO,CAACD,IAAD,CAAzC;;AAEA,QAAMG,cAAc,GAAG;AACrBD,IAAAA,eADqB;AAErBF,IAAAA;AAFqB,GAAvB;AAKA,sBACE,oBAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAEG,cAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,QADH,CADF;AAKD,CAxCM;AA0CPD,mBAAmB,CAACM,SAApB,GAAgC;AAC9BL,EAAAA,QAAQ,EAAEH,SAAS,CAACS,SAAV,CAAoB,CAC5BT,SAAS,CAACU,OAAV,CAAkBV,SAAS,CAACW,IAA5B,CAD4B,EAE5BX,SAAS,CAACW,IAFkB,CAApB,EAGPC;AAJ2B,CAAhC","sourcesContent":["import React, { useState, createContext } from 'react';\nimport PropTypes from 'prop-types';\n// import { fetchMealById } from '../../services/theMealAPI';\n\nexport const DetailsPageContext = createContext();\n\nexport const DetailsPageProvider = ({ children }) => {\n  const [data, setData] = useState([]);\n  // const [errorMessage, setErrorMessage] = useState('');\n  // const [isLoading, setIsLoading] = useState(false);\n\n  // const apiRequestSucceedMeal = ({ meals }) => {\n  //   setData(meals[0]);\n  //   setIsLoading(false);\n  // };\n\n  // const apiRequestSucceedDrink = ({ drinks }) => {\n  //   setData(drinks[0]);\n  //   setIsLoading(false);\n  // };\n\n  // const apiRequestFailure = ({ message }) => {\n  //   setErrorMessage(message);\n  //   setIsLoading(false);\n  // };\n\n  // const apiRequestFunction = (callback, id) => {\n  //   setIsLoading(true);\n  //   if (callback === fetchMealById) {\n  //     return callback(id).then(apiRequestSucceedMeal, apiRequestFailure);\n  //   }\n  //   return callback(id).then(apiRequestSucceedDrink, apiRequestFailure);\n  // };\n\n  const setProviderData = (data) => setData(data);\n\n  const detailsPageObj = {\n    setProviderData,\n    data,\n  };\n\n  return (\n    <DetailsPageContext.Provider value={detailsPageObj}>\n      {children}\n    </DetailsPageContext.Provider>\n  );\n};\n\nDetailsPageProvider.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}