{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-recipes-app-03/src/pages/RecipesInProgress/RecipesInProgressPage/RecipesInProgressContent.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types'; // import { DetailsPageContext } from '../DetailsPage/DetailsPageProvider';\n\nimport { useLocation, useParams } from 'react-router-dom';\nimport { RecipeInProgressContext } from '../RecipeInProgressProvider';\nimport { fetchMealById } from '../../../services/theMealAPI';\nimport { fetchDrinkById } from '../../../services/theCockTailAPI';\nimport RecipesInProgressPage from './RecipesInProgressContent';\n\nconst RecipesInProgressContent = props => {\n  const {\n    setRecipeDataFunc\n  } = useContext(RecipeInProgressContext);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    pathname\n  } = useLocation();\n  const {\n    id\n  } = useParams();\n\n  const apiRequestSucceedMeal = ({\n    meals\n  }) => {\n    setRecipeDataFunc(meals[0]);\n    return setIsLoading(false);\n  };\n\n  const apiRequestSucceedDrink = ({\n    drinks\n  }) => {\n    setRecipeDataFunc(drinks[0]);\n    return setIsLoading(false);\n  };\n\n  const apiRequestFailure = ({\n    message\n  }) => {\n    setErrorMessage(message);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    const apiRequestFunction = (callback, recipeId) => {\n      setIsLoading(true);\n\n      if (callback === fetchMealById) {\n        setIsLoading(false); // return callback(recipeId).then(apiRequestSucceedMeal, apiRequestFailure);\n      } // return callback(recipeId).then(apiRequestSucceedDrink, apiRequestFailure);\n\n    };\n\n    if (pathname.includes('/comidas')) {\n      apiRequestFunction(fetchMealById, id);\n    } else {\n      apiRequestFunction(fetchDrinkById, id);\n    }\n  }, [id]);\n  console.log(isLoading);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, \"Hello\");\n};\n\nexport default RecipesInProgressContent;\nRecipesInProgressContent.propTypes = {\n  match: PropTypes.objectOf(PropTypes.any).isRequired,\n  location: PropTypes.objectOf(PropTypes.any).isRequired\n};","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-recipes-app-03/src/pages/RecipesInProgress/RecipesInProgressPage/RecipesInProgressContent.js"],"names":["React","useContext","useState","useEffect","PropTypes","useLocation","useParams","RecipeInProgressContext","fetchMealById","fetchDrinkById","RecipesInProgressPage","RecipesInProgressContent","props","setRecipeDataFunc","errorMessage","setErrorMessage","isLoading","setIsLoading","pathname","id","apiRequestSucceedMeal","meals","apiRequestSucceedDrink","drinks","apiRequestFailure","message","apiRequestFunction","callback","recipeId","includes","console","log","propTypes","match","objectOf","any","isRequired","location"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;AACA,SAASC,uBAAT,QAAwC,6BAAxC;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,SAASC,cAAT,QAA+B,kCAA/B;AACA,OAAOC,qBAAP,MAAkC,4BAAlC;;AAEA,MAAMC,wBAAwB,GAAIC,KAAD,IAAW;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAyBZ,UAAU,CAACM,uBAAD,CAAzC;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAeb,WAAW,EAAhC;AACA,QAAM;AAAEc,IAAAA;AAAF,MAASb,SAAS,EAAxB;;AAEA,QAAMc,qBAAqB,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAe;AAC3CR,IAAAA,iBAAiB,CAACQ,KAAK,CAAC,CAAD,CAAN,CAAjB;AACA,WAAOJ,YAAY,CAAC,KAAD,CAAnB;AACD,GAHD;;AAKA,QAAMK,sBAAsB,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgB;AAC7CV,IAAAA,iBAAiB,CAACU,MAAM,CAAC,CAAD,CAAP,CAAjB;AACA,WAAON,YAAY,CAAC,KAAD,CAAnB;AACD,GAHD;;AAKA,QAAMO,iBAAiB,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAiB;AACzCV,IAAAA,eAAe,CAACU,OAAD,CAAf;AACAR,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAHD;;AAKAd,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMuB,kBAAkB,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACjDX,MAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,UAAIU,QAAQ,KAAKnB,aAAjB,EAAgC;AAC9BS,QAAAA,YAAY,CAAC,KAAD,CAAZ,CAD8B,CAE9B;AACD,OALgD,CAMjD;;AACD,KAPD;;AAQA,QAAIC,QAAQ,CAACW,QAAT,CAAkB,UAAlB,CAAJ,EAAmC;AACjCH,MAAAA,kBAAkB,CAAClB,aAAD,EAAgBW,EAAhB,CAAlB;AACD,KAFD,MAEO;AACLO,MAAAA,kBAAkB,CAACjB,cAAD,EAAiBU,EAAjB,CAAlB;AACD;AACF,GAdQ,EAcN,CAACA,EAAD,CAdM,CAAT;AAgBAW,EAAAA,OAAO,CAACC,GAAR,CAAYf,SAAZ;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAMD,CA9CD;;AAgDA,eAAeL,wBAAf;AAEAA,wBAAwB,CAACqB,SAAzB,GAAqC;AACnCC,EAAAA,KAAK,EAAE7B,SAAS,CAAC8B,QAAV,CAAmB9B,SAAS,CAAC+B,GAA7B,EAAkCC,UADN;AAEnCC,EAAAA,QAAQ,EAAEjC,SAAS,CAAC8B,QAAV,CAAmB9B,SAAS,CAAC+B,GAA7B,EAAkCC;AAFT,CAArC","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n// import { DetailsPageContext } from '../DetailsPage/DetailsPageProvider';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { RecipeInProgressContext } from '../RecipeInProgressProvider';\nimport { fetchMealById } from '../../../services/theMealAPI';\nimport { fetchDrinkById } from '../../../services/theCockTailAPI';\nimport RecipesInProgressPage from './RecipesInProgressContent';\n\nconst RecipesInProgressContent = (props) => {\n  const { setRecipeDataFunc  } = useContext(RecipeInProgressContext);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const { pathname } = useLocation()\n  const { id } = useParams()\n\n  const apiRequestSucceedMeal = ({ meals }) => {\n    setRecipeDataFunc(meals[0]);\n    return setIsLoading(false);\n  };\n\n  const apiRequestSucceedDrink = ({ drinks }) => {\n    setRecipeDataFunc(drinks[0]);\n    return setIsLoading(false);\n  };\n\n  const apiRequestFailure = ({ message }) => {\n    setErrorMessage(message);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    const apiRequestFunction = (callback, recipeId) => {\n      setIsLoading(true);\n      if (callback === fetchMealById) {\n        setIsLoading(false);\n        // return callback(recipeId).then(apiRequestSucceedMeal, apiRequestFailure);\n      }\n      // return callback(recipeId).then(apiRequestSucceedDrink, apiRequestFailure);\n    };\n    if (pathname.includes('/comidas')) {\n      apiRequestFunction(fetchMealById, id);\n    } else {\n      apiRequestFunction(fetchDrinkById, id);\n    }\n  }, [id]);\n\n  console.log(isLoading)\n\n  return (\n    <div>\n      Hello\n      {/* <RecipesInProgressPage kkk={{ isLoading, errorMessage, recipeData }} /> */}\n    </div>\n  );\n};\n\nexport default RecipesInProgressContent;\n\nRecipesInProgressContent.propTypes = {\n  match: PropTypes.objectOf(PropTypes.any).isRequired,\n  location: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}