{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-recipes-app-03/src/components/Favorite/FavoriteButton.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport whiteHeartIcon from \"../../images/whiteHeartIcon.svg\";\nimport blackHeartIcon from \"../../images/blackHeartIcon.svg\";\n\nconst recipeObject = (recipe, type) => {\n  if (type === 'comidas') {\n    return {\n      id: recipe.id,\n      type: 'comida',\n      area: recipe.area,\n      category: recipe.category,\n      alcoholicOrNot: '',\n      name: recipe.name,\n      image: recipe.img\n    };\n  }\n\n  return {\n    id: recipe.id,\n    type: 'bebida',\n    area: '',\n    category: recipe.category,\n    alcoholicOrNot: recipe.alcoholic,\n    name: recipe.name,\n    image: recipe.img\n  };\n};\n\nconst FavoriteButton = ({\n  recipe\n}) => {\n  const [NotFavorited, setNotFavorited] = useState(true);\n  const [srcIcon, setSrcIcon] = useState(whiteHeartIcon);\n  useEffect(() => {\n    if (!localStorage.getItem('favoriteRecipes')) {\n      localStorage.setItem('favoriteRecipes', JSON.stringify([]));\n    } else {\n      const favoriteds = JSON.parse(localStorage.getItem('favoriteRecipes'));\n\n      if (favoriteds.some(favorited => favorited.id === recipe.id)) {\n        setNotFavorited(false);\n        setSrcIcon(blackHeartIcon);\n      }\n    }\n  }, []);\n\n  const addToLocalStorage = () => {\n    const recipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const newRecipe = recipes.concat(recipeObject(recipe, recipe.type));\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newRecipe));\n    setSrcIcon(blackHeartIcon);\n    return null;\n  };\n\n  const removeLocalStorage = () => {\n    const recipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const newRecipe = recipes.filter(element => element.id !== recipe.id);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newRecipe));\n    setSrcIcon(whiteHeartIcon);\n    return null;\n  };\n\n  const handleFavorite = () => {\n    if (NotFavorited) {\n      addToLocalStorage();\n    } else {\n      removeLocalStorage();\n    }\n\n    return setNotFavorited(currentState => !currentState);\n  };\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleFavorite(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"favorite-btn\",\n    src: srcIcon,\n    alt: \"Icone para favoritar receita\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }));\n};\n\nFavoriteButton.propTypes = {\n  recipe: PropTypes.objectOf(PropTypes.any).isRequired\n};\nexport default FavoriteButton;","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-recipes-app-03/src/components/Favorite/FavoriteButton.js"],"names":["React","useState","useEffect","PropTypes","recipeObject","recipe","type","id","area","category","alcoholicOrNot","name","image","img","alcoholic","FavoriteButton","NotFavorited","setNotFavorited","srcIcon","setSrcIcon","whiteHeartIcon","localStorage","getItem","setItem","JSON","stringify","favoriteds","parse","some","favorited","blackHeartIcon","addToLocalStorage","recipes","newRecipe","concat","removeLocalStorage","filter","element","handleFavorite","currentState","propTypes","objectOf","any","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport whiteHeartIcon from '../../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../../images/blackHeartIcon.svg';\n\nconst recipeObject = (recipe, type) => {\n  if (type === 'comidas') {\n    return {\n      id: recipe.id,\n      type: 'comida',\n      area: recipe.area,\n      category: recipe.category,\n      alcoholicOrNot: '',\n      name: recipe.name,\n      image: recipe.img,\n    };\n  }\n  return {\n    id: recipe.id,\n    type: 'bebida',\n    area: '',\n    category: recipe.category,\n    alcoholicOrNot: recipe.alcoholic,\n    name: recipe.name,\n    image: recipe.img,\n  };\n};\n\nconst FavoriteButton = ({ recipe }) => {\n  const [NotFavorited, setNotFavorited] = useState(true);\n  const [srcIcon, setSrcIcon] = useState(whiteHeartIcon);\n  useEffect(() => {\n    if (!localStorage.getItem('favoriteRecipes')) {\n      localStorage.setItem('favoriteRecipes', JSON.stringify([]));\n    } else {\n      const favoriteds = JSON.parse(localStorage.getItem('favoriteRecipes'));\n      if (favoriteds.some((favorited) => favorited.id === recipe.id)) {\n        setNotFavorited(false);\n        setSrcIcon(blackHeartIcon);\n      }\n    }\n  }, []);\n\n  const addToLocalStorage = () => {\n    const recipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const newRecipe = recipes.concat(recipeObject(recipe, recipe.type));\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newRecipe));\n    setSrcIcon(blackHeartIcon);\n    return null;\n  };\n\n  const removeLocalStorage = () => {\n    const recipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const newRecipe = recipes.filter((element) => element.id !== recipe.id);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newRecipe));\n    setSrcIcon(whiteHeartIcon);\n    return null;\n  };\n\n  const handleFavorite = () => {\n    if (NotFavorited) {\n      addToLocalStorage();\n    } else {\n      removeLocalStorage();\n    }\n    return setNotFavorited((currentState) => !currentState);\n  };\n\n  return (\n    <button onClick={() => handleFavorite()}>\n      <img\n        data-testid=\"favorite-btn\"\n        src={srcIcon} alt=\"Icone para favoritar receita\"\n      />\n    </button>\n  );\n};\n\nFavoriteButton.propTypes = {\n  recipe: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default FavoriteButton;\n"]},"metadata":{},"sourceType":"module"}