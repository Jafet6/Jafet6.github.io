{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-recipes-app-03/src/pages/DetailsPage/DetailsDrinksPage/RecommendedMeals.js\";\nimport React, { useState, useEffect, useContext, useCallback } from 'react';\nimport { fetchMeals } from '../../../services/theMealAPI';\nimport RecommendedMealsComponent from './RecommendedMealsComponent';\nimport FoodContext from '../../FoodMainPage/Context/FoodContext';\n\nconst RecommendedMeals = () => {\n  // const [data, setData] = useState([]);\n  // const [isLoading, setIsLoading] = useState('');\n  // const [errorMessage, setErrorMessage] = useState('');\n  const {\n    mealsData\n  } = useContext(FoodContext); // const apiRequestSucceedMeal = ({ meals }) => {\n  //   setData(meals);\n  //   setIsLoading(false);\n  // };\n  // const apiRequestFailure = ({ message }) => {\n  //   setErrorMessage(message);\n  //   setIsLoading(false);\n  // };\n  // useEffect(() => {\n  //   const apiRequestFunction = () => {\n  //     fetchMeals().then(apiRequestSucceedMeal, apiRequestFailure);\n  //   };\n  //   apiRequestFunction();\n  // }, []);\n\n  const sixRecommendedMeals = mealsData.slice(0, 6);\n  console.log(sixRecommendedMeals); // console.log(isLoading, errorMessage);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Recomendadas\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, sixRecommendedMeals.map((meals, index) => /*#__PURE__*/React.createElement(RecommendedMealsComponent, {\n    \"data-testid\": `${index}-recomendation-card`,\n    key: meals.idMeal,\n    meals: meals,\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default RecommendedMeals;","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-recipes-app-03/src/pages/DetailsPage/DetailsDrinksPage/RecommendedMeals.js"],"names":["React","useState","useEffect","useContext","useCallback","fetchMeals","RecommendedMealsComponent","FoodContext","RecommendedMeals","mealsData","sixRecommendedMeals","slice","console","log","map","meals","index","idMeal"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,EAAiDC,WAAjD,QAAoE,OAApE;AACA,SAASC,UAAT,QAA2B,8BAA3B;AACA,OAAOC,yBAAP,MAAsC,6BAAtC;AACA,OAAOC,WAAP,MAAwB,wCAAxB;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAC7B;AACA;AACA;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAgBN,UAAU,CAACI,WAAD,CAAhC,CAJ6B,CAM7B;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMG,mBAAmB,GAAGD,SAAS,CAACE,KAAV,CAAgB,CAAhB,EAAmB,CAAnB,CAA5B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,mBAAZ,EAxB6B,CAyB7B;;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,mBAAmB,CAACI,GAApB,CAAwB,CAACC,KAAD,EAAQC,KAAR,kBACvB,oBAAC,yBAAD;AACE,mBAAc,GAAEA,KAAM,qBADxB;AAEE,IAAA,GAAG,EAAED,KAAK,CAACE,MAFb;AAGE,IAAA,KAAK,EAAEF,KAHT;AAIE,IAAA,KAAK,EAAEC,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAFF,CADF;AAeD,CAzCD;;AA2CA,eAAeR,gBAAf","sourcesContent":["import React, { useState, useEffect, useContext, useCallback } from 'react';\nimport { fetchMeals } from '../../../services/theMealAPI';\nimport RecommendedMealsComponent from './RecommendedMealsComponent';\nimport FoodContext from '../../FoodMainPage/Context/FoodContext';\n\nconst RecommendedMeals = () => {\n  // const [data, setData] = useState([]);\n  // const [isLoading, setIsLoading] = useState('');\n  // const [errorMessage, setErrorMessage] = useState('');\n  const { mealsData } = useContext(FoodContext);\n\n  // const apiRequestSucceedMeal = ({ meals }) => {\n  //   setData(meals);\n  //   setIsLoading(false);\n  // };\n\n  // const apiRequestFailure = ({ message }) => {\n  //   setErrorMessage(message);\n  //   setIsLoading(false);\n  // };\n\n  // useEffect(() => {\n  //   const apiRequestFunction = () => {\n  //     fetchMeals().then(apiRequestSucceedMeal, apiRequestFailure);\n  //   };\n  //   apiRequestFunction();\n  // }, []);\n\n  const sixRecommendedMeals = mealsData.slice(0, 6);\n  console.log(sixRecommendedMeals);\n  // console.log(isLoading, errorMessage);\n  return (\n    <div>\n      <h2>Recomendadas</h2>\n      <div>\n        {sixRecommendedMeals.map((meals, index) =>\n          <RecommendedMealsComponent\n            data-testid={`${index}-recomendation-card`}\n            key={meals.idMeal}\n            meals={meals}\n            index={index}\n          />,\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default RecommendedMeals;\n"]},"metadata":{},"sourceType":"module"}