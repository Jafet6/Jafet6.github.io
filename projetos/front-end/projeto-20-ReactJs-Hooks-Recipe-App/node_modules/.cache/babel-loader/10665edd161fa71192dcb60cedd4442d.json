{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-recipes-app-03/src/pages/DetailsPage/DetailsRecipePage/DetailsRecipeContent.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { RecipeInProgressContext } from '../../RecipesInProgress/RecipeInProgressProvider';\nimport DetailsRecipesPage from './DetailsRecipesPage';\nimport { fetchMealById, fetchMeals } from '../../../services/theMealAPI';\nimport { fetchDrinkById, fetchDrinks } from '../../../services/theCockTailAPI';\n\nconst DetailsRecipeContent = props => {\n  // const [data, setData] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    setRecipeDataFunc,\n    setPathNameFunc,\n    setProviderRecommendedFunc\n  } = useContext(RecipeInProgressContext);\n  const {\n    match: {\n      params: {\n        id\n      }\n    },\n    location: {\n      pathname\n    }\n  } = props;\n\n  const apiRequestSucceedMeal = ({\n    meals\n  }) => {\n    if (!pathname.includes('/comidas')) return setProviderRecommendedFunc(meals); // setData(meals[0]);\n\n    setRecipeDataFunc(meals[0]);\n    setPathNameFunc(pathname);\n    return setIsLoading(false);\n  };\n\n  const apiRequestSucceedDrink = ({\n    drinks\n  }) => {\n    if (!pathname.includes('/bebidas')) return setProviderRecommendedFunc(drinks); // setData(drinks[0]);\n\n    setRecipeDataFunc(drinks[0]);\n    setPathNameFunc(pathname);\n    return setIsLoading(false);\n  };\n\n  const apiRequestFailure = ({\n    message\n  }) => {\n    setErrorMessage(message);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    const apiRequestFunction = (callback, recipeId = '') => {\n      setIsLoading(true);\n\n      if (callback === fetchMealById || callback === fetchMeals) {\n        return callback(recipeId).then(apiRequestSucceedMeal, apiRequestFailure);\n      }\n\n      return callback(recipeId).then(apiRequestSucceedDrink, apiRequestFailure);\n    };\n\n    if (pathname.includes('/comidas')) {\n      apiRequestFunction(fetchMealById, id);\n      apiRequestFunction(fetchDrinks);\n    } else {\n      apiRequestFunction(fetchDrinkById, id);\n      apiRequestFunction(fetchMeals);\n    }\n  }, [pathname]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(DetailsRecipesPage, {\n    renderControl: {\n      isLoading,\n      errorMessage\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }));\n};\n\nexport default DetailsRecipeContent;\nDetailsRecipeContent.propTypes = {\n  match: PropTypes.objectOf(PropTypes.any).isRequired,\n  location: PropTypes.objectOf(PropTypes.any).isRequired\n};","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-recipes-app-03/src/pages/DetailsPage/DetailsRecipePage/DetailsRecipeContent.js"],"names":["React","useEffect","useState","useContext","PropTypes","RecipeInProgressContext","DetailsRecipesPage","fetchMealById","fetchMeals","fetchDrinkById","fetchDrinks","DetailsRecipeContent","props","errorMessage","setErrorMessage","isLoading","setIsLoading","setRecipeDataFunc","setPathNameFunc","setProviderRecommendedFunc","match","params","id","location","pathname","apiRequestSucceedMeal","meals","includes","apiRequestSucceedDrink","drinks","apiRequestFailure","message","apiRequestFunction","callback","recipeId","then","propTypes","objectOf","any","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,uBAAT,QAAwC,kDAAxC;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,8BAA1C;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,kCAA5C;;AAEA,MAAMC,oBAAoB,GAAIC,KAAD,IAAW;AACtC;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAM;AACJe,IAAAA,iBADI;AACeC,IAAAA,eADf;AACgCC,IAAAA;AADhC,MAEFhB,UAAU,CAACE,uBAAD,CAFd;AAIA,QAAM;AAAEe,IAAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA;AAAF;AAAV,KAAT;AAA6BC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA;AAAF;AAAvC,MAAwDZ,KAA9D;;AAEA,QAAMa,qBAAqB,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAe;AAC3C,QAAI,CAACF,QAAQ,CAACG,QAAT,CAAkB,UAAlB,CAAL,EAAoC,OAAOR,0BAA0B,CAACO,KAAD,CAAjC,CADO,CAE3C;;AACAT,IAAAA,iBAAiB,CAACS,KAAK,CAAC,CAAD,CAAN,CAAjB;AACAR,IAAAA,eAAe,CAACM,QAAD,CAAf;AACA,WAAOR,YAAY,CAAC,KAAD,CAAnB;AACD,GAND;;AAQA,QAAMY,sBAAsB,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgB;AAC7C,QAAI,CAACL,QAAQ,CAACG,QAAT,CAAkB,UAAlB,CAAL,EAAoC,OAAOR,0BAA0B,CAACU,MAAD,CAAjC,CADS,CAE7C;;AACAZ,IAAAA,iBAAiB,CAACY,MAAM,CAAC,CAAD,CAAP,CAAjB;AACAX,IAAAA,eAAe,CAACM,QAAD,CAAf;AACA,WAAOR,YAAY,CAAC,KAAD,CAAnB;AACD,GAND;;AAQA,QAAMc,iBAAiB,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAiB;AACzCjB,IAAAA,eAAe,CAACiB,OAAD,CAAf;AACAf,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAHD;;AAKAf,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM+B,kBAAkB,GAAG,CAACC,QAAD,EAAWC,QAAQ,GAAG,EAAtB,KAA6B;AACtDlB,MAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,UAAIiB,QAAQ,KAAK1B,aAAb,IAA8B0B,QAAQ,KAAKzB,UAA/C,EAA2D;AACzD,eAAOyB,QAAQ,CAACC,QAAD,CAAR,CAAmBC,IAAnB,CAAwBV,qBAAxB,EAA+CK,iBAA/C,CAAP;AACD;;AACD,aAAOG,QAAQ,CAACC,QAAD,CAAR,CAAmBC,IAAnB,CAAwBP,sBAAxB,EAAgDE,iBAAhD,CAAP;AACD,KAND;;AAQA,QAAIN,QAAQ,CAACG,QAAT,CAAkB,UAAlB,CAAJ,EAAmC;AACjCK,MAAAA,kBAAkB,CAACzB,aAAD,EAAgBe,EAAhB,CAAlB;AACAU,MAAAA,kBAAkB,CAACtB,WAAD,CAAlB;AACD,KAHD,MAGO;AACLsB,MAAAA,kBAAkB,CAACvB,cAAD,EAAiBa,EAAjB,CAAlB;AACAU,MAAAA,kBAAkB,CAACxB,UAAD,CAAlB;AACD;AACF,GAhBQ,EAgBN,CAACgB,QAAD,CAhBM,CAAT;AAkBA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK,oBAAC,kBAAD;AAAoB,IAAA,aAAa,EAAE;AAAET,MAAAA,SAAF;AAAaF,MAAAA;AAAb,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,CAAP;AACD,CAnDD;;AAqDA,eAAeF,oBAAf;AAEAA,oBAAoB,CAACyB,SAArB,GAAiC;AAC/BhB,EAAAA,KAAK,EAAEhB,SAAS,CAACiC,QAAV,CAAmBjC,SAAS,CAACkC,GAA7B,EAAkCC,UADV;AAE/BhB,EAAAA,QAAQ,EAAEnB,SAAS,CAACiC,QAAV,CAAmBjC,SAAS,CAACkC,GAA7B,EAAkCC;AAFb,CAAjC","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { RecipeInProgressContext } from '../../RecipesInProgress/RecipeInProgressProvider';\nimport DetailsRecipesPage from './DetailsRecipesPage';\nimport { fetchMealById, fetchMeals } from '../../../services/theMealAPI';\nimport { fetchDrinkById, fetchDrinks } from '../../../services/theCockTailAPI';\n\nconst DetailsRecipeContent = (props) => {\n  // const [data, setData] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const {\n    setRecipeDataFunc, setPathNameFunc, setProviderRecommendedFunc,\n  } = useContext(RecipeInProgressContext);\n\n  const { match: { params: { id } }, location: { pathname } } = props;\n\n  const apiRequestSucceedMeal = ({ meals }) => {\n    if (!pathname.includes('/comidas')) return setProviderRecommendedFunc(meals);\n    // setData(meals[0]);\n    setRecipeDataFunc(meals[0]);\n    setPathNameFunc(pathname);\n    return setIsLoading(false);\n  };\n\n  const apiRequestSucceedDrink = ({ drinks }) => {\n    if (!pathname.includes('/bebidas')) return setProviderRecommendedFunc(drinks);\n    // setData(drinks[0]);\n    setRecipeDataFunc(drinks[0]);\n    setPathNameFunc(pathname);\n    return setIsLoading(false);\n  };\n\n  const apiRequestFailure = ({ message }) => {\n    setErrorMessage(message);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    const apiRequestFunction = (callback, recipeId = '') => {\n      setIsLoading(true);\n      if (callback === fetchMealById || callback === fetchMeals) {\n        return callback(recipeId).then(apiRequestSucceedMeal, apiRequestFailure);\n      }\n      return callback(recipeId).then(apiRequestSucceedDrink, apiRequestFailure);\n    };\n\n    if (pathname.includes('/comidas')) {\n      apiRequestFunction(fetchMealById, id);\n      apiRequestFunction(fetchDrinks);\n    } else {\n      apiRequestFunction(fetchDrinkById, id);\n      apiRequestFunction(fetchMeals);\n    }\n  }, [pathname]);\n\n  return <div><DetailsRecipesPage renderControl={{ isLoading, errorMessage }} /></div>;\n};\n\nexport default DetailsRecipeContent;\n\nDetailsRecipeContent.propTypes = {\n  match: PropTypes.objectOf(PropTypes.any).isRequired,\n  location: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}