{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-recipes-app-03/src/components/Recipes/RecipeCard/RecipeCard.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport ShareButton from '../../../components/Share/ShareButton';\nimport FavoriteButton from '../../../components/Favorite/FavoriteButton';\nimport './RecipeCard.css';\nimport garfo from \"./garfo.svg\";\nimport beber from \"./beber.svg\";\n\nconst renderThumb = (recipe, index, favoriteds, setRedirect) => {\n  const {\n    img,\n    name\n  } = recipe;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": `${index}-recipe-card`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setRedirect(true),\n    className: \"buttonCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"thumbnail\",\n    alt: `imagem de uma refeiÃ§Ã£o: ${name}`,\n    \"data-testid\": favoriteds ? `${index}-horizontal-image` : `${index}-card-img`,\n    src: img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst renderCardInfo = (recipe, index, favoriteds, setRedirect) => {\n  const {\n    name,\n    type,\n    id\n  } = recipe;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setRedirect(true),\n    className: \"buttonCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"data-testid\": favoriteds ? `${index}-horizontal-name` : `${index}-card-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, name)), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"recipe-icon\",\n    src: type[0] === 'c' ? garfo : beber,\n    width: \"20px\",\n    alt: \"icone de talheres\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })), favoriteds && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ShareButton, {\n    index: index,\n    path: `/${type}s/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FavoriteButton, {\n    recipe: recipe,\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  })));\n};\n\nconst renderSubtitleCard = (recipe, index, favoriteds) => {\n  const {\n    area,\n    category,\n    alcoholic\n  } = recipe;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, favoriteds && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"subtitle-card\",\n    \"data-testid\": `${index}-horizontal-top-text`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, recipe.type[0] === 'c' ? `${area} - ${category}` : alcoholic));\n};\n\nconst RecipeCard = ({\n  recipe,\n  index,\n  favoriteds\n}) => {\n  const [redirect, setRedirect] = useState(false);\n  const {\n    id,\n    type\n  } = recipe;\n  if (redirect) return /*#__PURE__*/React.createElement(Redirect, {\n    to: !favoriteds ? '#' : `/${type}s/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 24\n    }\n  });\n  return /*#__PURE__*/React.createElement(Link, {\n    className: \"card b-shadow\",\n    to: favoriteds ? '#' : `/${type}s/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, renderThumb(recipe, index, favoriteds, setRedirect), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"infoCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, renderCardInfo(recipe, index, favoriteds, setRedirect), renderSubtitleCard(recipe, index, favoriteds)));\n};\n\nRecipeCard.defaultProps = {\n  favoriteds: undefined\n};\nRecipeCard.propTypes = {\n  recipe: PropTypes.shape({\n    img: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n  favoriteds: PropTypes.string\n};\nexport default RecipeCard;","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-recipes-app-03/src/components/Recipes/RecipeCard/RecipeCard.js"],"names":["React","useState","PropTypes","Link","Redirect","ShareButton","FavoriteButton","renderThumb","recipe","index","favoriteds","setRedirect","img","name","renderCardInfo","type","id","garfo","beber","renderSubtitleCard","area","category","alcoholic","RecipeCard","redirect","defaultProps","undefined","propTypes","shape","string","isRequired","number"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport ShareButton from '../../../components/Share/ShareButton';\nimport FavoriteButton from '../../../components/Favorite/FavoriteButton';\nimport './RecipeCard.css';\n\nimport garfo from './garfo.svg';\nimport beber from './beber.svg';\n\nconst renderThumb = (recipe, index, favoriteds, setRedirect) => {\n  const { img, name } = recipe;\n  return (\n    <div data-testid={`${index}-recipe-card`}>\n      <button onClick={() => setRedirect(true)} className=\"buttonCard\">\n        <img\n          className=\"thumbnail\"\n          alt={`imagem de uma refeiÃ§Ã£o: ${name}`}\n          data-testid={favoriteds ? `${index}-horizontal-image` : `${index}-card-img`}\n          src={img}\n        />\n      </button>\n    </div>\n  );\n};\n\nconst renderCardInfo = (recipe, index, favoriteds, setRedirect) => {\n  const { name, type, id } = recipe;\n  return (\n    <React.Fragment>\n      <div className=\"card-title\">\n        <button onClick={() => setRedirect(true)} className=\"buttonCard\">\n          <span\n            data-testid={favoriteds ? `${index}-horizontal-name` : `${index}-card-name`}\n          >{name}\n          </span>\n        </button>\n        <img\n          className=\"recipe-icon\"src={type[0] === 'c' ? garfo : beber}\n          width=\"20px\" alt=\"icone de talheres\"\n        />\n      </div>\n      {favoriteds &&\n        <div>\n          <ShareButton index={index} path={`/${type}s/${id}`} />\n          <FavoriteButton recipe={recipe} index={index} />\n        </div>\n      }\n    </React.Fragment>\n  );\n};\n\nconst renderSubtitleCard = (recipe, index, favoriteds) => {\n  const { area, category, alcoholic } = recipe;\n  return (\n    <React.Fragment>\n      {favoriteds &&\n        <span\n          className=\"subtitle-card\"\n          data-testid={`${index}-horizontal-top-text`}\n        >\n          {recipe.type[0] === 'c' ? `${area} - ${category}` : alcoholic}\n        </span>\n      }\n    </React.Fragment>\n  );\n};\nconst RecipeCard = ({ recipe, index, favoriteds }) => {\n  const [redirect, setRedirect] = useState(false);\n  const { id, type } = recipe;\n  if (redirect) return <Redirect to={!favoriteds ? '#' : `/${type}s/${id}`} />;\n  return (\n    <Link className=\"card b-shadow\" to={favoriteds ? '#' : `/${type}s/${id}`}>\n      {renderThumb(recipe, index, favoriteds, setRedirect)}\n      <div className=\"infoCard\">\n        {renderCardInfo(recipe, index, favoriteds, setRedirect)}\n        {renderSubtitleCard(recipe, index, favoriteds)}\n      </div>\n    </Link>\n  );\n};\n\nRecipeCard.defaultProps = {\n  favoriteds: undefined,\n};\n\nRecipeCard.propTypes = {\n  recipe: PropTypes.shape({\n    img: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n  favoriteds: PropTypes.string,\n};\n\n\nexport default RecipeCard;\n"]},"metadata":{},"sourceType":"module"}