{"ast":null,"code":"export const fetchDrinks = () => {\n  const url12Drinks = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n  return fetch(url12Drinks).then(response => response.json().then(json => response.ok ? Promise.resolve(json) : Promise.reject(json)));\n};\nconst urlCategoriesDrinks = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list';\nexport const fetchCategoriesDrinks = () => fetch(urlCategoriesDrinks).then(response => response.json().then(json => response.ok ? Promise.resolve(json) : Promise.reject(json)));\nconst urlCategoryDrinksButton = 'https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=';\nexport const fetchDrinkByCategoryButton = category => fetch(`${urlCategoryDrinksButton}${category}`).then(response => response.json().then(json => response.ok ? Promise.resolve(json) : Promise.reject(json)));\nexport const fetchDrinkById = id => {\n  const urlDrinkById = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`;\n  return fetch(urlDrinkById).then(response => response.json().then(json => response.ok ? Promise.resolve(json) : Promise.reject(json)));\n};\nconst urlRandomDrink = 'https://www.thecocktaildb.com/api/json/v1/1/random.php';\nexport const fetchRandomDrink = async () => {\n  const response = await fetch(`${urlRandomDrink}`);\n  return response.json();\n};\nconst urlListDrinksIngredients = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list';\nexport const fetchListDrinksIngredients = async () => {\n  const response = await fetch(urlListDrinksIngredients);\n  return response.json();\n};\nconst urlFindDrinkByIngredients = 'https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=';\nexport const fetchDrinksByIngredient = ingredient => fetch(`${urlFindDrinkByIngredients}${ingredient}`).then(response => response.json()).then(json => Promise.ok ? Promise.resolve(json) : Promise.reject(json));\nconst urlFindDrinksByName = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\nexport const fetchDrinksByName = name => fetch(`${urlFindDrinksByName}${name}`).then(response => response.json()).then(json => Promise.ok ? Promise.resolve(json) : Promise.reject(json));\nconst urlFindByFirstLetter = 'https://www.themealdb.com/api/json/v1/1/search.php?f=';\nexport const fetchDrinksByFirstLetter = letter => fetch(`${urlFindByFirstLetter}${letter}`).then(response => response.json()).then(json => Promise.ok ? Promise.resolve(json) : Promise.reject(json));","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-recipes-app-03/src/services/theCockTailAPI.js"],"names":["fetchDrinks","url12Drinks","fetch","then","response","json","ok","Promise","resolve","reject","urlCategoriesDrinks","fetchCategoriesDrinks","urlCategoryDrinksButton","fetchDrinkByCategoryButton","category","fetchDrinkById","id","urlDrinkById","urlRandomDrink","fetchRandomDrink","urlListDrinksIngredients","fetchListDrinksIngredients","urlFindDrinkByIngredients","fetchDrinksByIngredient","ingredient","urlFindDrinksByName","fetchDrinksByName","name","urlFindByFirstLetter","fetchDrinksByFirstLetter","letter"],"mappings":"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","sourcesContent":["export const fetchDrinks = () => {\n  const url12Drinks = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n  return fetch(url12Drinks).then((response) => (\n    response.json()\n      .then((json) => (response.ok ? Promise.resolve(json) : Promise.reject(json)))\n  ));\n};\n\nconst urlCategoriesDrinks = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list';\nexport const fetchCategoriesDrinks = () => (\n  fetch(urlCategoriesDrinks).then((response) => (\n    response.json()\n      .then((json) => (response.ok ? Promise.resolve(json) : Promise.reject(json)))\n  ))\n);\n\nconst urlCategoryDrinksButton = 'https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=';\nexport const fetchDrinkByCategoryButton = (category) => (\n  fetch(`${urlCategoryDrinksButton}${category}`).then((response) => (\n    response.json()\n      .then((json) => (response.ok ? Promise.resolve(json) : Promise.reject(json)))\n  ))\n);\n\nexport const fetchDrinkById = (id) => {\n  const urlDrinkById = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`;\n  return fetch(urlDrinkById).then((response) => (\n    response.json()\n      .then((json) => (response.ok ? Promise.resolve(json) : Promise.reject(json)))\n  ));\n};\n\nconst urlRandomDrink = 'https://www.thecocktaildb.com/api/json/v1/1/random.php';\nexport const fetchRandomDrink = async () => {\n  const response = await fetch(`${urlRandomDrink}`);\n  return response.json();\n};\n\nconst urlListDrinksIngredients = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list';\nexport const fetchListDrinksIngredients = async () => {\n  const response = await fetch(urlListDrinksIngredients);\n  return response.json();\n};\n\nconst urlFindDrinkByIngredients = 'https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=';\nexport const fetchDrinksByIngredient = (ingredient) => (\n  fetch(`${urlFindDrinkByIngredients}${ingredient}`)\n    .then((response) => response.json())\n    .then((json) => (Promise.ok ? Promise.resolve(json) : Promise.reject(json)))\n);\n\nconst urlFindDrinksByName = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\nexport const fetchDrinksByName = (name) => (\n  fetch(`${urlFindDrinksByName}${name}`)\n    .then((response) => response.json())\n    .then((json) => (Promise.ok ? Promise.resolve(json) : Promise.reject(json)))\n);\n\nconst urlFindByFirstLetter = 'https://www.themealdb.com/api/json/v1/1/search.php?f=';\nexport const fetchDrinksByFirstLetter = (letter) => (\n  fetch(`${urlFindByFirstLetter}${letter}`)\n    .then((response) => response.json())\n    .then((json) => (Promise.ok ? Promise.resolve(json) : Promise.reject(json)))\n);\n"]},"metadata":{},"sourceType":"module"}