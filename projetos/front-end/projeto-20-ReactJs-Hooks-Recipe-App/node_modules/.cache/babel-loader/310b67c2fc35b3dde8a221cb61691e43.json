{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-recipes-app-03/src/pages/ExplorerPages/ExplorerDrinkOrFood.js\";\nimport React, { useState, useEffect } from 'react'; // import PropTypes from 'prop-types';\n\nimport { Link, useLocation } from 'react-router-dom';\nimport Footer from '../../components/Footer/Footer';\nimport './Explorer.css';\nimport Header from '../../components/Header/index';\nimport { fetchRandomMeal } from '../../services/theMealAPI';\nimport { fetchRandomDrink } from '../../services/theCockTailAPI';\n\nconst fetchRandomRecipes = async (pathname, setRandomRecipe) => {\n  if (pathname === '/explorar/comidas') {\n    const randomRecipe = await fetchRandomMeal();\n    const randomId = randomRecipe.meals[0].idMeal;\n    setRandomRecipe(randomId);\n  } else if (pathname === '/explorar/bebidas') {\n    const randomRecipe = await fetchRandomDrink();\n    const randomId = randomRecipe.drinks[0].idDrink;\n    setRandomRecipe(randomId);\n  }\n};\n\nfunction buttonFoodOrDrink(currentRoute, nextRoute, buttonTitle, testid) {\n  return /*#__PURE__*/React.createElement(Link, {\n    to: `/explorar/${currentRoute}/${nextRoute}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"buttonExplorer\",\n    \"data-testid\": `explore-by-${testid}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, buttonTitle));\n}\n\nconst buttonSuprise = (pathname, currentRoute, randomRecipe) => {\n  if (pathname === '/explorar/comidas') {\n    return /*#__PURE__*/React.createElement(Link, {\n      to: `/${currentRoute}/${randomRecipe}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"buttonExplorer\",\n      \"data-testid\": 'explore-surprise',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, \"Me Surpreenda!\"));\n  }\n\n  return /*#__PURE__*/React.createElement(Link, {\n    to: `/${currentRoute}/${randomRecipe}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"buttonExplorer\",\n    \"data-testid\": 'explore-surprise',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Me Surpreenda!\"));\n};\n\nfunction ExplorerDrinkOrFoods() {\n  const [randomRecipe, setRandomRecipe] = useState('');\n  const {\n    pathname\n  } = useLocation();\n  useEffect(() => {\n    fetchRandomRecipes(pathname, setRandomRecipe);\n  }, []);\n\n  if (pathname === '/explorar/comidas') {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      title: \"Explorar Comidas\",\n      searchIcon: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"explorer-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, buttonFoodOrDrink('comidas', 'ingredientes', 'Por Ingredientes', 'ingredient'), buttonFoodOrDrink('comidas', 'area', 'Por Local de Origem', 'area'), buttonSuprise(pathname, 'comidas', randomRecipe)), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    title: \"Explorar Bebidas\",\n    searchIcon: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"explorer-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, buttonFoodOrDrink('bebidas', 'ingredientes', 'Por Ingredientes', 'ingredient'), buttonSuprise(pathname, 'bebidas', randomRecipe)), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }));\n} // ExplorerDrinkOrFoods.propTypes = {\n//   location: PropTypes.shape({\n//     pathname: PropTypes.string.isRequired,\n//   }).isRequired,\n// };\n\n\nexport default ExplorerDrinkOrFoods;","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-recipes-app-03/src/pages/ExplorerPages/ExplorerDrinkOrFood.js"],"names":["React","useState","useEffect","Link","useLocation","Footer","Header","fetchRandomMeal","fetchRandomDrink","fetchRandomRecipes","pathname","setRandomRecipe","randomRecipe","randomId","meals","idMeal","drinks","idDrink","buttonFoodOrDrink","currentRoute","nextRoute","buttonTitle","testid","buttonSuprise","ExplorerDrinkOrFoods"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n// import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport Footer from '../../components/Footer/Footer';\nimport './Explorer.css';\nimport Header from '../../components/Header/index';\nimport { fetchRandomMeal } from '../../services/theMealAPI';\nimport { fetchRandomDrink } from '../../services/theCockTailAPI';\n\nconst fetchRandomRecipes = async (pathname, setRandomRecipe) => {\n  if (pathname === '/explorar/comidas') {\n    const randomRecipe = await fetchRandomMeal();\n    const randomId = randomRecipe.meals[0].idMeal;\n    setRandomRecipe(randomId);\n  } else if (pathname === '/explorar/bebidas') {\n    const randomRecipe = await fetchRandomDrink();\n    const randomId = randomRecipe.drinks[0].idDrink;\n    setRandomRecipe(randomId);\n  }\n};\n\nfunction buttonFoodOrDrink(currentRoute, nextRoute, buttonTitle, testid) {\n  return (\n    <Link to={`/explorar/${currentRoute}/${nextRoute}`}>\n      <button\n        type=\"submit\"\n        className=\"buttonExplorer\"\n        data-testid={`explore-by-${testid}`}\n      >\n        {buttonTitle}\n      </button>\n    </Link>\n  );\n}\n\nconst buttonSuprise = (pathname, currentRoute, randomRecipe) => {\n  if (pathname === '/explorar/comidas') {\n    return (\n      <Link to={`/${currentRoute}/${randomRecipe}`}>\n        <button\n          type=\"submit\"\n          className=\"buttonExplorer\"\n          data-testid={'explore-surprise'}\n        >\n          Me Surpreenda!\n        </button>\n      </Link>\n    );\n  }\n\n  return (\n    <Link to={`/${currentRoute}/${randomRecipe}`}>\n      <button\n        type=\"submit\"\n        className=\"buttonExplorer\"\n        data-testid={'explore-surprise'}\n      >\n        Me Surpreenda!\n      </button>\n    </Link>\n  );\n};\n\nfunction ExplorerDrinkOrFoods() {\n  const [randomRecipe, setRandomRecipe] = useState('');\n  const { pathname } = useLocation();\n  useEffect(() => {\n    fetchRandomRecipes(pathname, setRandomRecipe);\n  }, []);\n\n  if (pathname === '/explorar/comidas') {\n    return (\n      <div>\n        <Header title=\"Explorar Comidas\" searchIcon={false} />\n        <div className=\"explorer-container\">\n          {buttonFoodOrDrink('comidas', 'ingredientes', 'Por Ingredientes', 'ingredient')}\n          {buttonFoodOrDrink('comidas', 'area', 'Por Local de Origem', 'area')}\n          {buttonSuprise(pathname, 'comidas', randomRecipe)}\n        </div>\n        <Footer />\n      </div>\n    );\n  } return (\n    <div>\n      <Header title=\"Explorar Bebidas\" searchIcon={false} />\n      <div className=\"explorer-container\">\n        {buttonFoodOrDrink('bebidas', 'ingredientes', 'Por Ingredientes', 'ingredient')}\n        {buttonSuprise(pathname, 'bebidas', randomRecipe)}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\n// ExplorerDrinkOrFoods.propTypes = {\n//   location: PropTypes.shape({\n//     pathname: PropTypes.string.isRequired,\n//   }).isRequired,\n// };\n\nexport default ExplorerDrinkOrFoods;\n"]},"metadata":{},"sourceType":"module"}