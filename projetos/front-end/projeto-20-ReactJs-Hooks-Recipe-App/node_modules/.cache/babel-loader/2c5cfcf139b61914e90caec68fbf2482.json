{"ast":null,"code":"import { ingredientsWithQuantity } from '../untils/ingredientsWithQuantity';\nexport const destructureMeal = data => {\n  let apiType = 'drink';\n  let init = 21;\n  let mid = 36;\n  let end = 51;\n  let type = 'bebidas';\n\n  if (data.idMeal) {\n    apiType = 'meal';\n    init = 9;\n    mid = 29;\n    end = 49;\n    type = 'comidas';\n  }\n\n  ;\n  const ingredientsValues = Object.values(data).slice(init, mid);\n  const ingredientsQuantity = Object.values(data).slice(mid, end);\n  const {\n    [`str${meal}`]: name,\n    strCategory: category,\n    [`str${meal}Thumb`]: img,\n    strYoutube: video,\n    strInstructions: instructions,\n    [`id${meal}`]: id,\n    strArea: area,\n    strTags: tags,\n    strAlcoholic: alcoholic\n  } = data;\n  const dataObj = {\n    data,\n    name,\n    category,\n    alcoholic,\n    img,\n    video,\n    instructions,\n    id,\n    ingredients: ingredientsWithQuantity(ingredientsValues, ingredientsQuantity),\n    area,\n    init,\n    mid,\n    end,\n    type,\n    tags\n  };\n  return dataObj;\n};\nexport const destructureDrinks = data => {\n  const init = 21;\n  const mid = 36;\n  const end = 51;\n  const ingredientsValues = Object.values(data).slice(init, mid);\n  const ingredientsQuantity = Object.values(data).slice(mid, end);\n  const drink = 'drink';\n  const {\n    [`str${drink}`]: name,\n    strAlcoholic: alcoholic,\n    [`str${drink}Thumb`]: img,\n    strCategory: category,\n    strInstructions: instructions,\n    [`id${Drink}`]: id,\n    strArea: area\n  } = data;\n  const dataObj = {\n    name,\n    category,\n    alcoholic,\n    img,\n    instructions,\n    id,\n    ingredients: ingredientsWithQuantity(ingredientsValues, ingredientsQuantity),\n    area,\n    init,\n    mid,\n    end,\n    type: 'bebidas'\n  };\n  return dataObj;\n};","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-recipes-app-03/src/untils/destructureObject.js"],"names":["ingredientsWithQuantity","destructureMeal","data","apiType","init","mid","end","type","idMeal","ingredientsValues","Object","values","slice","ingredientsQuantity","meal","name","strCategory","category","img","strYoutube","video","strInstructions","instructions","id","strArea","area","strTags","tags","strAlcoholic","alcoholic","dataObj","ingredients","destructureDrinks","drink","Drink"],"mappings":"AAAA,SAASA,uBAAT,QAAwC,mCAAxC;AAEA,OAAO,MAAMC,eAAe,GAAIC,IAAD,IAAU;AACvC,MAAIC,OAAO,GAAG,OAAd;AACA,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIC,IAAI,GAAG,SAAX;;AACA,MAAIL,IAAI,CAACM,MAAT,EAAiB;AACfL,IAAAA,OAAO,GAAG,MAAV;AACAC,IAAAA,IAAI,GAAG,CAAP;AACAC,IAAAA,GAAG,GAAG,EAAN;AACAC,IAAAA,GAAG,GAAG,EAAN;AACAC,IAAAA,IAAI,GAAG,SAAP;AACD;;AAAA;AAED,QAAME,iBAAiB,GAAGC,MAAM,CAACC,MAAP,CAAcT,IAAd,EAAoBU,KAApB,CAA0BR,IAA1B,EAAgCC,GAAhC,CAA1B;AACA,QAAMQ,mBAAmB,GAAGH,MAAM,CAACC,MAAP,CAAcT,IAAd,EAAoBU,KAApB,CAA0BP,GAA1B,EAA+BC,GAA/B,CAA5B;AAEA,QAAM;AACJ,KAAE,MAAKQ,IAAK,EAAZ,GAAgBC,IADZ;AACkBC,IAAAA,WAAW,EAAEC,QAD/B;AACyC,KAAE,MAAKH,IAAK,OAAZ,GAAqBI,GAD9D;AACmEC,IAAAA,UAAU,EAAEC,KAD/E;AAEJC,IAAAA,eAAe,EAAEC,YAFb;AAE2B,KAAE,KAAIR,IAAK,EAAX,GAAeS,EAF1C;AAE8CC,IAAAA,OAAO,EAAEC,IAFvD;AAE6DC,IAAAA,OAAO,EAAEC,IAFtE;AAE4EC,IAAAA,YAAY,EAAEC;AAF1F,MAGF3B,IAHJ;AAKA,QAAM4B,OAAO,GAAG;AACd5B,IAAAA,IADc;AAEda,IAAAA,IAFc;AAGdE,IAAAA,QAHc;AAIdY,IAAAA,SAJc;AAKdX,IAAAA,GALc;AAMdE,IAAAA,KANc;AAOdE,IAAAA,YAPc;AAQdC,IAAAA,EARc;AASdQ,IAAAA,WAAW,EAAE/B,uBAAuB,CAACS,iBAAD,EAAoBI,mBAApB,CATtB;AAUdY,IAAAA,IAVc;AAWdrB,IAAAA,IAXc;AAYdC,IAAAA,GAZc;AAadC,IAAAA,GAbc;AAcdC,IAAAA,IAdc;AAedoB,IAAAA;AAfc,GAAhB;AAkBA,SAAOG,OAAP;AACD,CAzCM;AA2CP,OAAO,MAAME,iBAAiB,GAAI9B,IAAD,IAAU;AACzC,QAAME,IAAI,GAAG,EAAb;AACA,QAAMC,GAAG,GAAG,EAAZ;AACA,QAAMC,GAAG,GAAG,EAAZ;AAEA,QAAMG,iBAAiB,GAAGC,MAAM,CAACC,MAAP,CAAcT,IAAd,EAAoBU,KAApB,CAA0BR,IAA1B,EAAgCC,GAAhC,CAA1B;AACA,QAAMQ,mBAAmB,GAAGH,MAAM,CAACC,MAAP,CAAcT,IAAd,EAAoBU,KAApB,CAA0BP,GAA1B,EAA+BC,GAA/B,CAA5B;AACA,QAAM2B,KAAK,GAAG,OAAd;AACA,QAAM;AACJ,KAAE,MAAKA,KAAM,EAAb,GAAiBlB,IADb;AACmBa,IAAAA,YAAY,EAAEC,SADjC;AAC4C,KAAE,MAAKI,KAAM,OAAb,GAAsBf,GADlE;AAEJF,IAAAA,WAAW,EAAEC,QAFT;AAEmBI,IAAAA,eAAe,EAAEC,YAFpC;AAEkD,KAAE,KAAIY,KAAM,EAAZ,GAAgBX,EAFlE;AAEsEC,IAAAA,OAAO,EAAEC;AAF/E,MAGFvB,IAHJ;AAIA,QAAM4B,OAAO,GAAG;AACdf,IAAAA,IADc;AAEdE,IAAAA,QAFc;AAGdY,IAAAA,SAHc;AAIdX,IAAAA,GAJc;AAKdI,IAAAA,YALc;AAMdC,IAAAA,EANc;AAOdQ,IAAAA,WAAW,EAAE/B,uBAAuB,CAACS,iBAAD,EAAoBI,mBAApB,CAPtB;AAQdY,IAAAA,IARc;AASdrB,IAAAA,IATc;AAUdC,IAAAA,GAVc;AAWdC,IAAAA,GAXc;AAYdC,IAAAA,IAAI,EACJ;AAbc,GAAhB;AAeA,SAAOuB,OAAP;AACD,CA5BM","sourcesContent":["import { ingredientsWithQuantity } from '../untils/ingredientsWithQuantity'\n\nexport const destructureMeal = (data) => {\n  let apiType = 'drink';\n  let init = 21;\n  let mid = 36;\n  let end = 51;\n  let type = 'bebidas'\n  if (data.idMeal) {\n    apiType = 'meal';\n    init = 9;\n    mid = 29;\n    end = 49;\n    type = 'comidas';\n  };\n\n  const ingredientsValues = Object.values(data).slice(init, mid);\n  const ingredientsQuantity = Object.values(data).slice(mid, end);\n\n  const {\n    [`str${meal}`]: name, strCategory: category, [`str${meal}Thumb`]: img, strYoutube: video,\n    strInstructions: instructions, [`id${meal}`]: id, strArea: area, strTags: tags, strAlcoholic: alcoholic,\n  } = data;\n\n  const dataObj = {\n    data,\n    name,\n    category,\n    alcoholic,\n    img,\n    video,\n    instructions,\n    id,\n    ingredients: ingredientsWithQuantity(ingredientsValues, ingredientsQuantity),\n    area,\n    init,\n    mid,\n    end,\n    type,\n    tags,\n  };\n\n  return dataObj;\n};\n\nexport const destructureDrinks = (data) => {\n  const init = 21;\n  const mid = 36;\n  const end = 51;\n\n  const ingredientsValues = Object.values(data).slice(init, mid);\n  const ingredientsQuantity = Object.values(data).slice(mid, end);\n  const drink = 'drink';\n  const {\n    [`str${drink}`]: name, strAlcoholic: alcoholic, [`str${drink}Thumb`]: img,\n    strCategory: category, strInstructions: instructions, [`id${Drink}`]: id, strArea: area,\n  } = data;\n  const dataObj = {\n    name,\n    category,\n    alcoholic,\n    img,\n    instructions,\n    id,\n    ingredients: ingredientsWithQuantity(ingredientsValues, ingredientsQuantity),\n    area,\n    init,\n    mid,\n    end,\n    type:\n    'bebidas',\n  };\n  return dataObj;\n};\n"]},"metadata":{},"sourceType":"module"}