{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-recipes-app-03/src/components/HeaderSearchBar/HeaderSearchBarContext.js\";\nimport React, { createContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nexport const SearchBarContext = createContext(null);\nSearchBarContext.displayName = 'SearchBarContext';\n\nconst SearchBarProvider = ({\n  children\n}) => {\n  const [isFetching, setIsFetching] = useState(true);\n  const [data, setData] = useState([]);\n  const context = {\n    isFetching,\n    setIsFetching,\n    data,\n    setData\n  };\n  return /*#__PURE__*/React.createElement(SearchBarContext.Provider, {\n    value: context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 10\n    }\n  }, children);\n};\n\nexport default SearchBarProvider;\nSearchBarProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-recipes-app-03/src/components/HeaderSearchBar/HeaderSearchBarContext.js"],"names":["React","createContext","useState","PropTypes","SearchBarContext","displayName","SearchBarProvider","children","isFetching","setIsFetching","data","setData","context","propTypes","node","isRequired"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,gBAAgB,GAAGH,aAAa,CAAC,IAAD,CAAtC;AAEPG,gBAAgB,CAACC,WAAjB,GAA+B,kBAA/B;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC1C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMU,OAAO,GAAG;AAAEJ,IAAAA,UAAF;AAAcC,IAAAA,aAAd;AAA6BC,IAAAA,IAA7B;AAAmCC,IAAAA;AAAnC,GAAhB;AAEA,sBAAO,oBAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAEC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4CL,QAA5C,CAAP;AACD,CAPD;;AASA,eAAeD,iBAAf;AAEAA,iBAAiB,CAACO,SAAlB,GAA8B;AAAEN,EAAAA,QAAQ,EAAEJ,SAAS,CAACW,IAAV,CAAeC;AAA3B,CAA9B","sourcesContent":["\nimport React, { createContext, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const SearchBarContext = createContext(null);\n\nSearchBarContext.displayName = 'SearchBarContext';\n\nconst SearchBarProvider = ({ children }) => {\n  const [isFetching, setIsFetching] = useState(true);\n  const [data, setData] = useState([]);\n\n  const context = { isFetching, setIsFetching, data, setData };\n\n  return <SearchBarContext.Provider value={context}>{children}</SearchBarContext.Provider>;\n};\n\nexport default SearchBarProvider;\n\nSearchBarProvider.propTypes = { children: PropTypes.node.isRequired };\n"]},"metadata":{},"sourceType":"module"}