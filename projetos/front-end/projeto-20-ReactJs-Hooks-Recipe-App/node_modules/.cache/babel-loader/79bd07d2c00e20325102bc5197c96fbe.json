{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-recipes-app-03/src/components/HeaderSearchBar/searchButtonFunction.js\";\nimport { fetchRecipesByIngredient, fetchRecipesByName, fetchRecipesByFirstLetter } from '../../services/searchBarAPI';\nconst search = {\n  ingredients: fetchRecipesByIngredient,\n  name: fetchRecipesByName,\n  firstLetter: fetchRecipesByFirstLetter\n};\n\nconst pushRoute = (history, type, data) => {\n  if (type === 'meal' && data.meals.length === 1) {\n    /*#__PURE__*/\n    React.createElement(Redirect, {\n      to: `/comidas/${data.meals[0].idMeal}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 5\n      }\n    }); // history.push(`/comidas/${data.meals[0].idMeal}`);\n  }\n\n  if (type === 'cocktail' && data.drinks.length === 1) {\n    history.push(`/bebidas/${data.drinks[0].idDrink}`);\n  }\n};\n\nconst performSearch = async (history, type, setIsFetching, setData, searchParam, searchName) => {\n  const data = await search[searchParam](searchName, type);\n\n  if (data.meals || data.drinks) {\n    setData(data.meals || data.drinks);\n    setIsFetching(false);\n  } else {\n    return alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n  }\n\n  pushRoute(history, type, data);\n  return false;\n};\n\nconst searchButton = async (history, type, setIsFetching, setData, searchParam, searchName) => {\n  if (searchParam === 'firstLetter' && searchName.length !== 1) {\n    alert('Sua busca deve conter somente 1 (um) caracter');\n  } else {\n    performSearch(history, type, setIsFetching, setData, searchParam, searchName);\n  }\n};\n\nexport default searchButton;","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-recipes-app-03/src/components/HeaderSearchBar/searchButtonFunction.js"],"names":["fetchRecipesByIngredient","fetchRecipesByName","fetchRecipesByFirstLetter","search","ingredients","name","firstLetter","pushRoute","history","type","data","meals","length","idMeal","drinks","push","idDrink","performSearch","setIsFetching","setData","searchParam","searchName","alert","searchButton"],"mappings":";AAAA,SAASA,wBAAT,EAAmCC,kBAAnC,EAAuDC,yBAAvD,QAAwF,6BAAxF;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,WAAW,EAAEJ,wBADA;AAEbK,EAAAA,IAAI,EAAEJ,kBAFO;AAGbK,EAAAA,WAAW,EAAEJ;AAHA,CAAf;;AAMA,MAAMK,SAAS,GAAG,CAACC,OAAD,EAAUC,IAAV,EAAgBC,IAAhB,KAAyB;AACzC,MAAID,IAAI,KAAK,MAAT,IAAmBC,IAAI,CAACC,KAAL,CAAWC,MAAX,KAAsB,CAA7C,EAAgD;AAC9C;AAAA,wBAAC,QAAD;AAAU,MAAA,EAAE,EAAG,YAAWF,IAAI,CAACC,KAAL,CAAW,CAAX,EAAcE,MAAO,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAD8C,CAE9C;AACD;;AACD,MAAIJ,IAAI,KAAK,UAAT,IAAuBC,IAAI,CAACI,MAAL,CAAYF,MAAZ,KAAuB,CAAlD,EAAqD;AACnDJ,IAAAA,OAAO,CAACO,IAAR,CAAc,YAAWL,IAAI,CAACI,MAAL,CAAY,CAAZ,EAAeE,OAAQ,EAAhD;AACD;AACF,CARD;;AAUA,MAAMC,aAAa,GAAG,OACpBT,OADoB,EAEpBC,IAFoB,EAGpBS,aAHoB,EAIpBC,OAJoB,EAKpBC,WALoB,EAMpBC,UANoB,KAOjB;AACH,QAAMX,IAAI,GAAG,MAAMP,MAAM,CAACiB,WAAD,CAAN,CAAoBC,UAApB,EAAgCZ,IAAhC,CAAnB;;AACA,MAAIC,IAAI,CAACC,KAAL,IAAcD,IAAI,CAACI,MAAvB,EAA+B;AAC7BK,IAAAA,OAAO,CAACT,IAAI,CAACC,KAAL,IAAcD,IAAI,CAACI,MAApB,CAAP;AACAI,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAHD,MAGO;AACL,WAAOI,KAAK,CAAC,kEAAD,CAAZ;AACD;;AACDf,EAAAA,SAAS,CAACC,OAAD,EAAUC,IAAV,EAAgBC,IAAhB,CAAT;AACA,SAAO,KAAP;AACD,CAjBD;;AAmBA,MAAMa,YAAY,GAAG,OACjBf,OADiB,EAEjBC,IAFiB,EAGjBS,aAHiB,EAIjBC,OAJiB,EAKjBC,WALiB,EAMjBC,UANiB,KAOd;AACL,MAAID,WAAW,KAAK,aAAhB,IAAiCC,UAAU,CAACT,MAAX,KAAsB,CAA3D,EAA8D;AAC5DU,IAAAA,KAAK,CAAC,+CAAD,CAAL;AACD,GAFD,MAEO;AACLL,IAAAA,aAAa,CACXT,OADW,EAEXC,IAFW,EAGXS,aAHW,EAIXC,OAJW,EAKXC,WALW,EAMXC,UANW,CAAb;AAQD;AACF,CApBD;;AAsBA,eAAeE,YAAf","sourcesContent":["import { fetchRecipesByIngredient, fetchRecipesByName, fetchRecipesByFirstLetter } from '../../services/searchBarAPI';\n\nconst search = {\n  ingredients: fetchRecipesByIngredient,\n  name: fetchRecipesByName,\n  firstLetter: fetchRecipesByFirstLetter,\n};\n\nconst pushRoute = (history, type, data) => {\n  if (type === 'meal' && data.meals.length === 1) {\n    <Redirect to={`/comidas/${data.meals[0].idMeal}`} />\n    // history.push(`/comidas/${data.meals[0].idMeal}`);\n  }\n  if (type === 'cocktail' && data.drinks.length === 1) {\n    history.push(`/bebidas/${data.drinks[0].idDrink}`);\n  }\n};\n\nconst performSearch = async (\n  history,\n  type,\n  setIsFetching,\n  setData,\n  searchParam,\n  searchName,\n) => {\n  const data = await search[searchParam](searchName, type);\n  if (data.meals || data.drinks) {\n    setData(data.meals || data.drinks);\n    setIsFetching(false);\n  } else {\n    return alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n  }\n  pushRoute(history, type, data);\n  return false;\n};\n\nconst searchButton = async (\n    history,\n    type,\n    setIsFetching,\n    setData,\n    searchParam,\n    searchName,\n  ) => {\n  if (searchParam === 'firstLetter' && searchName.length !== 1) {\n    alert('Sua busca deve conter somente 1 (um) caracter');\n  } else {\n    performSearch(\n      history,\n      type,\n      setIsFetching,\n      setData,\n      searchParam,\n      searchName,\n    );\n  }\n};\n\nexport default searchButton;\n"]},"metadata":{},"sourceType":"module"}