{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-recipes-app-03/src/pages/RecipesInProgress/RecipesInProgressPage/IngredientsCheckbox.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types'; // import { RecipeInProgressContext } from '../RecipeInProgressProvider';\n\nconst IngredientsCheckbox = props => {\n  const [textDecorationState, setTextDecorationState] = useState('');\n  const {\n    ingredient,\n    index,\n    quantity,\n    type,\n    id\n  } = props;\n\n  const riskIngredient = () => {\n    if (textDecorationState === 'line-through') {\n      return setTextDecorationState('');\n    }\n\n    return setTextDecorationState('line-through');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    key: ingredient + quantity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      textDecoration: textDecorationState\n    },\n    htmlFor: ingredient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": `${index}-ingredient-step`,\n    onClick: riskIngredient,\n    type: \"checkbox\",\n    id: ingredient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }), ingredient, \" - \", quantity)));\n};\n\nexport default IngredientsCheckbox;\nIngredientsCheckbox.propTypes = {\n  ingredient: PropTypes.arrayOf(PropTypes.string).isRequired,\n  index: PropTypes.number.isRequired,\n  quantity: PropTypes.arrayOf(PropTypes.string).isRequired,\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-recipes-app-03/src/pages/RecipesInProgress/RecipesInProgressPage/IngredientsCheckbox.js"],"names":["React","useState","PropTypes","IngredientsCheckbox","props","textDecorationState","setTextDecorationState","ingredient","index","quantity","type","id","riskIngredient","textDecoration","propTypes","arrayOf","string","isRequired","number"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AAEA,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AACrC,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDL,QAAQ,CAAC,EAAD,CAA9D;AACA,QAAM;AAAEM,IAAAA,UAAF;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA,QAArB;AAA+BC,IAAAA,IAA/B;AAAqCC,IAAAA;AAArC,MAA4CP,KAAlD;;AAGA,QAAMQ,cAAc,GAAG,MAAM;AAC3B,QAAIP,mBAAmB,KAAK,cAA5B,EAA4C;AAC1C,aAAOC,sBAAsB,CAAC,EAAD,CAA7B;AACD;;AACD,WAAOA,sBAAsB,CAAC,cAAD,CAA7B;AACD,GALD;;AAOA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEC,UAAU,GAAGE,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,KAAK,EAAE;AAACI,MAAAA,cAAc,EAAER;AAAjB,KAAd;AAAsD,IAAA,OAAO,EAAEE,UAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,mBAAc,GAAEC,KAAM,kBADxB;AAEE,IAAA,OAAO,EAAEI,cAFX;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,EAAE,EAAEL,UAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOGA,UAPH,SAOkBE,QAPlB,CADF,CADF,CADF;AAeD,CA3BD;;AA6BA,eAAeN,mBAAf;AAEAA,mBAAmB,CAACW,SAApB,GAAgC;AAC9BP,EAAAA,UAAU,EAAEL,SAAS,CAACa,OAAV,CAAkBb,SAAS,CAACc,MAA5B,EAAoCC,UADlB;AAE9BT,EAAAA,KAAK,EAAEN,SAAS,CAACgB,MAAV,CAAiBD,UAFM;AAG9BR,EAAAA,QAAQ,EAAEP,SAAS,CAACa,OAAV,CAAkBb,SAAS,CAACc,MAA5B,EAAoCC,UAHhB;AAI9BP,EAAAA,IAAI,EAAER,SAAS,CAACc,MAAV,CAAiBC,UAJO;AAK9BN,EAAAA,EAAE,EAAET,SAAS,CAACc,MAAV,CAAiBC;AALS,CAAhC","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// import { RecipeInProgressContext } from '../RecipeInProgressProvider';\n\nconst IngredientsCheckbox = (props) => {\n  const [textDecorationState, setTextDecorationState] = useState('');\n  const { ingredient, index, quantity, type, id } = props;\n\n\n  const riskIngredient = () => {\n    if (textDecorationState === 'line-through') {\n      return setTextDecorationState('')\n    }\n    return setTextDecorationState('line-through')\n  }\n\n  return (\n    <div>\n      <div key={ingredient + quantity}>\n        <label style={{textDecoration: textDecorationState }} htmlFor={ingredient}>\n          <input\n            data-testid={`${index}-ingredient-step`}\n            onClick={riskIngredient}\n            type=\"checkbox\"\n            id={ingredient}\n          />\n          {ingredient} - {quantity}\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default IngredientsCheckbox;\n\nIngredientsCheckbox.propTypes = {\n  ingredient: PropTypes.arrayOf(PropTypes.string).isRequired,\n  index: PropTypes.number.isRequired,\n  quantity: PropTypes.arrayOf(PropTypes.string).isRequired,\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}