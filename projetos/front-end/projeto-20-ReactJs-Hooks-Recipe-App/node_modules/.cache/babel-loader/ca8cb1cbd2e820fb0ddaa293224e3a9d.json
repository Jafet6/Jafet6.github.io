{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-recipes-app-03/src/components/HeaderSearchBar/index.js\";\nimport React, { useState, useContext } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './style.css';\nimport searchButton from './searchButtonFunction';\nimport { SearchBarContext } from './HeaderSearchBarContext';\n\nconst HeaderSearchBar = ({\n  history,\n  location\n}) => {\n  const [state, setState] = useState({\n    searchParam: 'name',\n    searchName: ''\n  });\n  const type = location.pathname === '/comidas' ? 'meal' : 'cocktail';\n  const {\n    setIsFetching,\n    setData\n  } = useContext(SearchBarContext);\n  const {\n    searchParam,\n    searchName\n  } = state;\n\n  const handleChange = e => {\n    setState({ ...state,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"searchName\",\n    placeholder: \"Buscar Receita\",\n    \"data-testid\": \"search-input\",\n    className: \"search-input\",\n    onChange: e => handleChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"radio-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"ingredient\",\n    className: \"search-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"searchParam\",\n    value: \"ingredients\",\n    \"data-testid\": \"ingredient-search-radio\",\n    onClick: e => handleChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }), \"Ingrediente\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    className: \"search-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"searchParam\",\n    value: \"name\",\n    \"data-testid\": \"name-search-radio\",\n    onClick: e => handleChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), \"Nome\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"first-letter\",\n    className: \"search-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"searchParam\",\n    \"data-testid\": \"first-letter-search-radio\",\n    onClick: e => handleChange(e),\n    value: \"firstLetter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }), \"Primeira letra\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    name: \"searchParam\",\n    \"data-testid\": \"exec-search-btn\",\n    className: \"search-button\",\n    onClick: () => searchButton(history, type, setIsFetching, setData, searchParam, searchName),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"Buscar\"));\n};\n\nexport default withRouter(HeaderSearchBar);\nHeaderSearchBar.propTypes = {\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }).isRequired\n};","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-recipes-app-03/src/components/HeaderSearchBar/index.js"],"names":["React","useState","useContext","withRouter","PropTypes","searchButton","SearchBarContext","HeaderSearchBar","history","location","state","setState","searchParam","searchName","type","pathname","setIsFetching","setData","handleChange","e","target","name","value","propTypes","objectOf","any","isRequired","shape","string"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './style.css';\nimport searchButton from './searchButtonFunction';\nimport { SearchBarContext } from './HeaderSearchBarContext';\n\nconst HeaderSearchBar = ({ history, location }) => {\n  const [state, setState] = useState({\n    searchParam: 'name',\n    searchName: '',\n  });\n\n  const type = location.pathname === '/comidas' ? 'meal' : 'cocktail';\n\n  const { setIsFetching, setData } = useContext(SearchBarContext);\n\n  const { searchParam, searchName } = state;\n\n  const handleChange = (e) => {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  return (\n    <div className=\"search-container\">\n      <input\n        type=\"text\"\n        name=\"searchName\"\n        placeholder=\"Buscar Receita\"\n        data-testid=\"search-input\"\n        className=\"search-input\"\n        onChange={(e) => handleChange(e)}\n      />\n      <div className=\"radio-container\">\n        <label htmlFor=\"ingredient\" className=\"search-label\">\n          <input\n            type=\"radio\"\n            name=\"searchParam\"\n            value=\"ingredients\"\n            data-testid=\"ingredient-search-radio\"\n            onClick={(e) => handleChange(e)}\n          />\n          Ingrediente\n        </label>\n        <label htmlFor=\"name\" className=\"search-label\">\n          <input\n            type=\"radio\"\n            name=\"searchParam\"\n            value=\"name\"\n            data-testid=\"name-search-radio\"\n            onClick={(e) => handleChange(e)}\n          />\n          Nome\n        </label>\n        <label htmlFor=\"first-letter\" className=\"search-label\">\n          <input\n            type=\"radio\"\n            name=\"searchParam\"\n            data-testid=\"first-letter-search-radio\"\n            onClick={(e) => handleChange(e)}\n            value=\"firstLetter\"\n          />\n          Primeira letra\n        </label>\n      </div>\n      <button\n        type=\"button\"\n        name=\"searchParam\"\n        data-testid=\"exec-search-btn\"\n        className=\"search-button\"\n        onClick={() => searchButton(\n          history,\n          type,\n          setIsFetching,\n          setData,\n          searchParam,\n          searchName,\n        )}\n      >\n        Buscar\n      </button>\n    </div>\n  );\n};\n\nexport default withRouter(HeaderSearchBar);\n\nHeaderSearchBar.propTypes = {\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}