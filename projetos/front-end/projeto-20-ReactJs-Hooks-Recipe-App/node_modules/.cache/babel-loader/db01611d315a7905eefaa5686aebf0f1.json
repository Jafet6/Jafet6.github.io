{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-recipes-app-03/src/components/Recipes/RecipeList/RecipeList.js\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchCategoriesMeals } from '../../../services/theMealAPI';\nimport { fetchCategoriesDrinks } from '../../../services/theCockTailAPI';\nimport ListCategories from '../../Categories/ListCategories';\nimport RecipeCard from '../RecipeCard/RecipeCard';\nimport './RecipeList.css';\nimport '../../Categories/ListCategories.css';\nimport { destructureMeal, destructureDrinks } from '../../../untils/destructureObject';\n\nconst recipeModal = recipe => ({ ...recipe,\n  img: recipe.image,\n  alcoholic: recipe.alcoholicOrNot\n});\n\nconst renderFavoriteCategories = (setFilteredRecipes, recipes) => {\n  const categories = [{\n    all: 'todos'\n  }, {\n    food: 'comida'\n  }, {\n    drink: 'bebida'\n  }];\n\n  const filterRecipes = value => {\n    if (value === 'todos') return recipes;\n    return recipes.filter(recipe => recipe.type === value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"categories\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, categories.map(category => /*#__PURE__*/React.createElement(\"button\", {\n    className: \"categoryBtn\",\n    \"data-testid\": `filter-by-${Object.keys(category)}-btn`,\n    onClick: () => setFilteredRecipes(filterRecipes(Object.values(category)[0])),\n    key: Object.values(category),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, Object.keys(category))));\n};\n\nconst RecipeList = ({\n  recipes,\n  type\n}) => {\n  const [categories, setCategories] = useState({\n    recipes: []\n  });\n  const [favoriteds, setFavoriteds] = useState(false);\n  const [filteredRecipes, setFilteredRecipes] = useState([]);\n  useEffect(() => {\n    if (type === 'favoriteds') {\n      setFavoriteds(true);\n    }\n\n    if (type === 'meal') {\n      fetchCategoriesMeals().then(resp => setCategories({\n        recipes: resp.meals\n      }), resp => resp);\n    }\n\n    if (type === 'drink') {\n      fetchCategoriesDrinks().then(resp => setCategories({\n        recipes: resp.drinks\n      }), resp => resp);\n    }\n  }, []);\n  useEffect(() => {\n    setFilteredRecipes(recipes);\n  }, [recipes]);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, !favoriteds && /*#__PURE__*/React.createElement(ListCategories, {\n    strCategories: [{\n      strCategory: 'All'\n    }, ...categories.recipes],\n    type: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), favoriteds && renderFavoriteCategories(setFilteredRecipes, recipes), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"foodList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, !favoriteds && recipes.slice(0, 12).map((recipe, index) => /*#__PURE__*/React.createElement(RecipeCard, {\n    key: Object.values(recipe)[0],\n    recipe: destructureMeal(recipe),\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  })), favoriteds && filteredRecipes.map((recipe, index) => /*#__PURE__*/React.createElement(RecipeCard, {\n    favoriteds: \"disabled-link\",\n    key: Object.values(recipe)[0],\n    recipe: recipeModal(recipe),\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }))));\n};\n\nRecipeList.propTypes = {\n  recipes: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  type: PropTypes.string.isRequired\n};\nexport default RecipeList;","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-recipes-app-03/src/components/Recipes/RecipeList/RecipeList.js"],"names":["React","useEffect","useState","PropTypes","fetchCategoriesMeals","fetchCategoriesDrinks","ListCategories","RecipeCard","destructureMeal","destructureDrinks","recipeModal","recipe","img","image","alcoholic","alcoholicOrNot","renderFavoriteCategories","setFilteredRecipes","recipes","categories","all","food","drink","filterRecipes","value","filter","type","map","category","Object","keys","values","RecipeList","setCategories","favoriteds","setFavoriteds","filteredRecipes","then","resp","meals","drinks","strCategory","slice","index","propTypes","arrayOf","object","isRequired","string"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchCategoriesMeals } from '../../../services/theMealAPI';\nimport { fetchCategoriesDrinks } from '../../../services/theCockTailAPI';\nimport ListCategories from '../../Categories/ListCategories';\nimport RecipeCard from '../RecipeCard/RecipeCard';\nimport './RecipeList.css';\nimport '../../Categories/ListCategories.css';\nimport { destructureMeal, destructureDrinks } from '../../../untils/destructureObject';\n\nconst recipeModal = (recipe) => ({\n  ...recipe,\n  img: recipe.image,\n  alcoholic: recipe.alcoholicOrNot,\n});\n\nconst renderFavoriteCategories = (setFilteredRecipes, recipes) => {\n  const categories = [{ all: 'todos' }, { food: 'comida' }, { drink: 'bebida' }];\n  const filterRecipes = (value) => {\n    if (value === 'todos') return recipes;\n    return recipes.filter((recipe) => recipe.type === value);\n  };\n  return (\n    <div className=\"categories\">\n      {categories.map((category) => (\n        <button\n          className=\"categoryBtn\"\n          data-testid={`filter-by-${Object.keys(category)}-btn`}\n          onClick={() => setFilteredRecipes(filterRecipes(Object.values(category)[0]))}\n          key={Object.values(category)}\n        >\n          {Object.keys(category)}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nconst RecipeList = ({ recipes, type }) => {\n  const [categories, setCategories] = useState({ recipes: [] });\n  const [favoriteds, setFavoriteds] = useState(false);\n  const [filteredRecipes, setFilteredRecipes] = useState([]);\n  useEffect(() => {\n    if (type === 'favoriteds') {\n      setFavoriteds(true);\n    }\n    if (type === 'meal') {\n      fetchCategoriesMeals()\n        .then((resp) => setCategories({ recipes: resp.meals }), (resp) => resp);\n    }\n    if (type === 'drink') {\n      fetchCategoriesDrinks()\n      .then((resp) => setCategories({ recipes: resp.drinks }), (resp) => resp);\n    }\n  }, []);\n  useEffect(() => {\n    setFilteredRecipes(recipes);\n  }, [recipes]);\n\n  return (\n    <section>\n      {!favoriteds &&\n        <ListCategories\n          strCategories={[{ strCategory: 'All' }, ...categories.recipes]}\n          type={type}\n        />\n      }\n      {favoriteds && renderFavoriteCategories(setFilteredRecipes, recipes)}\n      <div className=\"foodList\">\n        {!favoriteds && recipes.slice(0, 12).map((recipe, index) => (\n          <RecipeCard\n            key={Object.values(recipe)[0]}\n            recipe={destructureMeal(recipe)}\n            index={index}\n          />\n        ))}\n        {favoriteds && filteredRecipes.map((recipe, index) => (\n          <RecipeCard\n            favoriteds=\"disabled-link\"\n            key={Object.values(recipe)[0]}\n            recipe={recipeModal(recipe)}\n            index={index}\n          />\n        ))}\n      </div>\n    </section>\n  );\n};\n\nRecipeList.propTypes = {\n  recipes: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default RecipeList;\n"]},"metadata":{},"sourceType":"module"}