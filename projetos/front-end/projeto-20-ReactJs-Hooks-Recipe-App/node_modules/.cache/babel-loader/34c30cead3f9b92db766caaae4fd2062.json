{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-recipes-app-03/src/pages/RecipesInProgress/RecipesInProgressPage/RecipesInProgressContent.js\";\nimport React, { useContext, useState, useEffect } from 'react'; // import PropTypes from 'prop-types';\n// import { DetailsPageContext } from '../DetailsPage/DetailsPageProvider';\n\nimport { useLocation, useParams } from 'react-router-dom';\nimport { RecipeInProgressContext } from '../RecipeInProgressProvider';\nimport { fetchMealById } from '../../../services/theMealAPI';\nimport { fetchDrinkById } from '../../../services/theCockTailAPI';\nimport RecipesInProgressPage from './RecipesInProgressPage';\n\nconst createLocalStorage = (id, type) => {\n  // if (!JSON.parse(localStorage.getItem('inProgressRecipes'))) {\n  //   console.log('antes ',JSON.parse(localStorage.getItem('inProgressRecipes')))\n  //   const inProgressRecipes = { cocktails: {}, meals: {} };\n  //   localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes));\n  //   console.log('depois', JSON.parse(localStorage.getItem('inProgressRecipes')))\n  // }\n  const inProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  const inProgressRecipes = { ...inProgress,\n    [type]: {\n      [id]: [],\n      ...inProgress[type]\n    }\n  };\n  return localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes));\n};\n\nconst RecipesInProgressContent = () => {\n  const {\n    setRecipeDataFunc\n  } = useContext(RecipeInProgressContext);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    pathname\n  } = useLocation();\n  const {\n    id\n  } = useParams();\n\n  const apiRequestSucceedMeal = ({\n    meals\n  }) => {\n    setRecipeDataFunc(meals[0]);\n    return setIsLoading(false);\n  };\n\n  const apiRequestSucceedDrink = ({\n    drinks\n  }) => {\n    setRecipeDataFunc(drinks[0]);\n    return setIsLoading(false);\n  };\n\n  const apiRequestFailure = ({\n    message\n  }) => {\n    setErrorMessage(message);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    console.log('entrei no useEffect');\n\n    const apiRequestFunction = (callback, recipeId) => {\n      setIsLoading(true);\n\n      if (callback === fetchMealById) {\n        return callback(recipeId).then(apiRequestSucceedMeal, apiRequestFailure);\n      }\n\n      return callback(recipeId).then(apiRequestSucceedDrink, apiRequestFailure);\n    };\n\n    if (pathname.includes('/comidas')) {\n      createLocalStorage(id, 'meals');\n      apiRequestFunction(fetchMealById, id);\n    } else {\n      createLocalStorage(id, 'cocktails');\n      apiRequestFunction(fetchDrinkById, id);\n    }\n  }, [pathname]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(RecipesInProgressPage, {\n    renderControl: {\n      isLoading,\n      errorMessage\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default RecipesInProgressContent; // RecipesInProgressContent.propTypes = {\n// };","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-recipes-app-03/src/pages/RecipesInProgress/RecipesInProgressPage/RecipesInProgressContent.js"],"names":["React","useContext","useState","useEffect","useLocation","useParams","RecipeInProgressContext","fetchMealById","fetchDrinkById","RecipesInProgressPage","createLocalStorage","id","type","inProgress","JSON","parse","localStorage","getItem","inProgressRecipes","setItem","stringify","RecipesInProgressContent","setRecipeDataFunc","errorMessage","setErrorMessage","isLoading","setIsLoading","pathname","apiRequestSucceedMeal","meals","apiRequestSucceedDrink","drinks","apiRequestFailure","message","console","log","apiRequestFunction","callback","recipeId","then","includes"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\n// import PropTypes from 'prop-types';\n// import { DetailsPageContext } from '../DetailsPage/DetailsPageProvider';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { RecipeInProgressContext } from '../RecipeInProgressProvider';\nimport { fetchMealById } from '../../../services/theMealAPI';\nimport { fetchDrinkById } from '../../../services/theCockTailAPI';\nimport RecipesInProgressPage from './RecipesInProgressPage';\n\nconst createLocalStorage = (id, type) => {\n  // if (!JSON.parse(localStorage.getItem('inProgressRecipes'))) {\n  //   console.log('antes ',JSON.parse(localStorage.getItem('inProgressRecipes')))\n  //   const inProgressRecipes = { cocktails: {}, meals: {} };\n  //   localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes));\n  //   console.log('depois', JSON.parse(localStorage.getItem('inProgressRecipes')))\n  // }\n  const inProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  const inProgressRecipes = {\n    ...inProgress,\n    [type]: {\n      [id]: [],\n      ...inProgress[type],\n    },\n  };\n  return localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes));\n};\n\nconst RecipesInProgressContent = () => {\n  const { setRecipeDataFunc } = useContext(RecipeInProgressContext);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const { pathname } = useLocation();\n  const { id } = useParams();\n\n  const apiRequestSucceedMeal = ({ meals }) => {\n    setRecipeDataFunc(meals[0]);\n    return setIsLoading(false);\n  };\n\n  const apiRequestSucceedDrink = ({ drinks }) => {\n    setRecipeDataFunc(drinks[0]);\n    return setIsLoading(false);\n  };\n\n  const apiRequestFailure = ({ message }) => {\n    setErrorMessage(message);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    console.log('entrei no useEffect')\n    const apiRequestFunction = (callback, recipeId) => {\n      setIsLoading(true);\n      if (callback === fetchMealById) {\n        return callback(recipeId).then(apiRequestSucceedMeal, apiRequestFailure);\n      }\n      return callback(recipeId).then(apiRequestSucceedDrink, apiRequestFailure);\n    };\n    if (pathname.includes('/comidas')) {\n      createLocalStorage(id, 'meals');\n      apiRequestFunction(fetchMealById, id);\n    } else {\n      createLocalStorage(id, 'cocktails');\n      apiRequestFunction(fetchDrinkById, id);\n    }\n  }, [pathname]);\n\n  return (\n    <div>\n      <RecipesInProgressPage renderControl={{ isLoading, errorMessage }} />\n    </div>\n  );\n};\n\nexport default RecipesInProgressContent;\n\n// RecipesInProgressContent.propTypes = {\n\n// };\n"]},"metadata":{},"sourceType":"module"}