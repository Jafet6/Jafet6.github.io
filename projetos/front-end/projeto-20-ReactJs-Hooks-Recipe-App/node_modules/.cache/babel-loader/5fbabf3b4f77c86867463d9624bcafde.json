{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-recipes-app-03/src/pages/DetailsPage/DetailsRecipePage/Ingredients.js\";\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { RecipeInProgressContext } from '../../RecipesInProgress/RecipeInProgressProvider';\nimport ingredientsWithQuantity from '../../../untils/ingredientsWithQuantity';\n\nconst Ingredients = () => {\n  const {\n    recipeData\n  } = useContext(RecipeInProgressContext);\n  const {\n    ingredients = []\n  } = recipeData;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, \"Ingredients\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, ingredients.map(([ingredient, quantity], index) => /*#__PURE__*/React.createElement(\"li\", {\n    \"data-testid\": `${index}-ingredient-name-and-measure`,\n    key: ingredient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }\n  }, ingredient, \" - \", quantity))));\n};\n\nexport default Ingredients;\nIngredients.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired\n};","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-recipes-app-03/src/pages/DetailsPage/DetailsRecipePage/Ingredients.js"],"names":["React","useContext","PropTypes","RecipeInProgressContext","ingredientsWithQuantity","Ingredients","recipeData","ingredients","map","ingredient","quantity","index","propTypes","data","objectOf","any","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,uBAAT,QAAwC,kDAAxC;AACA,OAAOC,uBAAP,MAAoC,yCAApC;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAiBL,UAAU,CAACE,uBAAD,CAAjC;AACA,QAAM;AAAEI,IAAAA,WAAW,GAAG;AAAhB,MAAuBD,UAA7B;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,WAAW,CAACC,GAAZ,CAAgB,CAAC,CAACC,UAAD,EAAaC,QAAb,CAAD,EAAyBC,KAAzB,kBACd;AACC,mBAAc,GAAEA,KAAM,8BADvB;AAEC,IAAA,GAAG,EAAEF,UAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIEA,UAJF,SAIiBC,QAJjB,CADF,CADH,CAFF,CADF;AAcD,CAlBD;;AAoBA,eAAeL,WAAf;AAEAA,WAAW,CAACO,SAAZ,GAAwB;AACtBC,EAAAA,IAAI,EAAEX,SAAS,CAACY,QAAV,CAAmBZ,SAAS,CAACa,GAA7B,EAAkCC;AADlB,CAAxB","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { RecipeInProgressContext } from '../../RecipesInProgress/RecipeInProgressProvider';\nimport ingredientsWithQuantity from '../../../untils/ingredientsWithQuantity';\n\nconst Ingredients = () => {\n  const { recipeData } = useContext(RecipeInProgressContext);\n  const { ingredients = [] } = recipeData;\n\n  return (\n    <div>\n      <h2>Ingredients</h2>\n      <ul>\n        {ingredients.map(([ingredient, quantity], index) =>\n          (<li\n            data-testid={`${index}-ingredient-name-and-measure`}\n            key={ingredient}\n          >\n            {ingredient} - {quantity}\n          </li>))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Ingredients;\n\nIngredients.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}