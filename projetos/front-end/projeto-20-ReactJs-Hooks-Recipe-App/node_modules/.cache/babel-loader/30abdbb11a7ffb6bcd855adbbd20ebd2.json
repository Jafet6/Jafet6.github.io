{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-recipes-app-03/src/pages/RecipesInProgress/RecipesInProgressPage/IngredientsCheckbox.js\";\nimport React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { RecipeInProgressContext } from '../RecipeInProgressProvider';\n\nconst IngredientsCheckbox = props => {\n  const {\n    recipeData\n  } = useContext(RecipeInProgressContext);\n  const [textDecorationState, setTextDecorationState] = useState('');\n  const {\n    ingredient,\n    index,\n    quantity,\n    type,\n    id\n  } = props;\n  console.log(recipeData);\n\n  const riskIngredient = () => {\n    if (textDecorationState === 'line-through') {\n      return setTextDecorationState('');\n    }\n\n    return setTextDecorationState('line-through');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    key: ingredient + quantity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      textDecoration: textDecorationState\n    },\n    htmlFor: ingredient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": `${index}-ingredient-step`,\n    onClick: riskIngredient,\n    type: \"checkbox\",\n    id: ingredient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }), ingredient, \" - \", quantity)));\n};\n\nexport default IngredientsCheckbox;\nIngredientsCheckbox.propTypes = {\n  ingredient: PropTypes.arrayOf(PropTypes.string).isRequired,\n  index: PropTypes.number.isRequired,\n  quantity: PropTypes.arrayOf(PropTypes.string).isRequired,\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-recipes-app-03/src/pages/RecipesInProgress/RecipesInProgressPage/IngredientsCheckbox.js"],"names":["React","useState","useContext","PropTypes","RecipeInProgressContext","IngredientsCheckbox","props","recipeData","textDecorationState","setTextDecorationState","ingredient","index","quantity","type","id","console","log","riskIngredient","textDecoration","propTypes","arrayOf","string","isRequired","number"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,uBAAT,QAAwC,6BAAxC;;AAEA,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AACrC,QAAM;AAAEC,IAAAA;AAAF,MAAiBL,UAAU,CAACE,uBAAD,CAAjC;AACA,QAAM,CAACI,mBAAD,EAAsBC,sBAAtB,IAAgDR,QAAQ,CAAC,EAAD,CAA9D;AACA,QAAM;AAAES,IAAAA,UAAF;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA,QAArB;AAA+BC,IAAAA,IAA/B;AAAqCC,IAAAA;AAArC,MAA4CR,KAAlD;AAEAS,EAAAA,OAAO,CAACC,GAAR,CAAYT,UAAZ;;AACA,QAAMU,cAAc,GAAG,MAAM;AAC3B,QAAIT,mBAAmB,KAAK,cAA5B,EAA4C;AAC1C,aAAOC,sBAAsB,CAAC,EAAD,CAA7B;AACD;;AACD,WAAOA,sBAAsB,CAAC,cAAD,CAA7B;AACD,GALD;;AAOA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEC,UAAU,GAAGE,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,KAAK,EAAE;AAAEM,MAAAA,cAAc,EAAEV;AAAlB,KAAd;AAAuD,IAAA,OAAO,EAAEE,UAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,mBAAc,GAAEC,KAAM,kBADxB;AAEE,IAAA,OAAO,EAAEM,cAFX;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,EAAE,EAAEP,UAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOGA,UAPH,SAOkBE,QAPlB,CADF,CADF,CADF;AAeD,CA5BD;;AA8BA,eAAeP,mBAAf;AAEAA,mBAAmB,CAACc,SAApB,GAAgC;AAC9BT,EAAAA,UAAU,EAAEP,SAAS,CAACiB,OAAV,CAAkBjB,SAAS,CAACkB,MAA5B,EAAoCC,UADlB;AAE9BX,EAAAA,KAAK,EAAER,SAAS,CAACoB,MAAV,CAAiBD,UAFM;AAG9BV,EAAAA,QAAQ,EAAET,SAAS,CAACiB,OAAV,CAAkBjB,SAAS,CAACkB,MAA5B,EAAoCC,UAHhB;AAI9BT,EAAAA,IAAI,EAAEV,SAAS,CAACkB,MAAV,CAAiBC,UAJO;AAK9BR,EAAAA,EAAE,EAAEX,SAAS,CAACkB,MAAV,CAAiBC;AALS,CAAhC","sourcesContent":["import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { RecipeInProgressContext } from '../RecipeInProgressProvider';\n\nconst IngredientsCheckbox = (props) => {\n  const { recipeData } = useContext(RecipeInProgressContext);\n  const [textDecorationState, setTextDecorationState] = useState('');\n  const { ingredient, index, quantity, type, id } = props;\n\n  console.log(recipeData);\n  const riskIngredient = () => {\n    if (textDecorationState === 'line-through') {\n      return setTextDecorationState('');\n    }\n    return setTextDecorationState('line-through');\n  };\n\n  return (\n    <div>\n      <div key={ingredient + quantity}>\n        <label style={{ textDecoration: textDecorationState }} htmlFor={ingredient}>\n          <input\n            data-testid={`${index}-ingredient-step`}\n            onClick={riskIngredient}\n            type=\"checkbox\"\n            id={ingredient}\n          />\n          {ingredient} - {quantity}\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default IngredientsCheckbox;\n\nIngredientsCheckbox.propTypes = {\n  ingredient: PropTypes.arrayOf(PropTypes.string).isRequired,\n  index: PropTypes.number.isRequired,\n  quantity: PropTypes.arrayOf(PropTypes.string).isRequired,\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}