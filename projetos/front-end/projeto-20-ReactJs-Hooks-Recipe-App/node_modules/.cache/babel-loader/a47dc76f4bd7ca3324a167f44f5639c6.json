{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-recipes-app-03/src/components/HeaderSearchBar/index.js\";\nimport React, { useState, useContext } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './style.css';\nimport searchButton from './searchButtonFunction';\nimport { SearchBarContext } from './HeaderSearchBarContext';\n\nconst HeaderSearchBar = ({\n  history,\n  location\n}) => {\n  const [state, setState] = useState({\n    searchParam: 'name',\n    searchName: ''\n  });\n  const type = location.pathname === '/comidas' ? 'meal' : 'cocktail';\n  const {\n    setIsFetching,\n    setData\n  } = useContext(SearchBarContext);\n  const {\n    searchParam,\n    searchName\n  } = state;\n\n  const handleChange = e => {\n    setState({ ...state,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const input = (htmlFor, value, dataTestId, label) => {\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: htmlFor,\n      className: \"search-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"searchParam\",\n      value: value,\n      \"data-testid\": dataTestId,\n      onClick: e => handleChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }), label);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"searchName\",\n    placeholder: \"Buscar Receita\",\n    \"data-testid\": \"search-input\",\n    className: \"search-input\",\n    onChange: e => handleChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"radio-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, input(\"ingredient\", \"ingredients\", \"ingredient-search-radio\", \"Ingredientes\"), input(\"name\", \"name\", \"name-search-radio\", \"Nome\"), input(\"first-letter\", \"first-letter\", \"first-letter-search-radio\", \"Primeira letra\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    name: \"searchParam\",\n    \"data-testid\": \"exec-search-btn\",\n    className: \"search-button\",\n    onClick: () => searchButton(history, type, setIsFetching, setData, searchParam, searchName),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, \"Buscar\"));\n};\n\nexport default withRouter(HeaderSearchBar);\nHeaderSearchBar.propTypes = {\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }).isRequired\n};","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-recipes-app-03/src/components/HeaderSearchBar/index.js"],"names":["React","useState","useContext","withRouter","PropTypes","searchButton","SearchBarContext","HeaderSearchBar","history","location","state","setState","searchParam","searchName","type","pathname","setIsFetching","setData","handleChange","e","target","name","value","input","htmlFor","dataTestId","label","propTypes","objectOf","any","isRequired","shape","string"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './style.css';\nimport searchButton from './searchButtonFunction';\nimport { SearchBarContext } from './HeaderSearchBarContext';\n\nconst HeaderSearchBar = ({ history, location }) => {\n  const [state, setState] = useState({\n    searchParam: 'name',\n    searchName: '',\n  });\n\n  const type = location.pathname === '/comidas' ? 'meal' : 'cocktail';\n\n  const { setIsFetching, setData } = useContext(SearchBarContext);\n\n  const { searchParam, searchName } = state;\n\n  const handleChange = (e) => {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const input = (htmlFor, value, dataTestId, label) => {\n    return (\n      <label htmlFor={htmlFor} className=\"search-label\">\n        <input\n          type=\"radio\"\n          name=\"searchParam\"\n          value={value}\n          data-testid={dataTestId}\n          onClick={(e) => handleChange(e)}\n        />\n        {label}\n      </label>\n    );\n  };\n\n  return (\n    <div className=\"search-container\">\n      <input\n        type=\"text\"\n        name=\"searchName\"\n        placeholder=\"Buscar Receita\"\n        data-testid=\"search-input\"\n        className=\"search-input\"\n        onChange={(e) => handleChange(e)}\n      />\n      <div className=\"radio-container\">\n        {input(\"ingredient\", \"ingredients\", \"ingredient-search-radio\", \"Ingredientes\")}\n        {/* <label htmlFor=\"ingredient\" className=\"search-label\">\n          <input\n            type=\"radio\"\n            name=\"searchParam\"\n            value=\"ingredients\"\n            data-testid=\"ingredient-search-radio\"\n            onClick={(e) => handleChange(e)}\n          />\n          Ingrediente\n        </label> */}\n        {input(\"name\", \"name\", \"name-search-radio\", \"Nome\")}\n        {/* <label htmlFor=\"name\" className=\"search-label\">\n          <input\n            type=\"radio\"\n            name=\"searchParam\"\n            value=\"name\"\n            data-testid=\"name-search-radio\"\n            onClick={(e) => handleChange(e)}\n          />\n          Nome\n        </label> */}\n        {input(\"first-letter\", \"first-letter\", \"first-letter-search-radio\", \"Primeira letra\")}\n        {/* <label htmlFor=\"first-letter\" className=\"search-label\">\n          <input\n            type=\"radio\"\n            name=\"searchParam\"\n            value=\"firstLetter\"\n            data-testid=\"first-letter-search-radio\"\n            onClick={(e) => handleChange(e)}\n          />\n          Primeira letra\n        </label> */}\n      </div>\n      <button\n        type=\"button\"\n        name=\"searchParam\"\n        data-testid=\"exec-search-btn\"\n        className=\"search-button\"\n        onClick={() => searchButton(\n          history,\n          type,\n          setIsFetching,\n          setData,\n          searchParam,\n          searchName,\n        )}\n      >\n        Buscar\n      </button>\n    </div>\n  );\n};\n\nexport default withRouter(HeaderSearchBar);\n\nHeaderSearchBar.propTypes = {\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}