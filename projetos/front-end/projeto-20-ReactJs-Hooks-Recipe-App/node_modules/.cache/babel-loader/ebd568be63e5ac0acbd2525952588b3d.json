{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-recipes-app-03/src/pages/ExplorerPages/ExplorerByOrigem.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Explorer.css';\nimport Footer from '../../components/Footer/Footer';\nimport Header from '../../components/Header/index';\nimport { fetchMealsByCountry, fetchAreasList, fetchAllMeals } from '../../services/theMealAPI';\nimport garfo from \"../../components/Recipes/RecipeCard/garfo.svg\";\nimport Loading from '../../components/Loading/Loading';\n\nconst fetchCountryList = async setCountryList => {\n  const countryList = await fetchAreasList();\n  setCountryList(countryList.meals.map(({\n    strArea\n  }) => strArea));\n};\n\nconst fetchMeals = async (setMeals, option) => {\n  if (option === 'All') {\n    const meals = await fetchAllMeals();\n    setMeals(meals.meals);\n  } else {\n    const meals = await fetchMealsByCountry(`${option}`);\n    setMeals(meals.meals);\n  }\n};\n\nfunction renderCards(meals) {\n  return meals && meals.map((e, index) => index < 12 && /*#__PURE__*/React.createElement(Link, {\n    to: `/comidas/${e.idMeal}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-container\",\n    \"data-testid\": `${index}-recipe-card`,\n    key: `${e}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"thumbnail\",\n    src: `${e.strMealThumb}`,\n    alt: `${e.strMeal}`,\n    \"data-testid\": `${index}-card-img`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: 'card-text',\n    \"data-testid\": `${index}-card-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, `${e.strMeal}`), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"recipe-iconTwo\",\n    src: garfo,\n    alt: 'garfo',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  })))));\n}\n\nfunction ExplorerByArea() {\n  const [countryList, setCountryList] = useState(undefined);\n  const [meals, setMeals] = useState(undefined);\n  const [option, setOption] = useState('All');\n  useEffect(() => {\n    fetchCountryList(setCountryList);\n  }, []);\n  useEffect(() => {\n    fetchMeals(setMeals, option);\n  }, [option]);\n  if (!countryList) return /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 28\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    title: \"Explorar Origem\",\n    searchIcon: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"FlexCenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: \"SelectOrigem\",\n    key: \"area\",\n    onChange: e => setOption(e.target.value),\n    \"data-testid\": \"explore-by-area-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"All\",\n    \"data-testid\": \"All-option\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"All\"), countryList.map(country => /*#__PURE__*/React.createElement(\"option\", {\n    key: country,\n    value: country,\n    \"data-testid\": `${country}-option`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, country)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"explorer-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, renderCards(meals)), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default ExplorerByArea;","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-recipes-app-03/src/pages/ExplorerPages/ExplorerByOrigem.js"],"names":["React","useState","useEffect","Link","Footer","Header","fetchMealsByCountry","fetchAreasList","fetchAllMeals","Loading","fetchCountryList","setCountryList","countryList","meals","map","strArea","fetchMeals","setMeals","option","renderCards","e","index","idMeal","strMealThumb","strMeal","garfo","ExplorerByArea","undefined","setOption","target","value","country"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,gBAAP;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,SAASC,mBAAT,EAA8BC,cAA9B,EAA8CC,aAA9C,QAAmE,2BAAnE;;AAEA,OAAOC,OAAP,MAAoB,kCAApB;;AAEA,MAAMC,gBAAgB,GAAG,MAAOC,cAAP,IAA0B;AACjD,QAAMC,WAAW,GAAG,MAAML,cAAc,EAAxC;AACAI,EAAAA,cAAc,CAACC,WAAW,CAACC,KAAZ,CAAkBC,GAAlB,CAAsB,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAiBA,OAAvC,CAAD,CAAd;AACD,CAHD;;AAKA,MAAMC,UAAU,GAAG,OAAOC,QAAP,EAAiBC,MAAjB,KAA4B;AAC7C,MAAIA,MAAM,KAAK,KAAf,EAAsB;AACpB,UAAML,KAAK,GAAG,MAAML,aAAa,EAAjC;AACAS,IAAAA,QAAQ,CAACJ,KAAK,CAACA,KAAP,CAAR;AACD,GAHD,MAGO;AACL,UAAMA,KAAK,GAAG,MAAMP,mBAAmB,CAAE,GAAEY,MAAO,EAAX,CAAvC;AACAD,IAAAA,QAAQ,CAACJ,KAAK,CAACA,KAAP,CAAR;AACD;AACF,CARD;;AAUA,SAASM,WAAT,CAAqBN,KAArB,EAA4B;AAC1B,SACEA,KAAK,IAAIA,KAAK,CAACC,GAAN,CAAU,CAACM,CAAD,EAAIC,KAAJ,KACjBA,KAAK,GAAG,EAAR,iBACA,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,YAAWD,CAAC,CAACE,MAAO,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,gBADZ;AAEE,mBAAc,GAAED,KAAM,cAFxB;AAGE,IAAA,GAAG,EAAG,GAAED,CAAE,EAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AACE,IAAA,SAAS,EAAC,WADZ;AAEE,IAAA,GAAG,EAAG,GAAEA,CAAC,CAACG,YAAa,EAFzB;AAGE,IAAA,GAAG,EAAG,GAAEH,CAAC,CAACI,OAAQ,EAHpB;AAIE,mBAAc,GAAEH,KAAM,WAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAWE;AACE,IAAA,SAAS,EAAE,WADb;AAEE,mBAAc,GAAEA,KAAM,YAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,GAAED,CAAC,CAACI,OAAQ,EAJhB,CAXF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,gBADZ;AAEE,IAAA,GAAG,EAAEC,KAFP;AAGE,IAAA,GAAG,EAAE,OAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAjBF,CADF,CAFO,CADX;AAgCD;;AAED,SAASC,cAAT,GAA0B;AACxB,QAAM,CAACd,WAAD,EAAcD,cAAd,IAAgCV,QAAQ,CAAC0B,SAAD,CAA9C;AACA,QAAM,CAACd,KAAD,EAAQI,QAAR,IAAoBhB,QAAQ,CAAC0B,SAAD,CAAlC;AACA,QAAM,CAACT,MAAD,EAASU,SAAT,IAAsB3B,QAAQ,CAAC,KAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,gBAAgB,CAACC,cAAD,CAAhB;AACD,GAFQ,EAEN,EAFM,CAAT;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,UAAU,CAACC,QAAD,EAAWC,MAAX,CAAV;AACD,GAFQ,EAEN,CAACA,MAAD,CAFM,CAAT;AAIA,MAAI,CAACN,WAAL,EAAkB,oBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAClB,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,iBAAd;AAAgC,IAAA,UAAU,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,GAAG,EAAC,MAFN;AAGE,IAAA,QAAQ,EAAGQ,CAAD,IAAOQ,SAAS,CAACR,CAAC,CAACS,MAAF,CAASC,KAAV,CAH5B;AAIE,mBAAY,0BAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAoB,mBAAY,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WANF,EAOGlB,WAAW,CAACE,GAAZ,CAAiBiB,OAAD,iBACf;AAAQ,IAAA,GAAG,EAAEA,OAAb;AAAsB,IAAA,KAAK,EAAEA,OAA7B;AAAsC,mBAAc,GAAEA,OAAQ,SAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyEA,OAAzE,CADD,CAPH,CADF,CAFF,eAeE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,WAAW,CAACN,KAAD,CADd,CAfF,eAkBE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,CADF;AAsBD;;AAED,eAAea,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Explorer.css';\nimport Footer from '../../components/Footer/Footer';\nimport Header from '../../components/Header/index';\nimport { fetchMealsByCountry, fetchAreasList, fetchAllMeals } from '../../services/theMealAPI';\nimport garfo from '../../components/Recipes/RecipeCard/garfo.svg';\nimport Loading from '../../components/Loading/Loading';\n\nconst fetchCountryList = async (setCountryList) => {\n  const countryList = await fetchAreasList();\n  setCountryList(countryList.meals.map(({ strArea }) => strArea));\n};\n\nconst fetchMeals = async (setMeals, option) => {\n  if (option === 'All') {\n    const meals = await fetchAllMeals();\n    setMeals(meals.meals);\n  } else {\n    const meals = await fetchMealsByCountry(`${option}`);\n    setMeals(meals.meals);\n  }\n};\n\nfunction renderCards(meals) {\n  return (\n    meals && meals.map((e, index) => (\n      index < 12 &&\n      <Link to={`/comidas/${e.idMeal}`}>\n        <div\n          className=\"card-container\"\n          data-testid={`${index}-recipe-card`}\n          key={`${e}`}\n        >\n          <img\n            className=\"thumbnail\"\n            src={`${e.strMealThumb}`}\n            alt={`${e.strMeal}`}\n            data-testid={`${index}-card-img`}\n          />\n          <span\n            className={'card-text'}\n            data-testid={`${index}-card-name`}\n          >\n            {`${e.strMeal}`}\n          </span>\n          <div>\n            <img\n              className=\"recipe-iconTwo\"\n              src={garfo}\n              alt={'garfo'}\n            />\n          </div>\n        </div>\n      </Link>\n     ))\n  );\n}\n\nfunction ExplorerByArea() {\n  const [countryList, setCountryList] = useState(undefined);\n  const [meals, setMeals] = useState(undefined);\n  const [option, setOption] = useState('All');\n\n  useEffect(() => {\n    fetchCountryList(setCountryList);\n  }, []);\n\n  useEffect(() => {\n    fetchMeals(setMeals, option);\n  }, [option]);\n\n  if (!countryList) return <Loading />;\n  return (\n    <div>\n      <Header title=\"Explorar Origem\" searchIcon />\n      <div className=\"FlexCenter\">\n        <select\n          className=\"SelectOrigem\"\n          key=\"area\"\n          onChange={(e) => setOption(e.target.value)}\n          data-testid=\"explore-by-area-dropdown\"\n        >\n          <option value=\"All\" data-testid=\"All-option\">All</option>\n          {countryList.map((country) => (\n            <option key={country} value={country} data-testid={`${country}-option`}>{country}</option>\n          ))}\n        </select>\n      </div>\n      <div className=\"explorer-container\">\n        {renderCards(meals)}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExplorerByArea;\n"]},"metadata":{},"sourceType":"module"}