{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-recipes-app-03/src/components/Categories/ListCategories.js\";\nimport React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport FoodContext from '../../pages/FoodMainPage/Context/FoodContext';\nimport { fetchDrinkByCategoryButton } from '../../services/theCockTailAPI';\nimport { fetchCategoryMealsButton } from '../../services/theMealAPI';\nimport './ListCategories.css';\n\nconst handleCategories = (category, fetchCallBack, setCallBack) => {\n  fetchCallBack(category).then(response => setCallBack(Object.values(response)[0]), err => err);\n};\n\nconst handleAllCategory = (callback, data, category, allCategories) => {\n  if (allCategories === category || category === 'All') {\n    callback(data);\n    return true;\n  }\n\n  return false;\n};\n\nconst filterByCategory = (category, categoryType, untils) => {\n  const {\n    setMealsData,\n    setDrinksData,\n    allCategories,\n    setAllCategories,\n    drinks,\n    meals\n  } = untils;\n\n  if (categoryType === 'drink') {\n    if (handleAllCategory(setDrinksData, drinks, category, allCategories.category)) {\n      return setAllCategories('');\n    }\n\n    setAllCategories({\n      category\n    });\n    console.log(category, allCategories.category);\n    handleCategories(category, fetchDrinkByCategoryButton, setDrinksData);\n  }\n\n  if (handleAllCategory(setMealsData, meals, category, allCategories.category)) {\n    return setAllCategories('');\n  }\n\n  setAllCategories({\n    category\n  });\n  handleCategories(category, fetchCategoryMealsButton, setMealsData);\n  return null;\n};\n\nconst ListCategories = ({\n  strCategories,\n  type\n}) => {\n  const {\n    setMealsData,\n    setDrinksData,\n    dataBase: {\n      drinks,\n      meals\n    }\n  } = useContext(FoodContext);\n  const [allCategories, setAllCategories] = useState({\n    category: ''\n  });\n  console.log(strCategories);\n  const untils = {\n    setMealsData,\n    setDrinksData,\n    allCategories,\n    setAllCategories,\n    drinks,\n    meals\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"categories\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, strCategories.slice(0, 6).map(({\n    strCategory\n  }) => /*#__PURE__*/React.createElement(\"button\", {\n    className: \"categoryBtn\",\n    onClick: () => filterByCategory(strCategory, type, untils),\n    \"data-testid\": `${strCategory}-category-filter`,\n    key: strCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, `${strCategory}`)));\n};\n\nListCategories.propTypes = {\n  strCategories: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  type: PropTypes.string.isRequired\n};\nexport default ListCategories;","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-recipes-app-03/src/components/Categories/ListCategories.js"],"names":["React","useContext","useState","PropTypes","FoodContext","fetchDrinkByCategoryButton","fetchCategoryMealsButton","handleCategories","category","fetchCallBack","setCallBack","then","response","Object","values","err","handleAllCategory","callback","data","allCategories","filterByCategory","categoryType","untils","setMealsData","setDrinksData","setAllCategories","drinks","meals","console","log","ListCategories","strCategories","type","dataBase","slice","map","strCategory","propTypes","arrayOf","object","isRequired","string"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport FoodContext from '../../pages/FoodMainPage/Context/FoodContext';\nimport { fetchDrinkByCategoryButton } from '../../services/theCockTailAPI';\nimport { fetchCategoryMealsButton } from '../../services/theMealAPI';\nimport './ListCategories.css';\n\nconst handleCategories = (category, fetchCallBack, setCallBack) => {\n  fetchCallBack(category)\n    .then((response) => setCallBack(Object.values(response)[0]), (err) => err);\n};\n\nconst handleAllCategory = (callback, data, category, allCategories) => {\n  if (allCategories === category || category === 'All') {\n    callback(data);\n    return true;\n  }\n  return false;\n};\n\nconst filterByCategory = (category, categoryType, untils) => {\n  const { setMealsData, setDrinksData, allCategories, setAllCategories, drinks, meals } = untils;\n  if (categoryType === 'drink') {\n    if (handleAllCategory(setDrinksData, drinks, category, allCategories.category)) {\n      return setAllCategories('');\n    }\n    setAllCategories({ category });\n    console.log(category, allCategories.category);\n    handleCategories(category, fetchDrinkByCategoryButton, setDrinksData);\n  }\n  if (handleAllCategory(setMealsData, meals, category, allCategories.category)) {\n    return setAllCategories('');\n  }\n  setAllCategories({ category });\n  handleCategories(category, fetchCategoryMealsButton, setMealsData);\n  return null;\n};\n\nconst ListCategories = ({ strCategories, type }) => {\n  const { setMealsData, setDrinksData, dataBase: { drinks, meals } } = useContext(FoodContext);\n  const [allCategories, setAllCategories] = useState({ category: '' });\n  console.log(strCategories)\n  const untils = {\n    setMealsData,\n    setDrinksData,\n    allCategories,\n    setAllCategories,\n    drinks,\n    meals,\n  };\n\n  return (\n    <div className=\"categories\">\n      {strCategories.slice(0, 6).map(({ strCategory }) => (\n        <button\n          className=\"categoryBtn\"\n          onClick={() => filterByCategory(strCategory, type, untils)}\n          data-testid={`${strCategory}-category-filter`} key={strCategory}\n        >\n          {`${strCategory}`}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nListCategories.propTypes = {\n  strCategories: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default ListCategories;\n"]},"metadata":{},"sourceType":"module"}