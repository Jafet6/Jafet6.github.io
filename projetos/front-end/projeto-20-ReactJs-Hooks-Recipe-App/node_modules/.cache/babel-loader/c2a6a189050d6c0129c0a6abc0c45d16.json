{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-recipes-app-03/src/pages/DetailsPage/DetailsMealsPage/Ingredients.js\";\nimport React, { useContext } from 'react';\n\nconst Ingredients = props => {\n  const {\n    providerData\n  } = useContext(DetailsPageContext);\n  const {\n    init,\n    mid,\n    end\n  } = props.data;\n  const ingredientsValues = Object.values(providerData).slice(init, mid);\n  const ingredientsQuantity = Object.values(providerData).slice(mid, end);\n  const ingredientsWithQuantity = ingredientsValues.reduce((acc, currentElement, index) => {\n    if (currentElement !== '' && currentElement !== null) {\n      ingredientsQuantity[index] = ingredientsQuantity[index] || 'A seu gosto';\n      acc.push([currentElement, ingredientsQuantity[index]]);\n    }\n\n    return acc;\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, \"Ingredients\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, ingredientsWithQuantity.map(([ingredient, quantity], index) => /*#__PURE__*/React.createElement(\"li\", {\n    \"data-testid\": `${index}-ingredient-name-and-measure`,\n    key: ingredient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }\n  }, ingredient, \" - \", quantity))));\n};\n\nexport default Ingredients;","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-recipes-app-03/src/pages/DetailsPage/DetailsMealsPage/Ingredients.js"],"names":["React","useContext","Ingredients","props","providerData","DetailsPageContext","init","mid","end","data","ingredientsValues","Object","values","slice","ingredientsQuantity","ingredientsWithQuantity","reduce","acc","currentElement","index","push","map","ingredient","quantity"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAAmBH,UAAU,CAACI,kBAAD,CAAnC;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,GAAR;AAAaC,IAAAA;AAAb,MAAqBL,KAAK,CAACM,IAAjC;AACA,QAAMC,iBAAiB,GAAGC,MAAM,CAACC,MAAP,CAAcR,YAAd,EAA4BS,KAA5B,CAAkCP,IAAlC,EAAwCC,GAAxC,CAA1B;AACA,QAAMO,mBAAmB,GAAGH,MAAM,CAACC,MAAP,CAAcR,YAAd,EAA4BS,KAA5B,CAAkCN,GAAlC,EAAuCC,GAAvC,CAA5B;AAEA,QAAMO,uBAAuB,GAAGL,iBAAiB,CAACM,MAAlB,CAAyB,CAACC,GAAD,EAAMC,cAAN,EAAsBC,KAAtB,KAAgC;AACvF,QAAID,cAAc,KAAK,EAAnB,IAAyBA,cAAc,KAAK,IAAhD,EAAsD;AACpDJ,MAAAA,mBAAmB,CAACK,KAAD,CAAnB,GAA6BL,mBAAmB,CAACK,KAAD,CAAnB,IAA8B,aAA3D;AACAF,MAAAA,GAAG,CAACG,IAAJ,CAAS,CAACF,cAAD,EAAiBJ,mBAAmB,CAACK,KAAD,CAApC,CAAT;AACD;;AACD,WAAOF,GAAP;AACD,GAN+B,EAM7B,EAN6B,CAAhC;AAOA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,uBAAuB,CAACM,GAAxB,CAA4B,CAAC,CAACC,UAAD,EAAaC,QAAb,CAAD,EAAyBJ,KAAzB,kBAC1B;AAAI,mBAAc,GAAEA,KAAM,8BAA1B;AAAyD,IAAA,GAAG,EAAEG,UAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2EA,UAA3E,SAA0FC,QAA1F,CADF,CADH,CAFF,CADF;AASD,CAtBD;;AAwBA,eAAerB,WAAf","sourcesContent":["import React, { useContext } from 'react';\n\nconst Ingredients = (props) => {\n  const { providerData } = useContext(DetailsPageContext);\n  const { init, mid, end } = props.data;\n  const ingredientsValues = Object.values(providerData).slice(init, mid);\n  const ingredientsQuantity = Object.values(providerData).slice(mid, end);\n\n  const ingredientsWithQuantity = ingredientsValues.reduce((acc, currentElement, index) => {\n    if (currentElement !== '' && currentElement !== null) {\n      ingredientsQuantity[index] = ingredientsQuantity[index] || 'A seu gosto';\n      acc.push([currentElement, ingredientsQuantity[index]]);\n    }\n    return acc;\n  }, []);\n  return (\n    <div>\n      <h2>Ingredients</h2>\n      <ul>\n        {ingredientsWithQuantity.map(([ingredient, quantity], index) =>\n          (<li data-testid={`${index}-ingredient-name-and-measure`} key={ingredient}>{ingredient} - {quantity}</li>))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Ingredients\n"]},"metadata":{},"sourceType":"module"}