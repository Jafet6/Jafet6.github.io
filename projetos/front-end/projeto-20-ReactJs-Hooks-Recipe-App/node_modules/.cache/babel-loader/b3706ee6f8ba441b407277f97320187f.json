{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-recipes-app-03/src/components/DoneRecipeCard/index.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport ShareButton from '../../components/Share/ShareButton';\nimport './style.css';\nimport garfo from \"./garfo.svg\";\nimport beber from \"./beber.svg\";\n\nconst renderThumb = (recipe, index, setRedirect) => {\n  const {\n    img,\n    name\n  } = recipe;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": `${index}-recipe-card`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setRedirect(true),\n    className: \"buttonCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"thumbnail\",\n    alt: `imagem de uma refeição: ${name}`,\n    \"data-testid\": `${index}-horizontal-image`,\n    src: img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }))));\n};\n\nconst renderCardInfo = (recipe, index, setRedirect) => {\n  const {\n    name,\n    type,\n    id\n  } = recipe;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setRedirect(true),\n    className: \"buttonCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"data-testid\": `${index}-horizontal-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, name)), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"recipe-icon\",\n    src: type[0] === 'c' ? garfo : beber,\n    width: \"20px\",\n    alt: \"icone de talheres\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ShareButton, {\n    index: index,\n    path: `/${type}s/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst renderTopInformantion = (recipe, index) => {\n  const {\n    area,\n    category,\n    alcoholic\n  } = recipe;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"subtitle-card\",\n    \"data-testid\": `${index}-horizontal-top-text`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, recipe.type[0] === 'c' ? `${area} - ${category}` : alcoholic));\n};\n\nconst renderDate = (recipe, index) => {\n  const {\n    doneDate\n  } = recipe;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"data-testid\": `${index}-horizontal-done-date`,\n    className: \"subtitle-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"Feita em: \", doneDate));\n};\n\nconst renderTagName = (recipe, index) => {\n  const {\n    tags = []\n  } = recipe;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, tags.map(tagName => /*#__PURE__*/React.createElement(\"span\", {\n    key: index,\n    \"data-testid\": `${index}-${tagName}-horizontal-tag`,\n    className: \"subtitle-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, `${tagName}`)));\n};\n\nconst DoneRecipeCard = ({\n  recipe,\n  index,\n  doneRecipes\n}) => {\n  const [redirect, setRedirect] = useState(false);\n  const {\n    id,\n    type\n  } = recipe;\n  const rightType = type.slice(0, -1);\n  if (redirect) return /*#__PURE__*/React.createElement(Redirect, {\n    to: !doneRecipes ? '#' : `/${rightType}s/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 24\n    }\n  });\n  return /*#__PURE__*/React.createElement(Link, {\n    className: \"card b-shadow\",\n    to: doneRecipes ? '#' : `/${rightType}s/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, renderThumb(recipe, index, setRedirect), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"infoCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, renderTopInformantion(recipe, index), renderCardInfo(recipe, index, setRedirect), renderDate(recipe, index, doneRecipes), renderTagName(recipe, index)));\n};\n\nDoneRecipeCard.defaultProps = {\n  doneRecipes: undefined\n};\nDoneRecipeCard.propTypes = {\n  recipe: PropTypes.shape({\n    img: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n  doneRecipes: PropTypes.string\n};\nexport default DoneRecipeCard;","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-recipes-app-03/src/components/DoneRecipeCard/index.js"],"names":["React","useState","PropTypes","Link","Redirect","ShareButton","renderThumb","recipe","index","setRedirect","img","name","renderCardInfo","type","id","garfo","beber","renderTopInformantion","area","category","alcoholic","renderDate","doneDate","renderTagName","tags","map","tagName","DoneRecipeCard","doneRecipes","redirect","rightType","slice","defaultProps","undefined","propTypes","shape","string","isRequired","number"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport ShareButton from '../../components/Share/ShareButton';\nimport './style.css';\n\nimport garfo from './garfo.svg';\nimport beber from './beber.svg';\n\nconst renderThumb = (recipe, index, setRedirect) => {\n  const { img, name } = recipe;\n  return (\n    <React.Fragment>\n      <div data-testid={`${index}-recipe-card`}>\n        <button onClick={() => setRedirect(true)} className=\"buttonCard\">\n          <img\n            className=\"thumbnail\"\n            alt={`imagem de uma refeição: ${name}`}\n            data-testid={`${index}-horizontal-image`}\n            src={img}\n          />\n        </button>\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst renderCardInfo = (recipe, index, setRedirect) => {\n  const { name, type, id } = recipe;\n\n  return (\n    <React.Fragment>\n      <div className=\"card-title\">\n        <button onClick={() => setRedirect(true)} className=\"buttonCard\">\n          <span\n            data-testid={`${index}-horizontal-name`}\n          >{name}\n          </span>\n        </button>\n        <img\n          className=\"recipe-icon\"src={type[0] === 'c' ? garfo : beber}\n          width=\"20px\" alt=\"icone de talheres\"\n        />\n      </div>\n      <div>\n        <ShareButton index={index} path={`/${type}s/${id}`} />\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst renderTopInformantion = (recipe, index) => {\n  const { area, category, alcoholic } = recipe;\n  return (\n    <React.Fragment>\n      <span\n        className=\"subtitle-card\"\n        data-testid={`${index}-horizontal-top-text`}\n      >\n        {recipe.type[0] === 'c' ? `${area} - ${category}` : alcoholic}\n      </span>\n    </React.Fragment>\n  );\n};\n\nconst renderDate = (recipe, index) => {\n  const { doneDate } = recipe;\n  return (\n    <React.Fragment>\n      <span\n        data-testid={`${index}-horizontal-done-date`}\n        className=\"subtitle-card\"\n      >\n        Feita em: {doneDate}\n      </span>\n    </React.Fragment>\n  );\n};\n\nconst renderTagName = (recipe, index) => {\n  const { tags = [] } = recipe;\n  return (\n    <React.Fragment>\n      {tags.map((tagName) => (\n        <span\n          key={index}\n          data-testid={`${index}-${tagName}-horizontal-tag`}\n          className=\"subtitle-card\"\n        >\n          {`${tagName}`}\n        </span>\n      ))}\n    </React.Fragment>\n  );\n};\n\nconst DoneRecipeCard = ({ recipe, index, doneRecipes }) => {\n  const [redirect, setRedirect] = useState(false);\n  const { id, type } = recipe;\n  const rightType = type.slice(0, -1);\n\n  if (redirect) return <Redirect to={!doneRecipes ? '#' : `/${rightType}s/${id}`} />;\n  return (\n    <Link className=\"card b-shadow\" to={doneRecipes ? '#' : `/${rightType}s/${id}`}>\n      {renderThumb(recipe, index, setRedirect)}\n      <div className=\"infoCard\">\n        {renderTopInformantion(recipe, index)}\n        {renderCardInfo(recipe, index, setRedirect)}\n        {renderDate(recipe, index, doneRecipes)}\n        {renderTagName(recipe, index)}\n      </div>\n    </Link>\n  );\n};\n\nDoneRecipeCard.defaultProps = {\n  doneRecipes: undefined,\n};\n\nDoneRecipeCard.propTypes = {\n  recipe: PropTypes.shape({\n    img: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n  doneRecipes: PropTypes.string,\n};\n\nexport default DoneRecipeCard;\n"]},"metadata":{},"sourceType":"module"}