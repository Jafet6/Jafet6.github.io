{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-recipes-app-03/src/pages/DetailsPage/DetailsRecipePage/DetailsRecipeContent.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { RecipeInProgressContext } from '../../RecipesInProgress/RecipeInProgressProvider';\nimport DetailsRecipesPage from './DetailsRecipesPage';\nimport { fetchMealById, fetchMeals } from '../../../services/theMealAPI';\nimport { fetchDrinkById, fetchDrinks } from '../../../services/theCockTailAPI';\nimport { useParams, useLocation } from 'react-router-dom';\n\nconst DetailsRecipeContent = props => {\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    setRecipeDataFunc,\n    setProviderRecommendedFunc\n  } = useContext(RecipeInProgressContext);\n  const {\n    id\n  } = useParams();\n  const {\n    pathname\n  } = useLocation(); // const { match: { params: { id } }, location: { pathname } } = props;\n\n  const apiRequestSucceedMeal = ({\n    meals\n  }) => {\n    if (!pathname.includes('/comidas')) return setProviderRecommendedFunc(meals);\n    setRecipeDataFunc(meals[0]);\n    return setIsLoading(false);\n  };\n\n  const apiRequestSucceedDrink = ({\n    drinks\n  }) => {\n    if (!pathname.includes('/bebidas')) return setProviderRecommendedFunc(drinks);\n    setRecipeDataFunc(drinks[0]);\n    return setIsLoading(false);\n  };\n\n  const apiRequestFailure = ({\n    message\n  }) => {\n    setErrorMessage(message);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    const apiRequestFunction = (callback, recipeId = '') => {\n      setIsLoading(true);\n\n      if (callback === fetchMealById || callback === fetchMeals) {\n        return callback(recipeId).then(apiRequestSucceedMeal, apiRequestFailure);\n      }\n\n      return callback(recipeId).then(apiRequestSucceedDrink, apiRequestFailure);\n    };\n\n    if (pathname.includes('/comidas')) {\n      apiRequestFunction(fetchMealById, id);\n      apiRequestFunction(fetchDrinks);\n    } else {\n      apiRequestFunction(fetchDrinkById, id);\n      apiRequestFunction(fetchMeals);\n    }\n  }, [pathname]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(DetailsRecipesPage, {\n    renderControl: {\n      isLoading,\n      errorMessage\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }));\n};\n\nexport default DetailsRecipeContent; // DetailsRecipeContent.propTypes = {\n//   match: PropTypes.objectOf(PropTypes.any).isRequired,\n//   location: PropTypes.objectOf(PropTypes.any).isRequired,\n// };","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-recipes-app-03/src/pages/DetailsPage/DetailsRecipePage/DetailsRecipeContent.js"],"names":["React","useEffect","useState","useContext","PropTypes","RecipeInProgressContext","DetailsRecipesPage","fetchMealById","fetchMeals","fetchDrinkById","fetchDrinks","useParams","useLocation","DetailsRecipeContent","props","errorMessage","setErrorMessage","isLoading","setIsLoading","setRecipeDataFunc","setProviderRecommendedFunc","id","pathname","apiRequestSucceedMeal","meals","includes","apiRequestSucceedDrink","drinks","apiRequestFailure","message","apiRequestFunction","callback","recipeId","then"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { RecipeInProgressContext } from '../../RecipesInProgress/RecipeInProgressProvider';\nimport DetailsRecipesPage from './DetailsRecipesPage';\nimport { fetchMealById, fetchMeals } from '../../../services/theMealAPI';\nimport { fetchDrinkById, fetchDrinks } from '../../../services/theCockTailAPI';\nimport { useParams, useLocation } from 'react-router-dom';\n\nconst DetailsRecipeContent = (props) => {\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { setRecipeDataFunc, setProviderRecommendedFunc } = useContext(RecipeInProgressContext);\n\n  const { id } = useParams();\n  const { pathname } = useLocation();\n  // const { match: { params: { id } }, location: { pathname } } = props;\n\n  const apiRequestSucceedMeal = ({ meals }) => {\n    if (!pathname.includes('/comidas')) return setProviderRecommendedFunc(meals);\n    setRecipeDataFunc(meals[0]);\n    return setIsLoading(false);\n  };\n\n  const apiRequestSucceedDrink = ({ drinks }) => {\n    if (!pathname.includes('/bebidas')) return setProviderRecommendedFunc(drinks);\n    setRecipeDataFunc(drinks[0]);\n    return setIsLoading(false);\n  };\n\n  const apiRequestFailure = ({ message }) => {\n    setErrorMessage(message);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    const apiRequestFunction = (callback, recipeId = '') => {\n      setIsLoading(true);\n      if (callback === fetchMealById || callback === fetchMeals) {\n        return callback(recipeId).then(apiRequestSucceedMeal, apiRequestFailure);\n      }\n      return callback(recipeId).then(apiRequestSucceedDrink, apiRequestFailure);\n    };\n\n    if (pathname.includes('/comidas')) {\n      apiRequestFunction(fetchMealById, id);\n      apiRequestFunction(fetchDrinks);\n    } else {\n      apiRequestFunction(fetchDrinkById, id);\n      apiRequestFunction(fetchMeals);\n    }\n  }, [pathname]);\n\n  return <div><DetailsRecipesPage renderControl={{ isLoading, errorMessage }} /></div>;\n};\n\nexport default DetailsRecipeContent;\n\n// DetailsRecipeContent.propTypes = {\n//   match: PropTypes.objectOf(PropTypes.any).isRequired,\n//   location: PropTypes.objectOf(PropTypes.any).isRequired,\n// };\n"]},"metadata":{},"sourceType":"module"}