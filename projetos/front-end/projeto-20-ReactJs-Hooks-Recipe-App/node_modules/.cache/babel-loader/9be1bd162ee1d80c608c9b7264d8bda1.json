{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-recipes-app-03/src/pages/RecipesInProgress/RecipesInProgressPage/RecipeInProgressComponent.js\";\nimport React, { useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { RecipeInProgressContext } from '../RecipeInProgressProvider';\nimport IngredientsCheckbox from './IngredientsCheckbox';\nimport ContentHeader from '../../../components/ContentHeader/ContentHeader';\nimport './RecipeInProgressComponent.css';\nlet today = new Date();\nconst dd = String(today.getDate()).padStart(2, '0');\nconst mm = String(today.getMonth() + 1).padStart(2, '0');\nconst yyyy = today.getFullYear();\ntoday = `${dd} / ${mm} / ${yyyy}`;\n\nconst finishingRecipe = recipeObj => {\n  const {\n    id,\n    name,\n    area,\n    category,\n    alcoholic = '',\n    img,\n    type\n  } = recipeObj;\n  let {\n    tags = ''\n  } = recipeObj;\n\n  if (tags !== null && tags.includes(',')) {\n    tags = tags.split(',');\n  } else {\n    tags = [tags];\n  }\n\n  const doneRecipes = {\n    id,\n    type,\n    area,\n    category,\n    alcoholicOrNot: alcoholic,\n    name,\n    image: img,\n    doneDate: today,\n    tags\n  };\n  const startedRecipe = JSON.parse(localStorage.getItem('doneRecipes'));\n  if (!startedRecipe) return localStorage.setItem('doneRecipes', JSON.stringify([doneRecipes]));\n  return localStorage.setItem('doneRecipes', JSON.stringify([...startedRecipe, doneRecipes]));\n};\n\nconst RecipeInProgressComponent = () => {\n  const [disabled, setDisabled] = useState(true);\n  const {\n    recipeInProgress\n  } = useContext(RecipeInProgressContext);\n  const {\n    instructions,\n    ingredients = [],\n    type,\n    id,\n    englishType\n  } = recipeInProgress;\n\n  const finishButton = () => {\n    const inProgressType = JSON.parse(localStorage.getItem('inProgressRecipes'))[englishType];\n    if (inProgressType[id].length === ingredients.length) return setDisabled(false);\n    return setDisabled(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"in-progress-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"in-progress-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ContentHeader, {\n    data: recipeInProgress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Ingredients\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ingredients-p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, ingredients.map(([ingredient, quantity], index) => /*#__PURE__*/React.createElement(IngredientsCheckbox, {\n    key: ingredient + quantity,\n    ingredient: ingredient,\n    quantity: quantity,\n    type: type,\n    englishType: englishType,\n    index: index,\n    id: id,\n    finishButton: finishButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Instructions\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"instructions-container\",\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, instructions), /*#__PURE__*/React.createElement(Link, {\n    to: \"/receitas-feitas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"end-recipe-btn\",\n    \"data-testid\": \"finish-recipe-btn\",\n    type: \"button\",\n    disabled: disabled,\n    onClick: () => finishingRecipe(recipeInProgress),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"Finalizar Receita\"))));\n};\n\nexport default RecipeInProgressComponent;","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-recipes-app-03/src/pages/RecipesInProgress/RecipesInProgressPage/RecipeInProgressComponent.js"],"names":["React","useContext","useState","Link","RecipeInProgressContext","IngredientsCheckbox","ContentHeader","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","finishingRecipe","recipeObj","id","name","area","category","alcoholic","img","type","tags","includes","split","doneRecipes","alcoholicOrNot","image","doneDate","startedRecipe","JSON","parse","localStorage","getItem","setItem","stringify","RecipeInProgressComponent","disabled","setDisabled","recipeInProgress","instructions","ingredients","englishType","finishButton","inProgressType","length","map","ingredient","quantity","index"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { RecipeInProgressContext } from '../RecipeInProgressProvider';\nimport IngredientsCheckbox from './IngredientsCheckbox';\nimport ContentHeader from '../../../components/ContentHeader/ContentHeader';\nimport './RecipeInProgressComponent.css';\n\nlet today = new Date();\nconst dd = String(today.getDate()).padStart(2, '0');\nconst mm = String(today.getMonth() + 1).padStart(2, '0');\nconst yyyy = today.getFullYear();\ntoday = `${dd} / ${mm} / ${yyyy}`;\n\nconst finishingRecipe = (recipeObj) => {\n  const { id, name, area, category, alcoholic = '', img, type } = recipeObj;\n  let { tags = '' } = recipeObj;\n\n  if (tags !== null && tags.includes(',')) {\n    tags = tags.split(',');\n  } else {\n    tags = [tags];\n  }\n\n  const doneRecipes = {\n    id, type, area, category, alcoholicOrNot: alcoholic, name, image: img, doneDate: today, tags,\n  };\n  const startedRecipe = JSON.parse(localStorage.getItem('doneRecipes'));\n  if (!startedRecipe) return localStorage.setItem('doneRecipes', JSON.stringify([doneRecipes]));\n  return localStorage.setItem('doneRecipes', JSON.stringify([...startedRecipe, doneRecipes]));\n};\n\nconst RecipeInProgressComponent = () => {\n  const [disabled, setDisabled] = useState(true);\n  const { recipeInProgress } = useContext(RecipeInProgressContext);\n  const { instructions, ingredients = [], type, id, englishType } = recipeInProgress;\n  const finishButton = () => {\n    const inProgressType = JSON.parse(localStorage.getItem('inProgressRecipes'))[englishType];\n    if (inProgressType[id].length === ingredients.length) return setDisabled(false);\n    return setDisabled(true);\n  };\n  return (\n    <div className=\"in-progress-container\">\n      <div className=\"in-progress-content\">\n        <ContentHeader data={recipeInProgress} />\n        <h2>Ingredients</h2>\n        <div className=\"ingredients-p\">\n          {ingredients.map(([ingredient, quantity], index) =>\n            <IngredientsCheckbox\n              key={ingredient + quantity}\n              ingredient={ingredient}\n              quantity={quantity}\n              type={type}\n              englishType={englishType}\n              index={index}\n              id={id}\n              finishButton={finishButton}\n            />,\n          )}\n        </div>\n        <h2>Instructions</h2>\n        <p className=\"instructions-container\" data-testid=\"instructions\">{instructions}</p>\n        <Link to=\"/receitas-feitas\">\n          <button\n            className=\"end-recipe-btn\"\n            data-testid=\"finish-recipe-btn\"\n            type=\"button\"\n            disabled={disabled}\n            onClick={() => finishingRecipe(recipeInProgress)}\n          >\n              Finalizar Receita\n          </button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default RecipeInProgressComponent;\n"]},"metadata":{},"sourceType":"module"}