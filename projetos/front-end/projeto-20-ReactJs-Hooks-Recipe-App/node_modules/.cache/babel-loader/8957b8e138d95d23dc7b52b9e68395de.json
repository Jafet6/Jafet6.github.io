{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-recipes-app-03/src/pages/DetailsPage/DetailsMealsPage/DetailsMealsPage.js\";\nimport React, { useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport MealsComponent from './MealsComponent';\nimport { DetailsPageContext } from '../DetailsPageProvider';\nimport { fetchMealById } from '../../../services/theMealAPI';\nimport { fetchDrinkById } from '../../../services/theCockTailAPI';\n\nconst DetailsMealsPage = props => {\n  const [data, setData] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    match: {\n      params: {\n        id\n      }\n    },\n    params: {\n      pathname\n    }\n  } = props;\n\n  const apiRequestSucceedMeal = ({\n    meals\n  }) => {\n    setData(meals[0]);\n    setIsLoading(false);\n  };\n\n  const apiRequestSucceedDrink = ({\n    drinks\n  }) => {\n    setData(drinks[0]);\n    setIsLoading(false);\n  };\n\n  const apiRequestFailure = ({\n    message\n  }) => {\n    setErrorMessage(message);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    const apiRequestFunction = (callback, id) => {\n      setIsLoading(true);\n\n      if (callback === fetchMealById) {\n        return callback(id).then(apiRequestSucceedMeal, apiRequestFailure);\n      }\n\n      return callback(id).then(apiRequestSucceedDrink, apiRequestFailure);\n    };\n\n    if (pathname.contains('/comidas')) {\n      apiRequestFunction(fetchMealById, id);\n    } else {\n      apiRequestFunction(fetchDrinkById, id);\n    }\n  }, []);\n  if (isLoading) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, \"Loading...\");\n  if (errorMessage !== '') return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 35\n    }\n  }, \"Algum Error Ocorreu\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(MealsComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }));\n};\n\nexport default DetailsMealsPage;\nDetailsMealsPage.propTypes = {\n  match: PropTypes.objectOf(PropTypes.any).isRequired\n}; // DetailsMealsPage.defaultProps = {\n//   id: '',\n// }","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-recipes-app-03/src/pages/DetailsPage/DetailsMealsPage/DetailsMealsPage.js"],"names":["React","useEffect","useContext","PropTypes","MealsComponent","DetailsPageContext","fetchMealById","fetchDrinkById","DetailsMealsPage","props","data","setData","useState","errorMessage","setErrorMessage","isLoading","setIsLoading","match","params","id","pathname","apiRequestSucceedMeal","meals","apiRequestSucceedDrink","drinks","apiRequestFailure","message","apiRequestFunction","callback","then","contains","propTypes","objectOf","any","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,kBAAT,QAAmC,wBAAnC;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,SAASC,cAAT,QAA+B,kCAA/B;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCF,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAM;AAAEK,IAAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA;AAAF;AAAV,KAAT;AAA6BD,IAAAA,MAAM,EAAE;AAAEE,MAAAA;AAAF;AAArC,MAAsDX,KAA5D;;AACA,QAAMY,qBAAqB,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAe;AAC3CX,IAAAA,OAAO,CAACW,KAAK,CAAC,CAAD,CAAN,CAAP;AACAN,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAHD;;AAKA,QAAMO,sBAAsB,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgB;AAC7Cb,IAAAA,OAAO,CAACa,MAAM,CAAC,CAAD,CAAP,CAAP;AACAR,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAHD;;AAKA,QAAMS,iBAAiB,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAiB;AACzCZ,IAAAA,eAAe,CAACY,OAAD,CAAf;AACAV,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAHD;;AAKAf,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM0B,kBAAkB,GAAG,CAACC,QAAD,EAAWT,EAAX,KAAkB;AAC3CH,MAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,UAAIY,QAAQ,KAAKtB,aAAjB,EAAgC;AAC9B,eAAOsB,QAAQ,CAACT,EAAD,CAAR,CAAaU,IAAb,CAAkBR,qBAAlB,EAAyCI,iBAAzC,CAAP;AACD;;AACD,aAAOG,QAAQ,CAACT,EAAD,CAAR,CAAaU,IAAb,CAAkBN,sBAAlB,EAA0CE,iBAA1C,CAAP;AACD,KAND;;AAQA,QAAIL,QAAQ,CAACU,QAAT,CAAkB,UAAlB,CAAJ,EAAmC;AACjCH,MAAAA,kBAAkB,CAACrB,aAAD,EAAgBa,EAAhB,CAAlB;AACD,KAFD,MAEO;AACLQ,MAAAA,kBAAkB,CAACpB,cAAD,EAAiBY,EAAjB,CAAlB;AACD;AACF,GAdQ,EAcN,EAdM,CAAT;AAgBA,MAAIJ,SAAJ,EAAe,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACf,MAAIF,YAAY,KAAK,EAArB,EAAyB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAP;AACzB,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,CAAP;AACD,CAxCD;;AA0CA,eAAeL,gBAAf;AAEAA,gBAAgB,CAACuB,SAAjB,GAA6B;AAC3Bd,EAAAA,KAAK,EAAEd,SAAS,CAAC6B,QAAV,CAAmB7B,SAAS,CAAC8B,GAA7B,EAAkCC;AADd,CAA7B,C,CAIA;AACA;AACA","sourcesContent":["import React, { useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport MealsComponent from './MealsComponent';\nimport { DetailsPageContext } from '../DetailsPageProvider';\nimport { fetchMealById } from '../../../services/theMealAPI'\nimport { fetchDrinkById } from '../../../services/theCockTailAPI';\n\nconst DetailsMealsPage = (props) => {\n  const [data, setData] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { match: { params: { id } }, params: { pathname } } = props;\n  const apiRequestSucceedMeal = ({ meals }) => {\n    setData(meals[0]);\n    setIsLoading(false);\n  };\n\n  const apiRequestSucceedDrink = ({ drinks }) => {\n    setData(drinks[0]);\n    setIsLoading(false);\n  };\n\n  const apiRequestFailure = ({ message }) => {\n    setErrorMessage(message);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    const apiRequestFunction = (callback, id) => {\n      setIsLoading(true);\n      if (callback === fetchMealById) {\n        return callback(id).then(apiRequestSucceedMeal, apiRequestFailure);\n      }\n      return callback(id).then(apiRequestSucceedDrink, apiRequestFailure);\n    };\n\n    if (pathname.contains('/comidas')) {\n      apiRequestFunction(fetchMealById, id);\n    } else {\n      apiRequestFunction(fetchDrinkById, id);\n    }\n  }, []);\n\n  if (isLoading) return <div>Loading...</div>;\n  if (errorMessage !== '') return <span>Algum Error Ocorreu</span>;\n  return <div><MealsComponent /></div>;\n};\n\nexport default DetailsMealsPage;\n\nDetailsMealsPage.propTypes = {\n  match: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\n// DetailsMealsPage.defaultProps = {\n//   id: '',\n// }\n"]},"metadata":{},"sourceType":"module"}