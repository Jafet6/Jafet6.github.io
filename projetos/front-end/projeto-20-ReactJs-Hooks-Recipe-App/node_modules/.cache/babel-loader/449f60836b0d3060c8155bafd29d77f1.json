{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-recipes-app-03/src/pages/RecipesInProgress/RecipesInProgressPage/IngredientsCheckbox.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types'; // import { RecipeInProgressContext } from '../RecipeInProgressProvider';\n\nconst IngredientsCheckbox = props => {\n  // const { recipeData } = useContext(RecipeInProgressContext);\n  const [textDecorationState, setTextDecorationState] = useState('');\n  const {\n    ingredient,\n    index,\n    quantity,\n    type,\n    id,\n    finishButton,\n    englishType\n  } = props;\n\n  const riskIngredient = () => {\n    if (textDecorationState === 'line-through') {\n      return setTextDecorationState('');\n    }\n\n    return setTextDecorationState('line-through');\n  };\n\n  const localStorageProgress = () => {\n    const inProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (inProgress[englishType][id].some(e => e === index)) {\n      const elementIndex = inProgress[englishType][id].indexOf(index);\n      const newIngredientUsedArray = inProgress[englishType][id].splice(elementIndex, 1);\n      console.log(newIngredientUsedArray);\n      const inProgressRecipes = { ...inProgress,\n        [englishType]: { ...inProgress[englishType],\n          [id]: newIngredientUsedArray\n        }\n      };\n      return localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes));\n    }\n\n    const inProgressRecipes = { ...inProgress,\n      [englishType]: { ...inProgress[englishType],\n        [id]: [...inProgress[englishType][id], index]\n      }\n    };\n    return localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes));\n  };\n\n  console.log(JSON.parse(localStorage.getItem('inProgressRecipes')));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    key: ingredient + quantity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      textDecoration: textDecorationState\n    },\n    htmlFor: ingredient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": `${index}-ingredient-step`,\n    onClick: () => {\n      riskIngredient();\n      localStorageProgress();\n      finishButton();\n    },\n    type: \"checkbox\",\n    id: ingredient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), ingredient, \" - \", quantity)));\n};\n\nexport default IngredientsCheckbox;\nIngredientsCheckbox.propTypes = {\n  ingredient: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  quantity: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  finishButton: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-recipes-app-03/src/pages/RecipesInProgress/RecipesInProgressPage/IngredientsCheckbox.js"],"names":["React","useState","PropTypes","IngredientsCheckbox","props","textDecorationState","setTextDecorationState","ingredient","index","quantity","type","id","finishButton","englishType","riskIngredient","localStorageProgress","inProgress","JSON","parse","localStorage","getItem","some","e","elementIndex","indexOf","newIngredientUsedArray","splice","console","log","inProgressRecipes","setItem","stringify","textDecoration","propTypes","string","isRequired","number","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AAEA,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AACrC;AACA,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDL,QAAQ,CAAC,EAAD,CAA9D;AACA,QAAM;AAAEM,IAAAA,UAAF;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA,QAArB;AAA+BC,IAAAA,IAA/B;AAAqCC,IAAAA,EAArC;AAAyCC,IAAAA,YAAzC;AAAuDC,IAAAA;AAAvD,MAAuET,KAA7E;;AAEA,QAAMU,cAAc,GAAG,MAAM;AAC3B,QAAIT,mBAAmB,KAAK,cAA5B,EAA4C;AAC1C,aAAOC,sBAAsB,CAAC,EAAD,CAA7B;AACD;;AACD,WAAOA,sBAAsB,CAAC,cAAD,CAA7B;AACD,GALD;;AAOA,QAAMS,oBAAoB,GAAG,MAAM;AACjC,UAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,mBAArB,CAAX,CAAnB;;AACA,QAAIJ,UAAU,CAACH,WAAD,CAAV,CAAwBF,EAAxB,EAA4BU,IAA5B,CAAkCC,CAAD,IAAOA,CAAC,KAAKd,KAA9C,CAAJ,EAA0D;AACxD,YAAMe,YAAY,GAAGP,UAAU,CAACH,WAAD,CAAV,CAAwBF,EAAxB,EAA4Ba,OAA5B,CAAoChB,KAApC,CAArB;AACA,YAAMiB,sBAAsB,GAAGT,UAAU,CAACH,WAAD,CAAV,CAAwBF,EAAxB,EAA4Be,MAA5B,CAAmCH,YAAnC,EAAiD,CAAjD,CAA/B;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYH,sBAAZ;AACA,YAAMI,iBAAiB,GAAG,EACxB,GAAGb,UADqB;AAExB,SAACH,WAAD,GAAe,EACb,GAAGG,UAAU,CAACH,WAAD,CADA;AAEb,WAACF,EAAD,GAAMc;AAFO;AAFS,OAA1B;AAOA,aAAON,YAAY,CAACW,OAAb,CAAqB,mBAArB,EAA0Cb,IAAI,CAACc,SAAL,CAAeF,iBAAf,CAA1C,CAAP;AACD;;AACD,UAAMA,iBAAiB,GAAG,EACxB,GAAGb,UADqB;AAExB,OAACH,WAAD,GAAe,EACb,GAAGG,UAAU,CAACH,WAAD,CADA;AAEb,SAACF,EAAD,GAAM,CAAC,GAAGK,UAAU,CAACH,WAAD,CAAV,CAAwBF,EAAxB,CAAJ,EAAiCH,KAAjC;AAFO;AAFS,KAA1B;AAOA,WAAOW,YAAY,CAACW,OAAb,CAAqB,mBAArB,EAA0Cb,IAAI,CAACc,SAAL,CAAeF,iBAAf,CAA1C,CAAP;AACD,GAvBD;;AAwBAF,EAAAA,OAAO,CAACC,GAAR,CAAYX,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,mBAArB,CAAX,CAAZ;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEb,UAAU,GAAGE,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,KAAK,EAAE;AAAEuB,MAAAA,cAAc,EAAE3B;AAAlB,KAAd;AAAuD,IAAA,OAAO,EAAEE,UAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,mBAAc,GAAEC,KAAM,kBADxB;AAEE,IAAA,OAAO,EAAE,MAAM;AAAEM,MAAAA,cAAc;AAAIC,MAAAA,oBAAoB;AAAIH,MAAAA,YAAY;AAAK,KAF9E;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,EAAE,EAAEL,UAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOGA,UAPH,SAOkBE,QAPlB,CADF,CADF,CADF;AAeD,CApDD;;AAsDA,eAAeN,mBAAf;AAEAA,mBAAmB,CAAC8B,SAApB,GAAgC;AAC9B1B,EAAAA,UAAU,EAAEL,SAAS,CAACgC,MAAV,CAAiBC,UADC;AAE9B3B,EAAAA,KAAK,EAAEN,SAAS,CAACkC,MAAV,CAAiBD,UAFM;AAG9B1B,EAAAA,QAAQ,EAAEP,SAAS,CAACgC,MAAV,CAAiBC,UAHG;AAI9BzB,EAAAA,IAAI,EAAER,SAAS,CAACgC,MAAV,CAAiBC,UAJO;AAK9BxB,EAAAA,EAAE,EAAET,SAAS,CAACgC,MAAV,CAAiBC,UALS;AAM9BvB,EAAAA,YAAY,EAAEV,SAAS,CAACmC,IAAV,CAAeF;AANC,CAAhC","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// import { RecipeInProgressContext } from '../RecipeInProgressProvider';\n\nconst IngredientsCheckbox = (props) => {\n  // const { recipeData } = useContext(RecipeInProgressContext);\n  const [textDecorationState, setTextDecorationState] = useState('');\n  const { ingredient, index, quantity, type, id, finishButton, englishType } = props;\n\n  const riskIngredient = () => {\n    if (textDecorationState === 'line-through') {\n      return setTextDecorationState('');\n    }\n    return setTextDecorationState('line-through');\n  };\n\n  const localStorageProgress = () => {\n    const inProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (inProgress[englishType][id].some((e) => e === index)) {\n      const elementIndex = inProgress[englishType][id].indexOf(index);\n      const newIngredientUsedArray = inProgress[englishType][id].splice(elementIndex, 1);\n      console.log(newIngredientUsedArray)\n      const inProgressRecipes = {\n        ...inProgress,\n        [englishType]: {\n          ...inProgress[englishType],\n          [id]: newIngredientUsedArray,\n        },\n      };\n      return localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes));\n    }\n    const inProgressRecipes = {\n      ...inProgress,\n      [englishType]: {\n        ...inProgress[englishType],\n        [id]: [...inProgress[englishType][id], index],\n      },\n    };\n    return localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes));\n  };\n  console.log(JSON.parse(localStorage.getItem('inProgressRecipes')))\n  return (\n    <div>\n      <div key={ingredient + quantity}>\n        <label style={{ textDecoration: textDecorationState }} htmlFor={ingredient}>\n          <input\n            data-testid={`${index}-ingredient-step`}\n            onClick={() => { riskIngredient(); localStorageProgress(); finishButton(); }}\n            type=\"checkbox\"\n            id={ingredient}\n          />\n          {ingredient} - {quantity}\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default IngredientsCheckbox;\n\nIngredientsCheckbox.propTypes = {\n  ingredient: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  quantity: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  finishButton: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}