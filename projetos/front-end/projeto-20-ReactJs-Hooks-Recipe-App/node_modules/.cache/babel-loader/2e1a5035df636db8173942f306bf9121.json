{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-recipes-app-03/src/pages/DetailsPage/DetailsMealsPage/DetailsMealsPage.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport { DetailsPageContext } from '../DetailsPageProvider';\nimport PropTypes from 'prop-types';\nimport MealsComponent from './MealsComponent';\nimport DetailsRecipesPage from './DetailsRecipesPage';\nimport { fetchMealById, fetchMeals } from '../../../services/theMealAPI';\nimport { fetchDrinkById, fetchDrinks } from '../../../services/theCockTailAPI';\n\nconst destructureMeal = data => {\n  const {\n    strMeal: name,\n    strCategory: category,\n    strMealThumb: img,\n    strYoutube: video,\n    strInstructions: instructions,\n    idMeal: id\n  } = data;\n  const dataObj = {\n    name,\n    category,\n    img,\n    video,\n    instructions,\n    id,\n    init: 9,\n    mid: 29,\n    end: 49,\n    type: 'comidas'\n  };\n  return dataObj;\n};\n\nconst destructureDrinks = data => {\n  const {\n    strDrink: name,\n    strAlcoholic: category,\n    strDrinkThumb: img,\n    strInstructions: instructions,\n    idDrink: id\n  } = data;\n  const dataObj = {\n    name,\n    category,\n    img,\n    instructions,\n    id,\n    init: 21,\n    mid: 36,\n    end: 51,\n    type: 'bebidas'\n  };\n  return dataObj;\n};\n\nconst DetailsMealsPage = props => {\n  const [data, setData] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    setProviderDataFunc,\n    setPathNameFunc,\n    setProviderRecommendedFunc\n  } = useContext(DetailsPageContext);\n  const {\n    match: {\n      params: {\n        id\n      }\n    },\n    location: {\n      pathname\n    }\n  } = props;\n\n  const apiRequestSucceedMeal = ({\n    meals\n  }) => {\n    if (!pathname.includes('/comidas')) return setProviderRecommendedFunc(meals);\n    setData(meals[0]);\n    setProviderDataFunc(meals[0]);\n    setPathNameFunc(pathname);\n    setIsLoading(false);\n  };\n\n  const apiRequestSucceedDrink = ({\n    drinks\n  }) => {\n    if (!pathname.includes('/bebidas')) return setProviderRecommendedFunc(drinks);\n    setData(drinks[0]);\n    setProviderDataFunc(drinks[0]);\n    setPathNameFunc(pathname);\n    setIsLoading(false);\n  };\n\n  const apiRequestFailure = ({\n    message\n  }) => {\n    setErrorMessage(message);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    const apiRequestFunction = (callback, id = '') => {\n      setIsLoading(true);\n\n      if (callback === fetchMealById || callback === fetchMeals) {\n        return callback(id).then(apiRequestSucceedMeal, apiRequestFailure);\n      }\n\n      return callback(id).then(apiRequestSucceedDrink, apiRequestFailure);\n    };\n\n    if (pathname.includes('/comidas')) {\n      apiRequestFunction(fetchMealById, id);\n      apiRequestFunction(fetchDrinks);\n    } else {\n      apiRequestFunction(fetchDrinkById, id);\n      apiRequestFunction(fetchMeals);\n    }\n  }, [pathname]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(DetailsRecipesPage, {\n    renderControl: (isLoading, errorMessage, data),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  })); // const dataDestructure = (data) => data.idMeal ? destructureMeal(data) : destructureDrinks(data);\n  // if (isLoading) return <div>Loading...</div>;\n  // if (errorMessage !== '') return <span>Algum Error Ocorreu</span>;\n  // return <div><MealsComponent data={dataDestructure(data)} /></div>;\n};\n\nexport default DetailsMealsPage;\nDetailsMealsPage.propTypes = {\n  match: PropTypes.objectOf(PropTypes.any).isRequired\n}; // DetailsMealsPage.defaultProps = {\n//   id: '',\n// }","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-recipes-app-03/src/pages/DetailsPage/DetailsMealsPage/DetailsMealsPage.js"],"names":["React","useEffect","useState","useContext","DetailsPageContext","PropTypes","MealsComponent","DetailsRecipesPage","fetchMealById","fetchMeals","fetchDrinkById","fetchDrinks","destructureMeal","data","strMeal","name","strCategory","category","strMealThumb","img","strYoutube","video","strInstructions","instructions","idMeal","id","dataObj","init","mid","end","type","destructureDrinks","strDrink","strAlcoholic","strDrinkThumb","idDrink","DetailsMealsPage","props","setData","errorMessage","setErrorMessage","isLoading","setIsLoading","setProviderDataFunc","setPathNameFunc","setProviderRecommendedFunc","match","params","location","pathname","apiRequestSucceedMeal","meals","includes","apiRequestSucceedDrink","drinks","apiRequestFailure","message","apiRequestFunction","callback","then","propTypes","objectOf","any","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { DetailsPageContext } from '../DetailsPageProvider';\nimport PropTypes from 'prop-types';\nimport MealsComponent from './MealsComponent';\nimport DetailsRecipesPage from './DetailsRecipesPage';\nimport { fetchMealById, fetchMeals } from '../../../services/theMealAPI'\nimport { fetchDrinkById, fetchDrinks } from '../../../services/theCockTailAPI';\n\n\nconst destructureMeal = (data) => {\n  const {\n    strMeal:name,strCategory:category, strMealThumb:img, strYoutube:video,\n    strInstructions:instructions, idMeal:id,\n  } = data;\n  const dataObj = {\n    name, category, img, video, instructions, id, init: 9, mid: 29, end: 49, type: 'comidas',\n  };\n  return dataObj;\n};\n\nconst destructureDrinks = (data) => {\n  const {\n    strDrink:name, strAlcoholic:category, strDrinkThumb:img,\n    strInstructions:instructions, idDrink:id,\n  } = data;\n  const dataObj = {\n    name, category, img, instructions, id, init: 21, mid: 36, end: 51, type: 'bebidas',\n  }\n  return dataObj;\n};\n\nconst DetailsMealsPage = (props) => {\n  const [data, setData] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const { setProviderDataFunc, setPathNameFunc, setProviderRecommendedFunc } = useContext(DetailsPageContext)\n  const { match: { params: { id } }, location: { pathname } } = props;\n  const apiRequestSucceedMeal = ({ meals }) => {\n    if (!pathname.includes('/comidas')) return setProviderRecommendedFunc(meals);\n    setData(meals[0]);\n    setProviderDataFunc(meals[0]);\n    setPathNameFunc(pathname);\n    setIsLoading(false);\n  };\n  const apiRequestSucceedDrink = ({ drinks }) => {\n    if (!pathname.includes('/bebidas')) return setProviderRecommendedFunc(drinks);\n    setData(drinks[0]);\n    setProviderDataFunc(drinks[0]);\n    setPathNameFunc(pathname);\n    setIsLoading(false);\n  };\n  const apiRequestFailure = ({ message }) => {\n    setErrorMessage(message);\n    setIsLoading(false);\n  };\n  useEffect(() => {\n    const apiRequestFunction = (callback, id = '') => {\n      setIsLoading(true);\n      if (callback === fetchMealById || callback === fetchMeals) {\n        return callback(id).then(apiRequestSucceedMeal, apiRequestFailure);\n      }\n      return callback(id).then(apiRequestSucceedDrink, apiRequestFailure);\n    };\n    if (pathname.includes('/comidas')) {\n      apiRequestFunction(fetchMealById, id);\n      apiRequestFunction(fetchDrinks);\n    } else {\n      apiRequestFunction(fetchDrinkById, id);\n      apiRequestFunction(fetchMeals);\n    }\n  }, [pathname]);\n  return <div><DetailsRecipesPage renderControl={isLoading, errorMessage, data} /></div>\n  // const dataDestructure = (data) => data.idMeal ? destructureMeal(data) : destructureDrinks(data);\n  // if (isLoading) return <div>Loading...</div>;\n  // if (errorMessage !== '') return <span>Algum Error Ocorreu</span>;\n  // return <div><MealsComponent data={dataDestructure(data)} /></div>;\n};\n\nexport default DetailsMealsPage;\n\nDetailsMealsPage.propTypes = {\n  match: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\n// DetailsMealsPage.defaultProps = {\n//   id: '',\n// }\n"]},"metadata":{},"sourceType":"module"}