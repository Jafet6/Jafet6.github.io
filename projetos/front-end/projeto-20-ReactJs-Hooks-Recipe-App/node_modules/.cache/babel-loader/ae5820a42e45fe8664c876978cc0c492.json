{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-recipes-app-03/src/pages/RecipesInProgress/RecipesInProgressPage/IngredientsCheckbox.js\";\nimport React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { RecipeInProgressContext } from '../RecipeInProgressProvider';\n\nconst IngredientsCheckbox = props => {\n  // const { recipeData } = useContext(RecipeInProgressContext);\n  const [textDecorationState, setTextDecorationState] = useState('');\n  const {\n    ingredient,\n    index,\n    quantity,\n    type,\n    id\n  } = props;\n  console.log(type);\n\n  const riskIngredient = () => {\n    if (textDecorationState === 'line-through') {\n      return setTextDecorationState('');\n    }\n\n    return setTextDecorationState('line-through');\n  };\n\n  const localStorageProgress = () => {\n    const inProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (type === 'comidas') {\n      const inProgressRecipes = { ...inProgress,\n        meals: { ...inProgress.meals,\n          [id]: [...inProgress.meals[id], index]\n        }\n      };\n      return localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes));\n    }\n\n    const inProgressRecipes = { ...inProgress,\n      cocktails: { ...inProgress.cocktails,\n        [id]: [...inProgress.cocktails[id], index]\n      }\n    };\n    return localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    key: ingredient + quantity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      textDecoration: textDecorationState\n    },\n    htmlFor: ingredient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": `${index}-ingredient-step`,\n    onClick: () => {\n      riskIngredient();\n      localStorageProgress();\n    },\n    type: \"checkbox\",\n    id: ingredient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), ingredient, \" - \", quantity)));\n};\n\nexport default IngredientsCheckbox;\nIngredientsCheckbox.propTypes = {\n  ingredient: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  quantity: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-recipes-app-03/src/pages/RecipesInProgress/RecipesInProgressPage/IngredientsCheckbox.js"],"names":["React","useState","useContext","PropTypes","RecipeInProgressContext","IngredientsCheckbox","props","textDecorationState","setTextDecorationState","ingredient","index","quantity","type","id","console","log","riskIngredient","localStorageProgress","inProgress","JSON","parse","localStorage","getItem","inProgressRecipes","meals","setItem","stringify","cocktails","textDecoration","propTypes","string","isRequired","number"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { RecipeInProgressContext } from '../RecipeInProgressProvider';\n\nconst IngredientsCheckbox = (props) => {\n  // const { recipeData } = useContext(RecipeInProgressContext);\n  const [textDecorationState, setTextDecorationState] = useState('');\n  const { ingredient, index, quantity, type, id } = props;\n\n  console.log(type);\n  const riskIngredient = () => {\n    if (textDecorationState === 'line-through') {\n      return setTextDecorationState('');\n    }\n    return setTextDecorationState('line-through');\n  };\n\n  const localStorageProgress = () => {\n    const inProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (type === 'comidas') {\n      const inProgressRecipes = {\n        ...inProgress,\n        meals: {\n          ...inProgress.meals,\n          [id]: [...inProgress.meals[id], index],\n        },\n      };\n      return localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes))\n    }\n    const inProgressRecipes = {\n      ...inProgress,\n      cocktails: {\n        ...inProgress.cocktails,\n        [id]: [...inProgress.cocktails[id], index],\n      },\n    };\n    return localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes))\n  };\n\n  return (\n    <div>\n      <div key={ingredient + quantity}>\n        <label style={{ textDecoration: textDecorationState }} htmlFor={ingredient}>\n          <input\n            data-testid={`${index}-ingredient-step`}\n            onClick={() => {riskIngredient(); localStorageProgress()}}\n            type=\"checkbox\"\n            id={ingredient}\n          />\n          {ingredient} - {quantity}\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default IngredientsCheckbox;\n\nIngredientsCheckbox.propTypes = {\n  ingredient: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  quantity: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}