{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-recipes-app-03/src/pages/ExplorerPages/ExplorerByIngredients.js\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './Explorer.css';\nimport Footer from '../../components/Footer/Footer';\nimport { fetchIngredientsList } from '../../services/theMealAPI';\nimport { fetchListDrinksIngredients } from '../../services/theCockTailAPI';\nimport Header from '../../components/Header/index';\n\nconst fetchIngredients = async (pathname, setIngredients, setImgUrl, setNewRoute) => {\n  if (pathname === '/explorar/comidas/ingredientes') {\n    const dataMeals = await fetchIngredientsList();\n    setIngredients(dataMeals.meals);\n    setImgUrl('https://www.themealdb.com/images/ingredients/');\n    const newRoute = '/comidas';\n    setNewRoute(newRoute);\n  } else if (pathname === '/explorar/bebidas/ingredientes') {\n    const dataDrinks = await fetchListDrinksIngredients();\n    setIngredients(dataDrinks.drinks);\n    setImgUrl('https://www.thecocktaildb.com/images/ingredients/');\n    const newRoute = '/bebidas';\n    setNewRoute(newRoute);\n  }\n};\n\nfunction renderCards(ingredients, imgUrl, newRoute) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"explorer-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, ingredients.map((ele, index) => index < 12 && /*#__PURE__*/React.createElement(Link, {\n    to: `${newRoute}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    key: `${ele}`,\n    \"data-testid\": `${index}-ingredient-card`,\n    className: \"card-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": `${index}-card-img`,\n    src: `${imgUrl}${ele.strIngredient || ele.strIngredient1}-Small.png`,\n    alt: `${ele.strIngredient || ele.strIngredient1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-card-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, ele.strIngredient || ele.strIngredient1)))));\n}\n\nfunction ExplorerByIngredients({\n  location: {\n    pathname\n  }\n}) {\n  const [ingredients, setIngredients] = useState('');\n  const [newRoute, setNewRoute] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  useEffect(() => {\n    fetchIngredients(pathname, setIngredients, setImgUrl, setNewRoute);\n  }, []);\n  if (!ingredients) return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 28\n    }\n  }, \"Loading\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    title: \"Explorar Ingredientes\",\n    searchIcon: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), renderCards(ingredients, imgUrl, newRoute), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }));\n}\n\nExplorerByIngredients.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }).isRequired\n};\nexport default ExplorerByIngredients;","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-recipes-app-03/src/pages/ExplorerPages/ExplorerByIngredients.js"],"names":["React","useEffect","useState","PropTypes","Link","Footer","fetchIngredientsList","fetchListDrinksIngredients","Header","fetchIngredients","pathname","setIngredients","setImgUrl","setNewRoute","dataMeals","meals","newRoute","dataDrinks","drinks","renderCards","ingredients","imgUrl","map","ele","index","strIngredient","strIngredient1","ExplorerByIngredients","location","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './Explorer.css';\nimport Footer from '../../components/Footer/Footer';\nimport { fetchIngredientsList } from '../../services/theMealAPI';\nimport { fetchListDrinksIngredients } from '../../services/theCockTailAPI';\nimport Header from '../../components/Header/index';\n\nconst fetchIngredients = async (pathname, setIngredients, setImgUrl, setNewRoute) => {\n  if (pathname === '/explorar/comidas/ingredientes') {\n    const dataMeals = await fetchIngredientsList();\n    setIngredients(dataMeals.meals);\n    setImgUrl('https://www.themealdb.com/images/ingredients/');\n    const newRoute = '/comidas';\n    setNewRoute(newRoute);\n  } else if (pathname === '/explorar/bebidas/ingredientes') {\n    const dataDrinks = await fetchListDrinksIngredients();\n    setIngredients(dataDrinks.drinks);\n    setImgUrl('https://www.thecocktaildb.com/images/ingredients/');\n    const newRoute = '/bebidas';\n    setNewRoute(newRoute);\n  }\n};\n\nfunction renderCards(ingredients, imgUrl, newRoute) {\n  return (\n    <div className=\"explorer-container\">\n      {ingredients.map((ele, index) => (\n        index < 12 &&\n        <Link to={`${newRoute}`}>\n          <div\n            key={`${ele}`}\n            data-testid={`${index}-ingredient-card`}\n            className=\"card-container\"\n          >\n            <img\n              data-testid={`${index}-card-img`}\n              src={`${imgUrl}${ele.strIngredient || ele.strIngredient1}-Small.png`}\n              alt={`${ele.strIngredient || ele.strIngredient1}`}\n            />\n            <p data-testid={`${index}-card-name`}>\n              {ele.strIngredient || ele.strIngredient1}\n            </p>\n          </div>\n        </Link>\n      ))}\n    </div>\n  );\n}\n\nfunction ExplorerByIngredients({ location: { pathname } }) {\n  const [ingredients, setIngredients] = useState('');\n  const [newRoute, setNewRoute] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n\n  useEffect(() => {\n    fetchIngredients(pathname, setIngredients, setImgUrl, setNewRoute);\n  }, []);\n\n  if (!ingredients) return <h1>Loading</h1>;\n\n  return (\n    <div>\n      <Header title=\"Explorar Ingredientes\" searchIcon={false} />\n      {renderCards(ingredients, imgUrl, newRoute)}\n      <Footer />\n    </div>\n  );\n}\n\nExplorerByIngredients.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default ExplorerByIngredients;\n"]},"metadata":{},"sourceType":"module"}