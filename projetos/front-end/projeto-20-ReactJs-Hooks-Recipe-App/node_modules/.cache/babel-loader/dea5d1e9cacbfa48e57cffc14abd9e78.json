{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-recipes-app-03/src/pages/RecipesInProgress/RecipesInProgressPage/IngredientsCheckbox.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './IngredientsCheckbox.css';\n\nconst riskIngredient = (textDecorationState, setCheckState, setTextDecorationState) => {\n  if (textDecorationState === 'line-through') {\n    setCheckState(false);\n    return setTextDecorationState('');\n  }\n\n  setCheckState(true);\n  return setTextDecorationState('line-through');\n};\n\nconst localStorageProgress = (englishType, id, index) => {\n  const inProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n  if (inProgress[englishType][id].some(e => e === index)) {\n    const newArr = [...inProgress[englishType][id]].filter(e => e !== index);\n    const inProgressRecipes = { ...inProgress,\n      [englishType]: { ...inProgress[englishType],\n        [id]: newArr\n      }\n    };\n    return localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes));\n  }\n\n  const inProgressRecipes = { ...inProgress,\n    [englishType]: { ...inProgress[englishType],\n      [id]: [...inProgress[englishType][id], index]\n    }\n  };\n  return localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes));\n};\n\nconst kkk = () => {\n  if (JSON.parse(localStorage.getItem('inProgressRecipes'))[englishType][id].some(e => e === index)) {\n    setCheckState(true);\n    finishButton(englishType, id, index);\n    setTextDecorationState('line-through');\n  }\n};\n\nconst IngredientsCheckbox = props => {\n  const [textDecorationState, setTextDecorationState] = useState('');\n  const [checkState, setCheckState] = useState(false);\n  const {\n    ingredient,\n    index,\n    quantity,\n    id,\n    finishButton,\n    englishType\n  } = props; // useEffect(() => {\n  // }, []);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkbox-container\",\n    \"data-testid\": `${index}-ingredient-step`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkbox-igredients\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      textDecoration: textDecorationState\n    },\n    htmlFor: ingredient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: kkk(),\n    onChange: () => {\n      riskIngredient(textDecorationState, setCheckState, setTextDecorationState);\n      localStorageProgress(englishType, id, index);\n      finishButton();\n    },\n    id: ingredient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), ingredient, \" - \", quantity)));\n};\n\nexport default IngredientsCheckbox;\nIngredientsCheckbox.propTypes = {\n  ingredient: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  quantity: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  finishButton: PropTypes.func.isRequired,\n  englishType: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-recipes-app-03/src/pages/RecipesInProgress/RecipesInProgressPage/IngredientsCheckbox.js"],"names":["React","useState","useEffect","PropTypes","riskIngredient","textDecorationState","setCheckState","setTextDecorationState","localStorageProgress","englishType","id","index","inProgress","JSON","parse","localStorage","getItem","some","e","newArr","filter","inProgressRecipes","setItem","stringify","kkk","finishButton","IngredientsCheckbox","props","checkState","ingredient","quantity","textDecoration","propTypes","string","isRequired","number","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,2BAAP;;AAEA,MAAMC,cAAc,GAAG,CAACC,mBAAD,EAAsBC,aAAtB,EAAqCC,sBAArC,KAAgE;AACrF,MAAIF,mBAAmB,KAAK,cAA5B,EAA4C;AAC1CC,IAAAA,aAAa,CAAC,KAAD,CAAb;AACA,WAAOC,sBAAsB,CAAC,EAAD,CAA7B;AACD;;AACDD,EAAAA,aAAa,CAAC,IAAD,CAAb;AACA,SAAOC,sBAAsB,CAAC,cAAD,CAA7B;AACD,CAPD;;AASA,MAAMC,oBAAoB,GAAG,CAACC,WAAD,EAAcC,EAAd,EAAkBC,KAAlB,KAA4B;AACvD,QAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,mBAArB,CAAX,CAAnB;;AACA,MAAIJ,UAAU,CAACH,WAAD,CAAV,CAAwBC,EAAxB,EAA4BO,IAA5B,CAAkCC,CAAD,IAAOA,CAAC,KAAKP,KAA9C,CAAJ,EAA0D;AACxD,UAAMQ,MAAM,GAAG,CAAC,GAAGP,UAAU,CAACH,WAAD,CAAV,CAAwBC,EAAxB,CAAJ,EAAiCU,MAAjC,CAAyCF,CAAD,IAAOA,CAAC,KAAKP,KAArD,CAAf;AACA,UAAMU,iBAAiB,GAAG,EACxB,GAAGT,UADqB;AAExB,OAACH,WAAD,GAAe,EAAE,GAAGG,UAAU,CAACH,WAAD,CAAf;AAA8B,SAACC,EAAD,GAAMS;AAApC;AAFS,KAA1B;AAIA,WAAOJ,YAAY,CAACO,OAAb,CAAqB,mBAArB,EAA0CT,IAAI,CAACU,SAAL,CAAeF,iBAAf,CAA1C,CAAP;AACD;;AACD,QAAMA,iBAAiB,GAAG,EACxB,GAAGT,UADqB;AAExB,KAACH,WAAD,GAAe,EAAE,GAAGG,UAAU,CAACH,WAAD,CAAf;AAA8B,OAACC,EAAD,GAAM,CAAC,GAAGE,UAAU,CAACH,WAAD,CAAV,CAAwBC,EAAxB,CAAJ,EAAiCC,KAAjC;AAApC;AAFS,GAA1B;AAIA,SAAOI,YAAY,CAACO,OAAb,CAAqB,mBAArB,EAA0CT,IAAI,CAACU,SAAL,CAAeF,iBAAf,CAA1C,CAAP;AACD,CAfD;;AAiBA,MAAMG,GAAG,GAAG,MAAM;AAChB,MACEX,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,mBAArB,CAAX,EAAsDP,WAAtD,EAAmEC,EAAnE,EAAuEO,IAAvE,CAA6EC,CAAD,IAAOA,CAAC,KAAKP,KAAzF,CADF,EAEE;AACAL,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAmB,IAAAA,YAAY,CAAChB,WAAD,EAAcC,EAAd,EAAkBC,KAAlB,CAAZ;AACAJ,IAAAA,sBAAsB,CAAC,cAAD,CAAtB;AACD;AACF,CARD;;AAUA,MAAMmB,mBAAmB,GAAIC,KAAD,IAAW;AACrC,QAAM,CAACtB,mBAAD,EAAsBE,sBAAtB,IAAgDN,QAAQ,CAAC,EAAD,CAA9D;AACA,QAAM,CAAC2B,UAAD,EAAatB,aAAb,IAA8BL,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM;AAAE4B,IAAAA,UAAF;AAAclB,IAAAA,KAAd;AAAqBmB,IAAAA,QAArB;AAA+BpB,IAAAA,EAA/B;AAAmCe,IAAAA,YAAnC;AAAiDhB,IAAAA;AAAjD,MAAiEkB,KAAvE,CAHqC,CAIrC;AAEA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAoC,mBAAc,GAAEhB,KAAM,kBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,KAAK,EAAE;AAAEoB,MAAAA,cAAc,EAAE1B;AAAlB,KAAd;AAAuD,IAAA,OAAO,EAAEwB,UAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,OAAO,EAAEL,GAAG,EAFd;AAGE,IAAA,QAAQ,EAAE,MAAM;AACdpB,MAAAA,cAAc,CAACC,mBAAD,EAAsBC,aAAtB,EAAqCC,sBAArC,CAAd;AACAC,MAAAA,oBAAoB,CAACC,WAAD,EAAcC,EAAd,EAAkBC,KAAlB,CAApB;AACAc,MAAAA,YAAY;AACb,KAPH;AAQE,IAAA,EAAE,EAAEI,UARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAWGA,UAXH,SAWkBC,QAXlB,CADF,CADF,CADF;AAmBD,CA3BD;;AA6BA,eAAeJ,mBAAf;AAEAA,mBAAmB,CAACM,SAApB,GAAgC;AAC9BH,EAAAA,UAAU,EAAE1B,SAAS,CAAC8B,MAAV,CAAiBC,UADC;AAE9BvB,EAAAA,KAAK,EAAER,SAAS,CAACgC,MAAV,CAAiBD,UAFM;AAG9BJ,EAAAA,QAAQ,EAAE3B,SAAS,CAAC8B,MAAV,CAAiBC,UAHG;AAI9BxB,EAAAA,EAAE,EAAEP,SAAS,CAAC8B,MAAV,CAAiBC,UAJS;AAK9BT,EAAAA,YAAY,EAAEtB,SAAS,CAACiC,IAAV,CAAeF,UALC;AAM9BzB,EAAAA,WAAW,EAAEN,SAAS,CAAC8B,MAAV,CAAiBC;AANA,CAAhC","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './IngredientsCheckbox.css';\n\nconst riskIngredient = (textDecorationState, setCheckState, setTextDecorationState) => {\n  if (textDecorationState === 'line-through') {\n    setCheckState(false);\n    return setTextDecorationState('');\n  }\n  setCheckState(true);\n  return setTextDecorationState('line-through');\n};\n\nconst localStorageProgress = (englishType, id, index) => {\n  const inProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  if (inProgress[englishType][id].some((e) => e === index)) {\n    const newArr = [...inProgress[englishType][id]].filter((e) => e !== index);\n    const inProgressRecipes = {\n      ...inProgress,\n      [englishType]: { ...inProgress[englishType], [id]: newArr },\n    };\n    return localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes));\n  }\n  const inProgressRecipes = {\n    ...inProgress,\n    [englishType]: { ...inProgress[englishType], [id]: [...inProgress[englishType][id], index] },\n  };\n  return localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes));\n};\n\nconst kkk = () => {\n  if (\n    JSON.parse(localStorage.getItem('inProgressRecipes'))[englishType][id].some((e) => e === index)\n  ) {\n    setCheckState(true);\n    finishButton(englishType, id, index);\n    setTextDecorationState('line-through');\n  }\n}\n\nconst IngredientsCheckbox = (props) => {\n  const [textDecorationState, setTextDecorationState] = useState('');\n  const [checkState, setCheckState] = useState(false);\n  const { ingredient, index, quantity, id, finishButton, englishType } = props;\n  // useEffect(() => {\n\n  // }, []);\n\n  return (\n    <div className=\"checkbox-container\" data-testid={`${index}-ingredient-step`}>\n      <div className=\"checkbox-igredients\">\n        <label style={{ textDecoration: textDecorationState }} htmlFor={ingredient}>\n          <input\n            type=\"checkbox\"\n            checked={kkk()}\n            onChange={() => {\n              riskIngredient(textDecorationState, setCheckState, setTextDecorationState);\n              localStorageProgress(englishType, id, index);\n              finishButton();\n            }}\n            id={ingredient}\n          />\n          {ingredient} - {quantity}\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default IngredientsCheckbox;\n\nIngredientsCheckbox.propTypes = {\n  ingredient: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  quantity: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  finishButton: PropTypes.func.isRequired,\n  englishType: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}