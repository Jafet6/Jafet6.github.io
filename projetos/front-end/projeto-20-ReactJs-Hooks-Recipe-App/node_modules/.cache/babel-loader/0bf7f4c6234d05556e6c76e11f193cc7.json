{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-recipes-app-03/src/pages/RecipesInProgress/RecipeInProgressProvider.js\";\nimport React, { createContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport destructureAPI from '../../untils/destructureObject';\nexport const RecipeInProgressContext = createContext();\nexport const RecipeInProgressProvider = ({\n  children\n}) => {\n  const [recipeData, setRecipeData] = useState({});\n  const [providerRecommended, setProviderRecommended] = useState([]); // console.log(recipeData);\n\n  const setRecipeDataFunc = data => setRecipeData(destructureAPI(data));\n\n  const setProviderRecommendedFunc = recommendedData => {\n    const sixRecommended = recommendedData.map(recommended => destructureAPI(recommended)).slice(0, 6);\n    setProviderRecommended(sixRecommended);\n  };\n\n  const recipesInProgressObj = {\n    recipeData,\n    setRecipeDataFunc,\n    providerRecommended,\n    setProviderRecommendedFunc\n  };\n  return /*#__PURE__*/React.createElement(RecipeInProgressContext.Provider, {\n    value: recipesInProgressObj,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, children);\n};\nRecipeInProgressProvider.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired\n};","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-recipes-app-03/src/pages/RecipesInProgress/RecipeInProgressProvider.js"],"names":["React","createContext","useState","PropTypes","destructureAPI","RecipeInProgressContext","RecipeInProgressProvider","children","recipeData","setRecipeData","providerRecommended","setProviderRecommended","setRecipeDataFunc","data","setProviderRecommendedFunc","recommendedData","sixRecommended","map","recommended","slice","recipesInProgressObj","propTypes","oneOfType","arrayOf","node","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AAEA,OAAO,MAAMC,uBAAuB,GAAGJ,aAAa,EAA7C;AAEP,OAAO,MAAMK,wBAAwB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACxD,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACQ,mBAAD,EAAsBC,sBAAtB,IAAgDT,QAAQ,CAAC,EAAD,CAA9D,CAFwD,CAGxD;;AACA,QAAMU,iBAAiB,GAAIC,IAAD,IAAUJ,aAAa,CAACL,cAAc,CAACS,IAAD,CAAf,CAAjD;;AACA,QAAMC,0BAA0B,GAAIC,eAAD,IAAqB;AACtD,UAAMC,cAAc,GAAGD,eAAe,CACnCE,GADoB,CACfC,WAAD,IAAiBd,cAAc,CAACc,WAAD,CADf,EAC8BC,KAD9B,CACoC,CADpC,EACuC,CADvC,CAAvB;AAEAR,IAAAA,sBAAsB,CAACK,cAAD,CAAtB;AACD,GAJD;;AAMA,QAAMI,oBAAoB,GAAG;AAC3BZ,IAAAA,UAD2B;AAE3BI,IAAAA,iBAF2B;AAG3BF,IAAAA,mBAH2B;AAI3BI,IAAAA;AAJ2B,GAA7B;AAOA,sBACE,oBAAC,uBAAD,CAAyB,QAAzB;AAAkC,IAAA,KAAK,EAAEM,oBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,QADH,CADF;AAKD,CAvBM;AAyBPD,wBAAwB,CAACe,SAAzB,GAAqC;AACnCd,EAAAA,QAAQ,EAAEJ,SAAS,CAACmB,SAAV,CAAoB,CAC5BnB,SAAS,CAACoB,OAAV,CAAkBpB,SAAS,CAACqB,IAA5B,CAD4B,EAE5BrB,SAAS,CAACqB,IAFkB,CAApB,EAGPC;AAJgC,CAArC","sourcesContent":["import React, { createContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport destructureAPI from '../../untils/destructureObject';\n\nexport const RecipeInProgressContext = createContext();\n\nexport const RecipeInProgressProvider = ({ children }) => {\n  const [recipeData, setRecipeData] = useState({});\n  const [providerRecommended, setProviderRecommended] = useState([]);\n  // console.log(recipeData);\n  const setRecipeDataFunc = (data) => setRecipeData(destructureAPI(data));\n  const setProviderRecommendedFunc = (recommendedData) => {\n    const sixRecommended = recommendedData\n      .map((recommended) => destructureAPI(recommended)).slice(0, 6);\n    setProviderRecommended(sixRecommended);\n  };\n\n  const recipesInProgressObj = {\n    recipeData,\n    setRecipeDataFunc,\n    providerRecommended,\n    setProviderRecommendedFunc,\n  };\n\n  return (\n    <RecipeInProgressContext.Provider value={recipesInProgressObj}>\n      {children}\n    </RecipeInProgressContext.Provider>\n  );\n};\n\nRecipeInProgressProvider.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}