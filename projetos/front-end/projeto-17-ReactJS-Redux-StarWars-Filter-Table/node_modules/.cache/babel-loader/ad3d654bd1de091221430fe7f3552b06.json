{"ast":null,"code":"import apiSWRequest from '../service/apiSWRequest';\nexport const API_REQUEST = 'API_REQUEST';\nexport const API_RECEIVE_SUCCESS = 'API_RECEIVE_SUCCESS';\nexport const API_RECEIVE_FAILURE = 'API_RECEIVE_FAILURE';\n\nconst apiRequestControl = () => ({\n  type: API_REQUEST\n});\n\nconst receiveApiDataSuccess = ({\n  results\n}) => ({\n  type: API_RECEIVE_SUCCESS,\n  data: results\n});\n\nconst receiveApiDataFailure = error => ({\n  type: API_RECEIVE_FAILURE,\n  errorMessage: error\n});\n\nexport function getApiDataSw() {\n  return dispatch => {\n    dispatch(apiRequestControl());\n    return apiSWRequest().then(dataSW => dispatch(receiveApiDataSuccess(dataSW)), error => dispatch(receiveApiDataFailure(error.message)));\n  };\n}","map":{"version":3,"sources":["/home/jafet/curso-Trybe/projetos/projeto-17-ReactJS-StarWars-Filter-Table/src/actions/apiSWAction.js"],"names":["apiSWRequest","API_REQUEST","API_RECEIVE_SUCCESS","API_RECEIVE_FAILURE","apiRequestControl","type","receiveApiDataSuccess","results","data","receiveApiDataFailure","error","errorMessage","getApiDataSw","dispatch","then","dataSW","message"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,yBAAzB;AAEA,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;;AAEP,MAAMC,iBAAiB,GAAG,OAAO;AAC/BC,EAAAA,IAAI,EAAEJ;AADyB,CAAP,CAA1B;;AAIA,MAAMK,qBAAqB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAkB;AAC9CF,EAAAA,IAAI,EAAEH,mBADwC;AAE9CM,EAAAA,IAAI,EAAED;AAFwC,CAAlB,CAA9B;;AAKA,MAAME,qBAAqB,GAAIC,KAAD,KAAY;AACxCL,EAAAA,IAAI,EAAEF,mBADkC;AAExCQ,EAAAA,YAAY,EAAED;AAF0B,CAAZ,CAA9B;;AAKA,OAAO,SAASE,YAAT,GAAwB;AAC7B,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACT,iBAAiB,EAAlB,CAAR;AAEA,WAAOJ,YAAY,GAChBc,IADI,CAEFC,MAAD,IAAYF,QAAQ,CAACP,qBAAqB,CAACS,MAAD,CAAtB,CAFjB,EAGFL,KAAD,IAAWG,QAAQ,CAACJ,qBAAqB,CAACC,KAAK,CAACM,OAAP,CAAtB,CAHhB,CAAP;AAKD,GARD;AASD","sourcesContent":["import apiSWRequest from '../service/apiSWRequest';\n\nexport const API_REQUEST = 'API_REQUEST';\nexport const API_RECEIVE_SUCCESS = 'API_RECEIVE_SUCCESS';\nexport const API_RECEIVE_FAILURE = 'API_RECEIVE_FAILURE';\n\nconst apiRequestControl = () => ({\n  type: API_REQUEST,\n});\n\nconst receiveApiDataSuccess = ({ results }) => ({\n  type: API_RECEIVE_SUCCESS,\n  data: results,\n});\n\nconst receiveApiDataFailure = (error) => ({\n  type: API_RECEIVE_FAILURE,\n  errorMessage: error,\n});\n\nexport function getApiDataSw() {\n  return (dispatch) => {\n    dispatch(apiRequestControl());\n\n    return apiSWRequest()\n      .then(\n        (dataSW) => dispatch(receiveApiDataSuccess(dataSW)),\n        (error) => dispatch(receiveApiDataFailure(error.message)),\n      );\n  };\n}\n"]},"metadata":{},"sourceType":"module"}