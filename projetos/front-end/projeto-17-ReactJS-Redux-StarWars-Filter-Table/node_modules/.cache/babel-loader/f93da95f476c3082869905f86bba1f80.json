{"ast":null,"code":"var _jsxFileName = \"/home/jafet/curso-Trybe/projetos/projeto-17-ReactJS-StarWars-Filter-Table/src/components/Inputs.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { filterByNameAction } from '../actions/filterByNameAction';\nimport { filtersNameAction } from '../actions/filtersNameAction';\nimport { filterByNumericValuesAction } from '../actions/filterByNumericValuesAction';\nimport { choosedColToSortAction } from '../actions/choosedColToSortAction';\n\nclass Inputs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      column: 'all',\n      comparison: '',\n      value: '',\n      sortType: '',\n      sortColumn: ''\n    };\n    this.onChangeText = this.onChangeText.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.numericFilter = this.numericFilter.bind(this);\n  }\n\n  onChangeText(event) {\n    const {\n      value\n    } = event.target;\n    const {\n      filterByName\n    } = this.props;\n    filterByName(value);\n  }\n\n  handleChange(event) {\n    const {\n      value,\n      name\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  searchbar() {\n    const {\n      typedText\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"searchbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"name-filter\",\n      type: \"text\",\n      onChange: this.onChangeText,\n      id: \"searchbar\",\n      name: \"searchbar\",\n      value: typedText,\n      placeholder: \"Digite um nome de planeta\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  numericSearchCol() {\n    const {\n      column\n    } = this.state;\n    const {\n      allFiltersArr\n    } = this.props; // console.log(allFiltersArr)\n\n    return /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.handleChange,\n      value: column,\n      name: \"column\",\n      \"data-testid\": \"column-filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, allFiltersArr.map(e => /*#__PURE__*/React.createElement(\"option\", {\n      key: e,\n      value: e,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 36\n      }\n    }, e)));\n  }\n\n  numericSearchGreat() {\n    const {\n      comparison\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.handleChange,\n      value: comparison,\n      name: \"comparison\",\n      \"data-testid\": \"comparison-filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"maior que\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, \"maior que\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"igual a\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, \"igual a\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"menor que\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, \"menor que\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  numericSearchValue() {\n    const {\n      value\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"numericValue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"value-filter\",\n      type: \"number\",\n      onChange: this.handleChange,\n      id: \"numericValue\",\n      name: \"value\",\n      value: value,\n      placeholder: \"Digite um valor n\\xFAmerico\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  displayFilterName() {\n    const {\n      allFiltersArr,\n      changeFiltersDisplay\n    } = this.props;\n    const {\n      column\n    } = this.state;\n    const index = allFiltersArr.indexOf(column);\n    const newArr = [...allFiltersArr];\n    newArr.splice(index, 1);\n    changeFiltersDisplay(newArr);\n  }\n\n  numericFilter() {\n    const {\n      column,\n      value,\n      comparison\n    } = this.state;\n    const {\n      filterByNumericValues\n    } = this.props;\n    const newObj = {\n      column,\n      value,\n      comparison\n    };\n    this.setState({\n      column: '',\n      value: '',\n      comparison: ''\n    });\n    filterByNumericValues(newObj);\n    this.displayFilterName();\n  }\n\n  numericFilterButton() {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      \"data-testid\": \"button-filter\",\n      type: \"button\",\n      onClick: this.numericFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }, \"Search\");\n  }\n\n  colToSort() {\n    const {\n      sortColumn\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"column-sort\",\n      value: sortColumn,\n      name: \"sortColumn\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }, \"name\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"rotation_period\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }, \"rotation_period\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"orbital_period\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }, \"orbital_period\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"diameter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }, \"diameter\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"gravity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }, \"gravity\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"surface_water\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }, \"surface_water\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"population\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, \"population\"));\n  }\n\n  radioDescAsc() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"desc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }\n    }, \"Descendente\", /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"column-sort-input\",\n      value: \"DESC\",\n      onClick: this.handleChange,\n      type: \"radio\",\n      name: \"sortType\",\n      id: \"desc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"asc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }\n    }, \"Ascendente\", /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"column-sort-input\",\n      value: \"ASC\",\n      onClick: this.handleChange,\n      type: \"radio\",\n      name: \"sortType\",\n      id: \"asc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  sortButton() {\n    const {\n      sortColumn,\n      sortType\n    } = this.state;\n    const {\n      choosedCol\n    } = this.props;\n    const sortObj = {\n      column: sortColumn,\n      sort: sortType\n    };\n    return /*#__PURE__*/React.createElement(\"button\", {\n      \"data-testid\": \"column-sort-button\",\n      type: \"button\",\n      onClick: () => choosedCol(sortObj),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 7\n      }\n    }, \"Sort Table\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }\n    }, this.searchbar(), this.numericSearchCol(), this.numericSearchGreat(), this.numericSearchValue(), this.numericFilterButton()), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }\n    }, this.colToSort(), this.radioDescAsc(), this.sortButton()));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  filterByName: text => dispatch(filterByNameAction(text)),\n  filterByNumericValues: obj => dispatch(filterByNumericValuesAction(obj)),\n  changeFiltersDisplay: arr => dispatch(filtersNameAction(arr)),\n  choosedCol: obj => dispatch(choosedColToSortAction(obj))\n});\n\nconst mapStateToProps = state => ({\n  dataSw: state.apiSWReducer.data,\n  isLoading: state.apiSWReducer.loading,\n  typedText: state.filters.filterByName.name,\n  numericSearched: state.filters.filterByNumericValues,\n  allFiltersArr: state.filtersArrReducer.allFilters\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Inputs);\nInputs.propTypes = {\n  typedText: PropTypes.string,\n  allFiltersArr: PropTypes.arrayOf(PropTypes.string).isRequired,\n  filterByName: PropTypes.func,\n  changeFiltersDisplay: PropTypes.func,\n  filterByNumericValues: PropTypes.func,\n  choosedCol: PropTypes.func\n};\nInputs.defaultProps = {\n  typedText: '',\n  filterByName: () => {},\n  filterByNumericValues: () => {},\n  changeFiltersDisplay: () => {},\n  choosedCol: () => {}\n};","map":{"version":3,"sources":["/home/jafet/curso-Trybe/projetos/projeto-17-ReactJS-StarWars-Filter-Table/src/components/Inputs.js"],"names":["React","connect","PropTypes","filterByNameAction","filtersNameAction","filterByNumericValuesAction","choosedColToSortAction","Inputs","Component","constructor","props","state","column","comparison","value","sortType","sortColumn","onChangeText","bind","handleChange","numericFilter","event","target","filterByName","name","setState","searchbar","typedText","numericSearchCol","allFiltersArr","map","e","numericSearchGreat","numericSearchValue","displayFilterName","changeFiltersDisplay","index","indexOf","newArr","splice","filterByNumericValues","newObj","numericFilterButton","colToSort","radioDescAsc","sortButton","choosedCol","sortObj","sort","render","mapDispatchToProps","dispatch","text","obj","arr","mapStateToProps","dataSw","apiSWReducer","data","isLoading","loading","filters","numericSearched","filtersArrReducer","allFilters","propTypes","string","arrayOf","isRequired","func","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { filterByNameAction } from '../actions/filterByNameAction';\nimport { filtersNameAction } from '../actions/filtersNameAction';\nimport { filterByNumericValuesAction } from '../actions/filterByNumericValuesAction';\nimport { choosedColToSortAction } from '../actions/choosedColToSortAction';\n\n\nclass Inputs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      column: 'all',\n      comparison: '',\n      value: '',\n      sortType: '',\n      sortColumn: '',\n    };\n    this.onChangeText = this.onChangeText.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.numericFilter = this.numericFilter.bind(this);\n  }\n\n  onChangeText(event) {\n    const { value } = event.target;\n    const { filterByName } = this.props;\n    filterByName(value);\n  }\n\n  handleChange(event) {\n    const { value, name } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  searchbar() {\n    const { typedText } = this.props;\n    return (\n      <div>\n        <label htmlFor=\"searchbar\">\n          <input\n            data-testid=\"name-filter\"\n            type=\"text\"\n            onChange={this.onChangeText}\n            id=\"searchbar\"\n            name=\"searchbar\"\n            value={typedText}\n            placeholder=\"Digite um nome de planeta\"\n          />\n        </label>\n      </div>\n    );\n  }\n\n  numericSearchCol() {\n    const { column } = this.state;\n    const { allFiltersArr } = this.props;\n    // console.log(allFiltersArr)\n    return (\n      <select onChange={this.handleChange} value={column} name=\"column\" data-testid=\"column-filter\">\n        {allFiltersArr.map((e) => (<option key={e} value={e}>{e}</option>))}\n      </select>\n    );\n  }\n\n  numericSearchGreat() {\n    const { comparison } = this.state;\n    return (\n      <select\n        onChange={this.handleChange}\n        value={comparison}\n        name=\"comparison\"\n        data-testid=\"comparison-filter\"\n      >\n        <option value=\"maior que\">maior que</option>\n        <option value=\"igual a\">igual a</option>\n        <option value=\"menor que\">menor que</option>\n        <option value=\"\" />\n      </select>\n    );\n  }\n\n  numericSearchValue() {\n    const { value } = this.state;\n    return (\n      <div>\n        <label htmlFor=\"numericValue\">\n          <input\n            data-testid=\"value-filter\"\n            type=\"number\"\n            onChange={this.handleChange}\n            id=\"numericValue\"\n            name=\"value\"\n            value={value}\n            placeholder=\"Digite um valor númerico\"\n          />\n        </label>\n      </div>\n    );\n  }\n\n  displayFilterName() {\n    const { allFiltersArr, changeFiltersDisplay } = this.props;\n    const { column } = this.state;\n    const index = allFiltersArr.indexOf(column);\n    const newArr = [...allFiltersArr];\n    newArr.splice(index, 1);\n    changeFiltersDisplay(newArr);\n  }\n\n  numericFilter() {\n    const { column, value, comparison } = this.state;\n    const { filterByNumericValues } = this.props;\n    const newObj = { column, value, comparison };\n    this.setState({ column: '', value: '', comparison: '' });\n    filterByNumericValues(newObj);\n    this.displayFilterName();\n  }\n\n  numericFilterButton() {\n    return (\n      <button data-testid=\"button-filter\" type=\"button\" onClick={this.numericFilter}>\n        Search\n      </button>\n    );\n  }\n\n  colToSort() {\n    const { sortColumn } = this.state;\n    return (\n      <select\n        data-testid=\"column-sort\"\n        value={sortColumn}\n        name=\"sortColumn\"\n        onChange={this.handleChange}\n      >\n        <option value=\"name\">name</option>\n        <option value=\"rotation_period\">rotation_period</option>\n        <option value=\"orbital_period\">orbital_period</option>\n        <option value=\"diameter\">diameter</option>\n        <option value=\"gravity\">gravity</option>\n        <option value=\"surface_water\">surface_water</option>\n        <option value=\"population\">population</option>\n      </select>\n    );\n  }\n\n  radioDescAsc() {\n    return (\n      <div>\n        <label htmlFor=\"desc\">\n          Descendente\n          <input\n            data-testid=\"column-sort-input\"\n            value=\"DESC\"\n            onClick={this.handleChange}\n            type=\"radio\"\n            name=\"sortType\"\n            id=\"desc\"\n          />\n        </label>\n        <label htmlFor=\"asc\">\n          Ascendente\n          <input\n            data-testid=\"column-sort-input\"\n            value=\"ASC\"\n            onClick={this.handleChange}\n            type=\"radio\"\n            name=\"sortType\"\n            id=\"asc\"\n          />\n        </label>\n      </div>\n    );\n  }\n\n  sortButton() {\n    const { sortColumn, sortType } = this.state;\n    const { choosedCol } = this.props;\n    const sortObj = { column: sortColumn, sort: sortType };\n    return (\n      <button data-testid=\"column-sort-button\" type=\"button\" onClick={() => choosedCol(sortObj)}>\n        Sort Table\n      </button>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          {this.searchbar()}\n          {this.numericSearchCol()}\n          {this.numericSearchGreat()}\n          {this.numericSearchValue()}\n          {this.numericFilterButton()}\n        </div>\n        <div>\n          {this.colToSort()}\n          {this.radioDescAsc()}\n          {this.sortButton()}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  filterByName: (text) => dispatch(filterByNameAction(text)),\n  filterByNumericValues: (obj) => dispatch(filterByNumericValuesAction(obj)),\n  changeFiltersDisplay: (arr) => dispatch(filtersNameAction(arr)),\n  choosedCol: (obj) => dispatch(choosedColToSortAction(obj)),\n});\n\nconst mapStateToProps = (state) => ({\n  dataSw: state.apiSWReducer.data,\n  isLoading: state.apiSWReducer.loading,\n  typedText: state.filters.filterByName.name,\n  numericSearched: state.filters.filterByNumericValues,\n  allFiltersArr: state.filtersArrReducer.allFilters,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Inputs);\n\nInputs.propTypes = {\n  typedText: PropTypes.string,\n  allFiltersArr: PropTypes.arrayOf(PropTypes.string).isRequired,\n  filterByName: PropTypes.func,\n  changeFiltersDisplay: PropTypes.func,\n  filterByNumericValues: PropTypes.func,\n  choosedCol: PropTypes.func,\n};\n\nInputs.defaultProps = {\n  typedText: '',\n  filterByName: () => {},\n  filterByNumericValues: () => {},\n  changeFiltersDisplay: () => {},\n  choosedCol: () => {},\n};\n"]},"metadata":{},"sourceType":"module"}