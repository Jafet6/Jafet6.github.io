{"ast":null,"code":"var _jsxFileName = \"/home/jafet/\\xC1rea de Trabalho/sd-03-block17-project-react-redux-starwars-database-filters-Jafet6-react-redux-starwars-datatable-filters (2)/src/components/Table.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport TableHeaders from './TableHeaders';\nimport Inputs from './Inputs';\nimport SelectedFilters from './SelectedFilters';\nimport TableData from './TableData';\nimport { filterByNameAction } from '../actions/filterByNameAction';\nimport { filterByNumericValuesAction } from '../actions/filterByNumericValuesAction';\n\nconst greaterThan = (column, value, obj) => {\n  if (!(Number(obj[column]) > Number(value))) return false;\n  return true;\n};\n\nconst lessThan = (column, value, obj) => {\n  if (!(Number(obj[column]) < Number(value))) return false;\n  return true;\n};\n\nconst equal = (column, value, obj) => {\n  if (!(Number(obj[column]) === Number(value))) return false;\n  return true;\n};\n\nconst GreaterLessEqual = (operator, column, value, obj) => {\n  switch (operator) {\n    case 'maior que':\n      return greaterThan(column, value, obj);\n\n    case 'menor que':\n      return lessThan(column, value, obj);\n\n    case 'igual a':\n      return equal(column, value, obj);\n\n    default:\n      return true;\n  }\n};\n\nclass Table extends React.Component {\n  helperFunction(obj) {\n    const {\n      typedText,\n      numericSearched\n    } = this.props;\n    if (!obj.name.toLowerCase().includes(typedText.toLowerCase()) && typedText !== '') return false;\n\n    for (let i = 0; i < numericSearched.length; i += 1) {\n      const {\n        column,\n        value,\n        comparison\n      } = numericSearched[i];\n      if (!GreaterLessEqual(comparison, column, value, obj)) return false;\n    }\n\n    return true;\n  }\n\n  dataFilterFunction() {\n    const {\n      dataSw,\n      typedText,\n      numericSearched\n    } = this.props;\n    const newArrToFilter = [...dataSw];\n\n    if (typedText !== '' || numericSearched.length > 0) {\n      return newArrToFilter.reduce((acc, planetObj) => {\n        if (this.helperFunction(planetObj)) acc.push(planetObj);\n        return acc;\n      }, []);\n    }\n\n    return dataSw;\n  }\n\n  sortDescColName(columnLowerCase) {\n    const dataFiltered = this.dataFilterFunction();\n    return dataFiltered.sort(function (a, b) {\n      if (a[columnLowerCase] < b[columnLowerCase]) return 1;\n      if (a[columnLowerCase] > b[columnLowerCase]) return -1;\n      return 0;\n    });\n  }\n\n  sortDescCol() {\n    const {\n      sortCol\n    } = this.props;\n    const {\n      column\n    } = sortCol;\n    const columnLowerCase = column.toLowerCase();\n    const dataFiltered = this.dataFilterFunction();\n    return dataFiltered.sort(function (a, b) {\n      if (columnLowerCase === 'name') {\n        return this.sortDescColName(columnLowerCase);\n      }\n\n      if (Number(a[columnLowerCase]) < Number(b[columnLowerCase])) return 1;\n      if (Number(a[columnLowerCase]) > Number(b[columnLowerCase])) return -1;\n      return 0;\n    });\n  }\n\n  sortAscColWithoutName(columnLowerCase) {\n    const dataFiltered = this.dataFilterFunction();\n    return dataFiltered.sort(function (a, b) {\n      if (Number(a[columnLowerCase]) > Number(b[columnLowerCase])) return 1;\n      if (Number(a[columnLowerCase]) < Number(b[columnLowerCase])) return -1;\n      return 0;\n    });\n  }\n\n  sortAscCol() {\n    const {\n      sortCol\n    } = this.props;\n    const {\n      column\n    } = sortCol;\n    const columnLowerCase = column.toLowerCase();\n    const dataFiltered = this.dataFilterFunction();\n    return dataFiltered.sort(function (a, b) {\n      if (columnLowerCase === 'name') {\n        if (a[columnLowerCase] > b[columnLowerCase]) return 1;\n        if (a[columnLowerCase] < b[columnLowerCase]) return -1;\n        return 0;\n      }\n\n      return this.sortAscColWithoutName(columnLowerCase); // if (Number(a[columnLowerCase]) > Number(b[columnLowerCase])) return 1;\n      // if (Number(a[columnLowerCase]) < Number(b[columnLowerCase])) return -1;\n      // return 0;\n    });\n  }\n\n  dataSortFunction() {\n    const {\n      sortCol\n    } = this.props;\n    if (sortCol.sort === 'DESC') return this.sortDescCol();\n    return this.sortAscCol();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Inputs, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(SelectedFilters, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableHeaders, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TableData, {\n      dataSw: this.dataSortFunction(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  filterByName: text => dispatch(filterByNameAction(text)),\n  filterByNumericValues: obj => dispatch(filterByNumericValuesAction(obj))\n});\n\nconst mapStateToProps = state => ({\n  dataSw: state.apiSWReducer.data,\n  isLoading: state.apiSWReducer.loading,\n  typedText: state.filters.filterByName.name,\n  numericSearched: state.filters.filterByNumericValues,\n  sortCol: state.filters.order\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\nTable.propTypes = {\n  typedText: PropTypes.string,\n  dataSw: PropTypes.arrayOf(PropTypes.object),\n  numericSearched: PropTypes.arrayOf(PropTypes.object),\n  sortCol: PropTypes.objectOf(PropTypes.any)\n};\nTable.defaultProps = {\n  typedText: '',\n  dataSw: [],\n  numericSearched: {},\n  sortCol: {}\n};","map":{"version":3,"sources":["/home/jafet/√Årea de Trabalho/sd-03-block17-project-react-redux-starwars-database-filters-Jafet6-react-redux-starwars-datatable-filters (2)/src/components/Table.js"],"names":["React","connect","PropTypes","Header","TableHeaders","Inputs","SelectedFilters","TableData","filterByNameAction","filterByNumericValuesAction","greaterThan","column","value","obj","Number","lessThan","equal","GreaterLessEqual","operator","Table","Component","helperFunction","typedText","numericSearched","props","name","toLowerCase","includes","i","length","comparison","dataFilterFunction","dataSw","newArrToFilter","reduce","acc","planetObj","push","sortDescColName","columnLowerCase","dataFiltered","sort","a","b","sortDescCol","sortCol","sortAscColWithoutName","sortAscCol","dataSortFunction","render","mapDispatchToProps","dispatch","filterByName","text","filterByNumericValues","mapStateToProps","state","apiSWReducer","data","isLoading","loading","filters","order","propTypes","string","arrayOf","object","objectOf","any","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport TableHeaders from './TableHeaders';\nimport Inputs from './Inputs';\nimport SelectedFilters from './SelectedFilters';\nimport TableData from './TableData';\nimport { filterByNameAction } from '../actions/filterByNameAction';\nimport { filterByNumericValuesAction } from '../actions/filterByNumericValuesAction';\n\nconst greaterThan = (column, value, obj) => {\n  if (!(Number(obj[column]) > Number(value))) return false;\n  return true;\n};\n\nconst lessThan = (column, value, obj) => {\n  if (!(Number(obj[column]) < Number(value))) return false;\n  return true;\n};\n\nconst equal = (column, value, obj) => {\n  if (!(Number(obj[column]) === Number(value))) return false;\n  return true;\n};\n\nconst GreaterLessEqual = (operator, column, value, obj) => {\n  switch (operator) {\n    case 'maior que':\n      return greaterThan(column, value, obj);\n    case 'menor que':\n      return lessThan(column, value, obj);\n    case 'igual a':\n      return equal(column, value, obj);\n    default:\n      return true;\n  }\n};\n\nclass Table extends React.Component {\n  helperFunction(obj) {\n    const { typedText, numericSearched } = this.props;\n    if (!obj.name.toLowerCase().includes(typedText.toLowerCase()) && typedText !== '') return false;\n    for (let i = 0; i < numericSearched.length; i += 1) {\n      const { column, value, comparison } = numericSearched[i];\n      if (!GreaterLessEqual(comparison, column, value, obj)) return false;\n    }\n    return true;\n  }\n\n  dataFilterFunction() {\n    const { dataSw, typedText, numericSearched } = this.props;\n    const newArrToFilter = [...dataSw];\n    if (typedText !== '' || numericSearched.length > 0) {\n      return newArrToFilter.reduce((acc, planetObj) => {\n        if (this.helperFunction(planetObj)) acc.push(planetObj);\n        return acc;\n      }, []);\n    }\n    return dataSw;\n  }\n\n  sortDescColName(columnLowerCase) {\n    const dataFiltered = this.dataFilterFunction();\n    return dataFiltered.sort(function (a, b) {\n      if (a[columnLowerCase] < b[columnLowerCase]) return 1;\n      if (a[columnLowerCase] > b[columnLowerCase]) return -1;\n      return 0;\n    });\n  }\n\n  sortDescCol() {\n    const { sortCol } = this.props;\n    const { column } = sortCol;\n    const columnLowerCase = column.toLowerCase();\n    const dataFiltered = this.dataFilterFunction();\n    return dataFiltered.sort(function (a, b) {\n      if (columnLowerCase === 'name') {\n        return this.sortDescColName(columnLowerCase);\n      }\n      if (Number(a[columnLowerCase]) < Number(b[columnLowerCase])) return 1;\n      if (Number(a[columnLowerCase]) > Number(b[columnLowerCase])) return -1;\n      return 0;\n    });\n  }\n\n  sortAscColWithoutName(columnLowerCase) {\n    const dataFiltered = this.dataFilterFunction();\n    return dataFiltered.sort(function (a, b) {\n      if (Number(a[columnLowerCase]) > Number(b[columnLowerCase])) return 1;\n      if (Number(a[columnLowerCase]) < Number(b[columnLowerCase])) return -1;\n      return 0;\n    });\n  }\n\n  sortAscCol() {\n    const { sortCol } = this.props;\n    const { column } = sortCol;\n    const columnLowerCase = column.toLowerCase();\n    const dataFiltered = this.dataFilterFunction();\n    return dataFiltered.sort(function (a, b) {\n      if (columnLowerCase === 'name') {\n        if (a[columnLowerCase] > b[columnLowerCase]) return 1;\n        if (a[columnLowerCase] < b[columnLowerCase]) return -1;\n        return 0;\n      }\n      return this.sortAscColWithoutName(columnLowerCase);\n      // if (Number(a[columnLowerCase]) > Number(b[columnLowerCase])) return 1;\n      // if (Number(a[columnLowerCase]) < Number(b[columnLowerCase])) return -1;\n      // return 0;\n    });\n  }\n\n  dataSortFunction() {\n    const { sortCol } = this.props;\n    if (sortCol.sort === 'DESC') return this.sortDescCol();\n    return this.sortAscCol();\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <Inputs />\n        <SelectedFilters />\n        <table>\n          <TableHeaders />\n          <TableData dataSw={this.dataSortFunction()} />\n        </table>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  filterByName: (text) => dispatch(filterByNameAction(text)),\n  filterByNumericValues: (obj) => dispatch(filterByNumericValuesAction(obj)),\n});\n\nconst mapStateToProps = (state) => ({\n  dataSw: state.apiSWReducer.data,\n  isLoading: state.apiSWReducer.loading,\n  typedText: state.filters.filterByName.name,\n  numericSearched: state.filters.filterByNumericValues,\n  sortCol: state.filters.order,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n\nTable.propTypes = {\n  typedText: PropTypes.string,\n  dataSw: PropTypes.arrayOf(PropTypes.object),\n  numericSearched: PropTypes.arrayOf(PropTypes.object),\n  sortCol: PropTypes.objectOf(PropTypes.any),\n};\n\nTable.defaultProps = {\n  typedText: '',\n  dataSw: [],\n  numericSearched: {},\n  sortCol: {},\n};\n"]},"metadata":{},"sourceType":"module"}