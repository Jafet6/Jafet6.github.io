{"ast":null,"code":"var _jsxFileName = \"/home/jafet/\\xC1rea de Trabalho/sd-03-block17-project-react-redux-starwars-database-filters-Jafet6-react-redux-starwars-datatable-filters (2)/src/App.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getApiDataSw } from './actions/apiSWAction';\nimport Table from './components/Table';\nimport './App.css';\n\nclass App extends React.Component {\n  componentDidMount() {\n    const {\n      apiRequestDispatch\n    } = this.props;\n    apiRequestDispatch();\n  }\n\n  render() {\n    const {\n      isLoading\n    } = this.props;\n\n    if (!isLoading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, \"Loading...\");\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  apiRequestDispatch: () => dispatch(getApiDataSw())\n});\n\nconst mapStateToProps = state => ({\n  dataSw: state.apiSWReducer.data,\n  isLoading: state.apiSWReducer.loading\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\nApp.propTypes = {\n  apiRequestDispatch: PropTypes.func,\n  isLoading: PropTypes.bool\n};\nApp.defaultProps = {\n  apiRequestDispatch: () => {},\n  isLoading: true\n};","map":{"version":3,"sources":["/home/jafet/√Årea de Trabalho/sd-03-block17-project-react-redux-starwars-database-filters-Jafet6-react-redux-starwars-datatable-filters (2)/src/App.js"],"names":["React","PropTypes","connect","getApiDataSw","Table","App","Component","componentDidMount","apiRequestDispatch","props","render","isLoading","mapDispatchToProps","dispatch","mapStateToProps","state","dataSw","apiSWReducer","data","loading","propTypes","func","bool","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAChCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAyB,KAAKC,KAApC;AACAD,IAAAA,kBAAkB;AACnB;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAgB,KAAKF,KAA3B;;AACA,QAAI,CAACE,SAAL,EAAgB;AACd,0BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;;AACD,wBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAR;AACD;;AAhB+B;;AAmBlC,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCL,EAAAA,kBAAkB,EAAE,MAAMK,QAAQ,CAACV,YAAY,EAAb;AADM,CAAf,CAA3B;;AAIA,MAAMW,eAAe,GAAIC,KAAD,KAAY;AAClCC,EAAAA,MAAM,EAAED,KAAK,CAACE,YAAN,CAAmBC,IADO;AAElCP,EAAAA,SAAS,EAAEI,KAAK,CAACE,YAAN,CAAmBE;AAFI,CAAZ,CAAxB;;AAKA,eAAejB,OAAO,CAACY,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CP,GAA7C,CAAf;AAEAA,GAAG,CAACe,SAAJ,GAAgB;AACdZ,EAAAA,kBAAkB,EAAEP,SAAS,CAACoB,IADhB;AAEdV,EAAAA,SAAS,EAAEV,SAAS,CAACqB;AAFP,CAAhB;AAKAjB,GAAG,CAACkB,YAAJ,GAAmB;AACjBf,EAAAA,kBAAkB,EAAE,MAAM,CAAE,CADX;AAEjBG,EAAAA,SAAS,EAAE;AAFM,CAAnB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getApiDataSw } from './actions/apiSWAction';\nimport Table from './components/Table';\nimport './App.css';\n\nclass App extends React.Component {\n  componentDidMount() {\n    const { apiRequestDispatch } = this.props;\n    apiRequestDispatch();\n  }\n\n  render() {\n    const { isLoading } = this.props;\n    if (!isLoading) {\n      return (\n        <div className=\"App\">\n          <Table />\n        </div>\n      );\n    }\n    return (<span>Loading...</span>);\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  apiRequestDispatch: () => dispatch(getApiDataSw()),\n});\n\nconst mapStateToProps = (state) => ({\n  dataSw: state.apiSWReducer.data,\n  isLoading: state.apiSWReducer.loading,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nApp.propTypes = {\n  apiRequestDispatch: PropTypes.func,\n  isLoading: PropTypes.bool,\n};\n\nApp.defaultProps = {\n  apiRequestDispatch: () => {},\n  isLoading: true,\n};\n"]},"metadata":{},"sourceType":"module"}