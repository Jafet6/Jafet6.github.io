{"ast":null,"code":"var _jsxFileName = \"/home/jafet/exercise-tic-tac-toe/src/TicTacToe.js\";\nimport React from 'react';\nimport GameBoard from './GameBoard';\nimport './GameBoard.css';\n\nclass TicTacToe extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activePlayer: 1,\n      gameBoard: [991, 992, 993, 994, 995, 996, 997, 998, 999]\n    };\n    this.selectDiv = this.selectDiv.bind(this);\n  }\n\n  componentDidUpdate(_, prevState) {\n    const {\n      gameBoard\n    } = this.state;\n    if (gameBoard[0] === gameBoard[1] && gameBoard[0] === gameBoard[2] || gameBoard[3] === gameBoard[4] && gameBoard[3] === gameBoard[5] || gameBoard[6] === gameBoard[7] && gameBoard[6] === gameBoard[8]) return alert(`O vencedor foi o jogador: ${prevState.activePlayer}`);\n    if (gameBoard[0] === gameBoard[3] && gameBoard[0] === gameBoard[6] || gameBoard[1] === gameBoard[4] && gameBoard[1] === gameBoard[7] || gameBoard[2] === gameBoard[5] && gameBoard[2] === gameBoard[8]) return alert(`O vencedor foi o jogador: ${prevState.activePlayer}`);\n    if (gameBoard[0] === gameBoard[4] && gameBoard[0] === gameBoard[8] || gameBoard[2] === gameBoard[4] && gameBoard[2] === gameBoard[6]) return alert(`O vencedor foi o jogador: ${prevState.activePlayer}`);\n  }\n\n  selectDiv(id) {\n    const {\n      activePlayer,\n      gameBoard\n    } = this.state;\n    const arrCopied = gameBoard;\n    arrCopied[id] = activePlayer;\n\n    if (activePlayer === 1) {\n      return this.setState({\n        activePlayer: 2,\n        gameBoard: arrCopied\n      });\n    }\n\n    return this.setState({\n      activePlayer: 1,\n      gameBoard: arrCopied\n    });\n  } // Antes de começar a realizar o exercício,\n  // junte os dois outros exercícios na master (ou seja, mergeie as Pull Requests).\n  // Atualize essa branch com o git merge master.\n  // Adicione nesse arquivo a lógica para identificar\n  // quando que o jogo deve acabar. É necessário passar\n  // nos teste do arquivo exercise-3.test.js;\n  // Analise bem como que os teste são realizados \n  // para criar o que se pede.\n\n\n  render() {\n    const {\n      gameBoard\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"general-container\",\n      className: \"container-tic-tac-toe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GameBoard, {\n      handleClick: this.selectDiv,\n      gameState: gameBoard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default TicTacToe;","map":{"version":3,"sources":["/home/jafet/exercise-tic-tac-toe/src/TicTacToe.js"],"names":["React","GameBoard","TicTacToe","Component","constructor","props","state","activePlayer","gameBoard","selectDiv","bind","componentDidUpdate","_","prevState","alert","id","arrCopied","setState","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport GameBoard from './GameBoard';\nimport './GameBoard.css';\n\nclass TicTacToe extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activePlayer: 1,\n      gameBoard: [991, 992, 993, 994, 995, 996, 997, 998, 999],\n    };\n    this.selectDiv = this.selectDiv.bind(this);\n  }\n\n  componentDidUpdate(_, prevState) {\n    const { gameBoard } = this.state;\n    if (\n      (gameBoard[0] === gameBoard[1] && gameBoard[0] === gameBoard[2])\n      || (gameBoard[3] === gameBoard[4] && gameBoard[3] === gameBoard[5])\n      || (gameBoard[6] === gameBoard[7] && gameBoard[6] === gameBoard[8])\n      ) return alert(`O vencedor foi o jogador: ${prevState.activePlayer}`)\n    if (\n      (gameBoard[0] === gameBoard[3] && gameBoard[0] === gameBoard[6])\n      || (gameBoard[1] === gameBoard[4] && gameBoard[1] === gameBoard[7])\n      || (gameBoard[2] === gameBoard[5] && gameBoard[2] === gameBoard[8])\n      ) return alert(`O vencedor foi o jogador: ${prevState.activePlayer}`)\n    if (\n      (gameBoard[0] === gameBoard[4] && gameBoard[0] === gameBoard[8])\n      || (gameBoard[2] === gameBoard[4] && gameBoard[2] === gameBoard[6])\n      ) return alert(`O vencedor foi o jogador: ${prevState.activePlayer}`)\n  }\n\n  selectDiv(id) {\n    const { activePlayer, gameBoard } = this.state;\n    const arrCopied = gameBoard;\n    arrCopied[id] = activePlayer;\n    if (activePlayer === 1) {\n      return this.setState({\n        activePlayer: 2,\n        gameBoard: arrCopied,\n      });\n\n    }\n    return this.setState({\n      activePlayer: 1,\n      gameBoard: arrCopied,\n    });\n  }\n\n  // Antes de começar a realizar o exercício,\n  // junte os dois outros exercícios na master (ou seja, mergeie as Pull Requests).\n  // Atualize essa branch com o git merge master.\n\n  // Adicione nesse arquivo a lógica para identificar\n  // quando que o jogo deve acabar. É necessário passar\n  // nos teste do arquivo exercise-3.test.js;\n\n  // Analise bem como que os teste são realizados \n  // para criar o que se pede.\n\n  render() {\n    const { gameBoard } = this.state;\n    return (\n      <div data-testid=\"general-container\" className=\"container-tic-tac-toe\">\n        <GameBoard handleClick={this.selectDiv} gameState={gameBoard} />\n      </div>\n    )\n  }\n}\n\nexport default TicTacToe;\n"]},"metadata":{},"sourceType":"module"}