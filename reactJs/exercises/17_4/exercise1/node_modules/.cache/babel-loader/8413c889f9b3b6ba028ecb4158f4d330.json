{"ast":null,"code":"var _jsxFileName = \"/home/jafet/exercise-game-of-thrones-characters/src/components/CharacterInfo.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nclass CharacterInfo extends React.Component {\n  render() {\n    const {\n      character,\n      loading,\n      error\n    } = this.props;\n    console.log(this.props.loading);\n\n    if (!loading && character) {\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }\n      }, \"Name: \", character.name), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }\n      }, \"Gender: \", character.gender));\n    }\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }\n      }, error);\n    }\n\n    if (loading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 27\n        }\n      }, \"Loading...\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 12\n      }\n    }, \"Type a character name and click to search!\");\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => ({\n  character: state.apiGotReducer.character,\n  loading: state.apiGotReducer.loading,\n  error: state.apiGotReducer.error\n});\n\nexport default connect(mapStateToProps)(CharacterInfo); //faça as propTypes","map":{"version":3,"sources":["/home/jafet/exercise-game-of-thrones-characters/src/components/CharacterInfo.js"],"names":["React","connect","CharacterInfo","Component","render","character","loading","error","props","console","log","name","gender","mapStateToProps","state","apiGotReducer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,aAAN,SAA4BF,KAAK,CAACG,SAAlC,CAA4C;AAC1CC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,OAAb;AAAsBC,MAAAA;AAAtB,QAAgC,KAAKC,KAA3C;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAL,CAAWF,OAAvB;;AAEA,QAAI,CAACA,OAAD,IAAYD,SAAhB,EAA2B;AACzB,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAWA,SAAS,CAACM,IAArB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAaN,SAAS,CAACO,MAAvB,CAFF,CADF;AAQD;;AACD,QAAIL,KAAJ,EAAW;AAAE,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMA,KAAN,CAAP;AAA4B;;AACzC,QAAID,OAAJ,EAAa;AAAE,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AAA+B;;AAC9C,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAAP;AACD;;AAlByC;;AAmB3C;;AAED,MAAMO,eAAe,GAAIC,KAAD,KAAY;AAClCT,EAAAA,SAAS,EAAES,KAAK,CAACC,aAAN,CAAoBV,SADG;AAElCC,EAAAA,OAAO,EAAEQ,KAAK,CAACC,aAAN,CAAoBT,OAFK;AAGlCC,EAAAA,KAAK,EAAEO,KAAK,CAACC,aAAN,CAAoBR;AAHO,CAAZ,CAAxB;;AAOA,eAAeN,OAAO,CAACY,eAAD,CAAP,CAAyBX,aAAzB,CAAf,C,CAEA","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nclass CharacterInfo extends React.Component {\n  render() {\n    const { character, loading, error } = this.props;\n    console.log(this.props.loading);\n\n    if (!loading && character) {\n      return (\n        <ul>\n          <li>Name: {character.name}</li>\n          <li>Gender: {character.gender}</li>\n          {/* <li>Aliases: {character.aliases.map((alias, index) => <p key={`${alias}-${index}`}>{alias}</p>)}</li>\n          <li>Books: {character.books.map((book, index) => <p key={`${book}-${index}`}>{book}</p>)}</li> */}\n        </ul>\n      )\n    }\n    if (error) { return <div>{error}</div>; }\n    if (loading) { return <div>Loading...</div>; }\n    return <div>Type a character name and click to search!</div>;\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  character: state.apiGotReducer.character,\n  loading: state.apiGotReducer.loading,\n  error: state.apiGotReducer.error,\n})\n\n\nexport default connect(mapStateToProps)(CharacterInfo);\n\n//faça as propTypes\n"]},"metadata":{},"sourceType":"module"}